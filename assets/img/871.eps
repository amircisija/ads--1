%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: cartoon_banners_1_10.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/19/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 10723 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7FD68FF
%B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7BDFD68FFFD17B7
%C4FD68FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2FD69FF
%B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7C4FD69FFB7B7B2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7C4FD69FFFD16B7FD6AFFB2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD6AFFB8B7B7B7B8B7B7
%B7B8B7B7B7B8B7B7B7B8B7B7B7B8CBFD6AFFB2B7B7B7B2B7B7B7B2B7B7B7
%B2B7B7B7B2FD04B7FD6BFFFD14B7C4FD48FFA9FD22FFB7B7B2B7B7B7B2B7
%B7B7B2B7B7B7B2B7B7B7B2B7CAFD47FFA9AFFD0CFFA9AFA9FD13FFB7B7B8
%B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8BEFD57FFAFFD14FFB7B7B2B7B7B7
%B2B7B7B7B2B7B7B7B2FD04B7FD3FFFA85A59FD0DFF84AFFD1CFFFD12B7CB
%FD3FFFAFA9852F84FD0BFFAF8585FD1BFFB2B7B7B7B2B7B7B7B2B7B7B7B2
%B7B7B7BEFD39FFA8FD07FFA9FFA9AF5A2F7EFD09FFA9AFA98584FD19FFB8
%B7B7B7B8B7B7B7B8B7B7B7B8BECBFD39FFAF5AFD0DFF855A53FD09FFAFFF
%AFAF84FD18FFB2B7B7B7B2B7B7B7B2B7B7C4CAFD3BFF84FD09FFA9FD05FF
%A9852F5AFD06FFA9AFA9FFA985FD18FFFD08B7C4CAFD50FFAF7E547EFD05
%FFAFAFA9FF84FD18FFCBC4B7BEBDBEC4FD4BFFA9FD09FF845A2FA9FD04FF
%A9AFA985FD75FFAFA95A5AA9FD05FF84FD61FFCAC4C4CBFD05FFA9FFFFFF
%A9FD09FF7E2F59FD65FFBEB7B7B7C4FD05FFAFFD04FFAFFD09FFA9842FA8
%FD09FFA95AFD58FFBDFD04B7FD05FFA9FFFFFFA9FFA9FFAFFD07FFAFA953
%2FA8FD07FFAFAFFD59FFC4CAC3BEFD18FF855A53FD60FF7E85A8C9A8FD05
%FFA9FFFFFFAFFFA9AFAFFFA8FD09FFA9842F7EFD5DFFA95A36FFCAA984FD
%0BFFA8FFFF5AA8FD0AFFAF5A5A7EFD54FFAFFD05FFA85A2F5A5A7E365AFD
%04FFA9FFFFFFA9FFA9A9A8FF53A9A9FD0BFF845A2FFD52FFAFFFA9FD04FF
%AF5A5A5A5B5A5A5AAFFD0AFFA9FFA95AA8FD04FFAFFD08FFAFA92F5AFD4F
%FFAFFFFFFFA9FFFFFFA85A2F5A305A2F5A84FFFFFFA9FFFFFFAFFFA9AFA8
%AF59A9A9FFFFFFA8A9A8FD08FFAF5A2F84FD4EFFA9FFFFAFFD04FFC97E5A
%5A365A5A85FFFFFFAFFD08FFA95AA9FFAFFFFFAFA9AF85FD09FF7E2FFD4F
%FFA9AFAFFFFFFFCAC9305A365A597E84FFFFFFA9FD07FFAFFF7EA9A9FFFF
%FFA8A9A8FF84A9A8FD06FFAF2FA8FD51FF5A5AAFFFC95B5A5A5ACACAFD14
%FFAFA9FF5A85A9FFA9FD05FFAF7EA8FD1FFF532F7E53A87E2F537E7E7E53
%A82F7E287E532FA8FF59847EA859A92FAF59A859597D2F7D7E592FA8FD0A
%FF7E305A53CA305A5AA8A1A8FD04FFA9FD0BFFAFFFFFFFA9A984AF535AFF
%AF84AFFD04FF59A9FD1FFF067E5953597E2F7E2F842853597E5A537E2F7E
%FFFF532F7E2F597E297E59A92F2F5959842F2F7EA9FD0AFF5A5A365A365A
%5ACA7E5A5AFD08FFA9FFFFAFFD08FF5A84AF84AFA8AFA8FFA9A9AFFFAF7E
%A8FD04FFA9A9FD19FF06287E2F7E595A2F537D2F067E28A92F5A7E2FA8FF
%062F59292F5A287E2FFF2F5AA82F59537E2F84FD0AFF7E365A305A59C97E
%5A367EFD04FFA9FFFFFF2F5AAFAFA9FD07FF84302FA984A9A8AF84AFA8FF
%FFFF59A8FFFFAF845AFD1AFF067E532F53842F2F2F84592F7E7E7E2F2F53
%2FA9A82F2F7E59592F5A5353A87EA87E2F5A2F592F7EFD0AFF845A5A5B5A
%7EA9FF842FA8FD08FF5A2FFFA9FD0AFF852F7EA9AFA9FFA9FFFFFFAF7EA8
%FFFF857EFD1BFF7E59FF7E7EA8A98484A8A97EA859A984A8A87EA9A97EA8
%7EFF7E7EA87E59A8A8FFFF84A884A87EA9FD0BFF535A305A59AF842F2F85
%FD04FFA9FFFFFFA984FFAFA9FFAFFD09FF53307EFD07FF59A8FD52FF2F06
%2F3084592F5AAFAFFD04FFAFFD06FFAFFFAFFFAFFFAFFD07FFA85A2FA9FD
%04FFAF7EA8FD52FF06290606062F7EAFA9FD05FFA9AFFD08FFA9FFA9AFA9
%AFFD07FF842F5AA8FFFFFF53A9FD1FFFA9FFA9FFFFFFAFFFAFFFA9FFAFFD
%05FFAFFFAFFD05FFA9FFA9FFFFFFA8FFA9FFAFFD0EFF2F062F06302FA9A9
%FFAFFD05FFAFFD0BFFA9FF2F84A9AFFD06FF7EA9FFFFAF7EA8FD1FFFA97E
%847E7EA8847E845A847EA97EA97EFF7E7E7EAFA8A97E845A847E847EA97E
%847E847EA97EA9FD04FFA9855AA9FD04FF2F292828293084AFA9FFFFFFA9
%AF535AA8AFAFFD07FFAFAFAF302FA8065AFD0AFF59A9FD1FFFA8AFA9AFA8
%FFA9AFA8AFA9AFA8AFAFFFA9AFA8AFA8FFA9A9A8FFA9A9A8AFAFAFA8A9A9
%AFA8A9A9FD05FF5AFF5AFD04FF59062F062F2FA9AFAFA9FFA97E062F2F84
%84FFAFFD09FF2F36A8292FFFAFFF5AA9FD04FFAF7EA8FD1FFFA97EA9A8A9
%84FF84AF84A9A8A984A984A984A9A8A984A9848484A9A8A9FD0FFF845AA9
%FD04FF59062F292F2F84AFA9AF592952A85329292F2FA9A9AFA9FD06FFA9
%2FA90653A9AFA95A2FA9FD04FF59A8FD1FFF84A9A8AF7EA9A8A9A8A97E85
%7EA97EA97E84848584A984A97EA984A9A9FD08FFCBB7CBFD0BFFA8295A06
%2F2FA9AFFF8453A2FFA9FFA253065A295AA9FFAFFD07FFA82F2FFFAFFF5A
%5AA9FFFFFFAF7EA8FD20FFA8FFAFFD21FFC4B7B2B7A8FD09FF7E84532F2F
%2F84AFA9A9A8AFA9AFA9AFA8FD042F285AAFA9FD07FFA87EA9AFAF5A2FAF
%FD04FF59A8FD1FFFA8A984A984A97EFD1EFFC4FD04B79CFD08FF5A7E7E5A
%5A2FA9A9FF845A84FFAFAF7E5A2F5306532F5306A9AFAFFD08FFA9FF5A30
%A8FFFFFFAF7EA8FD1FFFA984A97EA9A8A8FD1EFFC4B7C4BDB7B79CFD07FF
%A8AF365A2F2F84AFA9A9365A5A84FD042F062F282F2F5384AFA9AFA9FD07
%FFA95A2FA9FD04FF53A9FD44FFCBB7BEC4C4B7C4FD06FFAFFFAF842F5A2F
%A9A9FF855A5A5B2F302F5A2F5A292F2F2F065A5AAFA9FFAFFD08FF85A9FD
%04FF7EA8FD45FFCAFD04B79BFD05FFA9AFA9AF5A2F2F3084AFA9A9365A30
%532F2F2F5A282F2F2F0653062F537EA9AFA9AFA9FD0BFF59A9FD47FFC4B7
%B7C4FD04FFA9FFAFAFA9852F302FA9AFAFA95A5A5A2F362F30FD052F5329
%2F2F2F285A84FFAFAFA9FD0AFF7EA8FD20FFFD04C4BEC4C4C4BEC4C4C4BE
%C4C4C4BEFD04C4FD13FFCABEA2FFA9AFA9AFA9AFA9AF5A2F2F2F84AFA9AF
%305A36FD042F060653062F282F2F2F062F062953A9A885A9AFFD08FF59A8
%FFFFCAFD1CFFCAB8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8BDFD
%17FFAFFFA9FFAFFFA9AF5A302FA9AFFFA95B5A5A2F5A2F302F5A065A5AFD
%042F532F2F292F2F7E067EA9FFAFFD06FF7EA8FFBEB7B7CBFD1AFFBEB2FD
%04B7CBFFCBC4C4CABEFFCBCAFFC4B7B7B7B2B7CAFD15FF5AFFAFAFA9AFA9
%AF845A292F7E5A2F85305A36532F302F282FA9A9AF7E5A062F2F2F292F2F
%2F062F2F2F7EAFA9FD05FF59A8FD05B7C4FD19FFBDFD05B7C4FFC4C4C4CB
%BDFFC4FFFFC4FD05B7CBFD15FF5A2F85FFFFA9FFAFA92F2F292F2853845A
%365A2F302F365AAFA9FFAFAFA95A29292F59062F2F5328292F532F85A9FF
%FFFFA97EA8B7B7B8B78F9CFD19FFC4B7B7B2FD04B7BEFD04B7BDBEB7BEB7
%B7B2B7B7BDFD16FFA9A92F2F84FFA9AFA9AF5A2F285AA9A9365A30532F2F
%2F5A5AAFA9AF842F06292F2906532806282F2F290653062F84AFA9AF53FF
%B7B78F8F8EC4FD1AFFCBBDBEBDBEBDBEBDBEBDBEBDBEBDBEBDBEBDBEBDC4
%FD18FFA9FF84542FFFFFFFA9FFA9AFA9FFA9855A5B2F302F595A302F855A
%2F062F2F2F065A062F2F2F062F2F53282F2FAFAFAFA8FFFFB7B7B78F8F9C
%FD3CFF7EFD0BFFA9AFA97E2F84A9FFA9AFA9AFA9AF845A2F532F53845A2F
%2F2F290628062F062F292F2F28065906282F2F06285AFFA8A8FFFFB7B78F
%8F8EC4FD3BFF84A95AFD0BFFAFFFAFAF2F3084FFAFFFAFAFA95A292F2E2F
%295A59362F30062F062F282F2F5306532F2F062F2F29065AA9FFA295B7CB
%FFB7B7B78FB29CFD3BFFA95A7EA8FD0BFFA9FFA9AF84532FA9A8AFA9AFA9
%842F2F2884A95A2F2F2F0606290653292F7E5A0629062F06292FA9A9FF70
%B7B2B7B7BDB2B78F8F8EC4FD3CFFAFFD0AFFAFFFAFFFAFFFAFFFAF852F5A
%AFFFA9FFAFAF7EAFAFFF5A5A2F30062F067EA9AF5A2F292F2F2F062F7EFF
%FF7E2F9BFD04B78FB8B7B78FB2BEFD44FFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AF5A2F5AFFA9AFA9AFA9AFA9AF5A5A2F282884A9AFA9AF84592F5A847EA8
%FF7E2859AF9BB7B2B78E8FB2B7B28F8EC4FD43FFA9FFAFAFA9FFAFAFA9AF
%7E8584FFAFAF855A2FA9FFFFAFAFA9FFAFAFA95A5AAFA9FFAFAFA9FFAF85
%2FA9FFA9285AA9AFA9BDB7B78FB28FB7B7B78F8F9CFD40FFA8A9A9AFA9AF
%7E592F532F7E53AFA9AFA9FFA9AFA9A92F5484FFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9FFA8532984A9AFA9FF94B7B78F8E8FB7B78F8F8EC4FD40
%FFAF5A855A845A2F062F062F0685AFFFA9FFAFFFFFFFAFFF7E5A5AFFAFFF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFF7E2F7EFFA9FFCBFFFFBDB7B78FB28FBE
%B7B78F8FA2FD07FFAFFFFFFFCB789D78A3A2FD2FFF5A5A365A3030062806
%2906282FAFA9AFA9AFFD04FFA9AFA95A2F7EA9FFA9AFA9AFA9AFA9AFA9AF
%A9A9065AA8AFA9CBBDB7BDFF9BB7B78F8E8FA9C48F95A2FD07FFA9AFFFFF
%CB727372797273729DA3CBFD2BFF84365A5A5A362F0629062F2885A9FFAF
%AF84FD05FFAFAFA9AF533084FFAFAFA9FFAFAFA9FFA92F2FAFAFAFA9CBFD
%05B7BDB7B78F8F8FFFAFCBA9FD07FFA9FFAFFFCB72737273727372737273
%727378A3CBFD27FF5A5A305A365A307E84857EAFA9AFA9AFA95AFD06FFAF
%AFA9AF842F2FAFAFAFA9FFA9AF2F2F7EAFA9AFAFFFC4B7B7B7958F95B7B2
%B28E8FFFFFA9FD05FFA9AFA9AFA9AFFF7279737372797373727973737279
%7379A9FD26FF5A2FFD045A5BFD045A7EFFA9FFA95A2FFD09FFAFFFA9852F
%7EA8AFA8842884AFFFA9FD04FFCBB7B795B28FCB9BB78FBECBFD07FFAFFF
%AFFFA9FFAF72737273727372737273727372737273729DFD26FF5A2F2F36
%305A305A365A2F84A9A95A302F5AFD0AFFAFAFA9AF532F062F2FA9A9AFA9
%FD05FFCAB7B7B78E8FA2AFA2A2A9FD07FFA9AFA9AFA9AFA9AF7972737279
%72737279727372797273727972FD26FFAF2F302F362F362F5A2F29595A2F
%302F365AFD05FFAFFD07FFA9FFAFAFA9FFAFFD08FFCBB7B7958F8FCBFFFF
%A9FD06FFAFA9FFAFAFA9FFAFAFA972737273727372737273727372737273
%7273A2FD26FF7EFD082F06FD062FFD07FFA9FD07FFA9AFA9AFA9FD09FFCB
%C4B2B78E9CA8FD07FFA9AFA9AFA9AFA9AFA9AFA9AF797373727973737279
%737372797373727973A3FD27FF852F5A2F302F5A292F2F5A2F305AFD1FFF
%A9FF9CCBA9FD07FFA9FFAFFFA9FFAFFFA9FFAFFFA9727372737273727372
%73727372737273727372FD27FFA9A95A5AFD042F532F2F5A84AFA9FD1FFF
%A9AFA9FD07FFA9AFA9AFA9AFA9AFA9AFA9AFA9AF73727972737279727372
%797273727972737279A9FD27FFAFAFA9FF85A97EAFAFAFA9FFAFFD29FFA9
%FFAFAFA9FFAFAFA9FFAFAFA9FFAF72737273727372737273727372737273
%727372A3FD28FFA9AFA9AFA9AFA9AFA9AFA9FD29FFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AF7372797373727973737279737372797373727979FD2DFF
%AFFD2FFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF7273727372737273727372
%737273727372737273A9FD5BFFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AF79
%72737279727372797273727972737279727372CBFD5CFFAFAFA9FFAFAFA9
%FFAFAFA9FFAFAFA972737273727372737273727372737273727372737EFD
%5DFFA9AFA9AFA9AFA9AFA9AFA9AFA9AF7973737279737372797373727973
%737279737372CBFD5EFFA9FFAFFFA9FFAFFFA9FFAFFFA972737273727372
%73727372737273727372737273A9FD5EFFAFA9AFA9AFA9AFA9AFA9AFA9AF
%73727972737279727372797273727972737279A3FD60FFAFA9FFAFAFA9FF
%AFAFA9FFAF727372737273727372737273727372737273A2FD61FFA9AFA9
%AFA9AFA9AFA9AFA9AF7372797373727973737279737372797373A3FD63FF
%A9FFAFFFA9FFAFFFA9FFAFA3A3A2A3A3A3A2A3A3A3A2A3A3A3A2A3A9FD65
%FFA9FFAFFFA9FFAFFFA9FDFCFFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 10 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-19T11:21:09+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-19T11:21:09+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-19T11:21:09+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8An/lLyHFonmS3ufM2pWFi&#xA;9mPrUVi9xH6zhSeEpUkUjDITy/yczsmUyj6QS9v2x7T4Z4TixXchuTtQ6/qepW/mvRr+6S20i8td&#xA;UkNfWW1uYJGiVePxOoflx+MVoD223zG8IgXKx8HheMHluxX87tf1fRPJpvNJmkt7k3EMZuYmI9NG&#xA;bkxNPEoq/Tm07E08MuepixR273L0kBLJR7lT8n/O+teZvLyS63HS95SehdIgSOeKLgrN8JoHV3od&#xA;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&#xA;f//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f2dc8929-16d6-cc4f-a44c-9f8ea8746a5d</stRef:instanceID>
            <stRef:documentID>xmp.did:f2dc8929-16d6-cc4f-a44c-9f8ea8746a5d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</stEvt:instanceID>
                  <stEvt:when>2018-12-19T11:21:09+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=137 B=43</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=238 G=173 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=1 G=200 B=239</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=119 B=184</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>119</xmpG:green>
                           <xmpG:blue>184</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=178 G=211 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=196 G=217 B=232</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>217</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=37 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=20 B=207</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=114 G=27 B=213</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>114</xmpG:red>
                           <xmpG:green>27</xmpG:green>
                           <xmpG:blue>213</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=126 G=35 B=220</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>126</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>220</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=138 G=42 B=227</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>138</xmpG:red>
                           <xmpG:green>42</xmpG:green>
                           <xmpG:blue>227</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=194 G=133 B=249</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=210 G=159 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>210</xmpG:red>
                           <xmpG:green>159</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=152 G=59 B=233</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>233</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=94 B=244</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>94</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=234 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>234</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
418.517 337.743 mo
293.256 265.422 li
289.713 263.376 290.157 259.803 294.249 257.441 cv
379.542 208.213 li
383.633 205.851 389.824 205.594 393.367 207.64 cv
518.628 279.959 li
522.171 282.005 521.727 285.579 517.635 287.942 cv
432.342 337.169 li
428.25 339.532 422.061 339.788 418.517 337.743 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.147219 .0154116 0 0 cmyk
f
523.262 137.7 mo
395.933 64.2475 li
394.293 63.3021 392.787 63.1566 391.575 63.6615 cv
391.58 63.6468 li
391.371 63.7436 li
391.32 63.767 li
387.174 65.7181 li
391.675 67.9584 li
391.666 68.2064 li
391.705 172.786 li
391.707 178.021 394.946 184.131 398.939 186.435 cv
522.872 257.927 li
523.577 263.761 li
528.102 261.602 li
529.592 260.726 530.537 258.746 530.536 255.927 cv
530.497 151.347 li
530.495 146.114 527.255 140.003 523.262 137.7 cv
1 .866484 .240818 .0951247 cmyk
f
523.262 137.7 mo
395.933 64.2475 li
394.293 63.3021 392.787 63.1566 391.575 63.6615 cv
391.58 63.6468 li
391.371 63.7436 li
391.32 63.767 li
387.174 65.7181 li
391.675 67.9584 li
391.666 68.2064 li
391.691 137.131 li
449.638 182.916 li
528.317 143.32 li
527.013 140.896 525.23 138.834 523.262 137.7 cv
.827268 .57586 .071809 .00112917 cmyk
f
525.389 139.344 mo
512.911 144.593 li
522.332 151.852 li
530.199 148.503 li
529.515 145.065 527.701 141.609 525.389 139.344 cv
cp
.940612 .760952 .191134 .0482185 cmyk
f
519.117 263.206 mo
391.788 189.755 li
387.794 187.452 384.555 181.341 384.553 176.108 cv
384.514 71.5277 li
384.512 66.2933 387.749 63.9184 391.742 66.2221 cv
519.071 139.674 li
523.064 141.978 526.303 148.087 526.305 153.322 cv
526.344 257.902 li
526.346 263.135 523.11 265.51 519.117 263.206 cv
.147219 .0154116 0 0 cmyk
f
514.88 255.427 mo
395.962 186.861 li
392.308 184.752 389.343 179.16 389.342 174.372 cv
389.306 78.6723 li
389.304 73.8832 392.266 71.7093 395.92 73.8177 cv
514.838 142.385 li
518.493 144.493 521.458 150.084 521.458 154.873 cv
521.495 250.573 li
521.497 255.362 518.535 257.535 514.88 255.427 cv
0 0 0 0 cmyk
f
514.88 255.427 mo
395.962 186.861 li
392.308 184.752 389.343 179.16 389.342 174.372 cv
389.306 78.6723 li
389.304 73.8832 392.266 71.7093 395.92 73.8177 cv
514.838 142.385 li
518.493 144.493 521.458 150.084 521.458 154.873 cv
521.495 250.573 li
521.497 255.362 518.535 257.535 514.88 255.427 cv
f
521.018 266.454 mo
503.895 264.194 li
393.367 200.38 li
389.824 198.334 383.633 198.591 379.542 200.953 cv
301.222 246.155 li
290.869 244.787 li
290.869 250.662 li
290.879 250.663 li
290.811 252.021 291.584 253.327 293.256 254.292 cv
418.517 326.612 li
422.061 328.658 428.25 328.402 432.342 326.039 cv
517.635 276.811 li
519.937 275.482 521.084 273.77 521.018 272.162 cv
521.018 266.454 li
cp
1 .866484 .240818 .0951247 cmyk
f
437.97 226.132 mo
430.118 221.598 li
343.784 221.598 li
301.222 246.155 li
290.869 244.787 li
290.869 250.662 li
290.879 250.663 li
290.811 252.021 291.584 253.327 293.256 254.292 cv
418.517 326.612 li
420.39 327.693 423.001 328.124 425.652 327.95 cv
437.97 226.132 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
295.464 245.394 mo
290.869 244.787 li
290.869 250.662 li
290.879 250.663 li
290.811 252.021 291.584 253.327 293.256 254.292 cv
295.464 255.567 li
295.464 245.394 li
cp
.657221 .328313 0 0 cmyk
f
419.779 327.198 mo
423.137 328.472 427.94 328.195 431.525 326.469 cv
431.525 313.366 li
419.779 313.366 li
419.779 327.198 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
418.517 320.745 mo
293.256 248.424 li
289.713 246.378 290.157 242.805 294.249 240.443 cv
379.542 191.215 li
383.633 188.853 389.824 188.596 393.367 190.642 cv
518.628 262.961 li
522.171 265.007 521.727 268.581 517.635 270.944 cv
432.342 320.171 li
428.25 322.534 422.061 322.79 418.517 320.745 cv
cp
.147219 .0154116 0 0 cmyk
f
517.635 268.797 mo
432.342 318.026 li
428.25 320.388 422.061 320.645 418.517 318.599 cv
293.256 246.279 li
292.094 245.609 291.37 244.772 291.053 243.87 cv
290.499 245.545 291.206 247.241 293.256 248.425 cv
418.517 320.745 li
422.061 322.79 428.25 322.534 432.342 320.171 cv
517.635 270.944 li
520.386 269.356 521.48 267.222 520.832 265.371 cv
520.427 266.592 519.36 267.802 517.635 268.797 cv
cp
0 0 0 0 cmyk
f
346.531 224.483 mo
340.864 221.21 li
340.409 220.948 340.465 220.489 340.991 220.185 cv
347.681 216.323 li
348.207 216.02 349.001 215.987 349.457 216.249 cv
355.124 219.522 li
355.579 219.785 355.522 220.244 354.997 220.546 cv
348.306 224.409 li
347.781 224.712 346.986 224.745 346.531 224.483 cv
cp
1 .866484 .240818 .0951247 cmyk
f
355.284 229.536 mo
349.616 226.263 li
349.161 226 349.218 225.542 349.744 225.239 cv
356.433 221.376 li
356.958 221.073 357.753 221.039 358.208 221.303 cv
363.876 224.575 li
364.332 224.837 364.274 225.296 363.749 225.6 cv
357.059 229.462 li
356.534 229.765 355.739 229.798 355.284 229.536 cv
cp
f
364.036 234.589 mo
358.369 231.317 li
357.914 231.054 357.97 230.595 358.496 230.291 cv
365.186 226.429 li
365.711 226.126 366.506 226.093 366.961 226.356 cv
372.628 229.628 li
373.083 229.891 373.027 230.35 372.501 230.653 cv
365.811 234.515 li
365.286 234.819 364.491 234.852 364.036 234.589 cv
cp
f
376.141 230.415 mo
370.473 227.144 li
370.018 226.881 370.076 226.422 370.601 226.119 cv
376.216 222.876 li
376.742 222.573 377.537 222.54 377.992 222.803 cv
383.66 226.075 li
384.115 226.337 384.058 226.796 383.532 227.1 cv
377.917 230.342 li
377.391 230.646 376.596 230.678 376.141 230.415 cv
cp
f
384.894 235.469 mo
379.226 232.197 li
378.771 231.934 378.828 231.475 379.354 231.172 cv
384.969 227.93 li
385.495 227.626 386.29 227.593 386.745 227.856 cv
392.413 231.128 li
392.867 231.391 392.81 231.85 392.285 232.154 cv
386.669 235.396 li
386.144 235.699 385.349 235.732 384.894 235.469 cv
cp
f
393.646 240.522 mo
387.978 237.25 li
387.524 236.988 387.581 236.529 388.106 236.225 cv
393.721 232.983 li
394.247 232.679 395.042 232.647 395.497 232.91 cv
401.165 236.181 li
401.62 236.444 401.563 236.903 401.037 237.206 cv
395.421 240.449 li
394.896 240.752 394.101 240.785 393.646 240.522 cv
cp
f
402.399 245.576 mo
396.731 242.303 li
396.276 242.04 396.333 241.581 396.859 241.279 cv
402.474 238.036 li
403 237.733 403.794 237.7 404.25 237.962 cv
409.917 241.235 li
410.373 241.497 410.315 241.956 409.79 242.26 cv
404.174 245.502 li
403.649 245.805 402.854 245.838 402.399 245.576 cv
cp
f
411.151 250.628 mo
405.484 247.357 li
405.029 247.094 405.085 246.635 405.611 246.331 cv
411.226 243.089 li
411.752 242.786 412.546 242.753 413.001 243.016 cv
418.669 246.287 li
419.125 246.55 419.068 247.009 418.542 247.313 cv
412.926 250.555 li
412.401 250.859 411.606 250.891 411.151 250.628 cv
cp
f
419.904 255.682 mo
414.236 252.41 li
413.781 252.147 413.837 251.688 414.364 251.385 cv
419.979 248.143 li
420.504 247.839 421.299 247.806 421.754 248.069 cv
427.422 251.341 li
427.877 251.604 427.82 252.063 427.294 252.367 cv
421.679 255.609 li
421.154 255.911 420.359 255.945 419.904 255.682 cv
cp
f
428.656 260.735 mo
422.989 257.463 li
422.534 257.201 422.59 256.742 423.116 256.438 cv
428.731 253.196 li
429.257 252.892 430.051 252.86 430.506 253.122 cv
436.174 256.394 li
436.629 256.658 436.573 257.116 436.047 257.419 cv
430.431 260.661 li
429.906 260.965 429.111 260.997 428.656 260.735 cv
cp
f
437.409 265.788 mo
431.741 262.516 li
431.286 262.253 431.343 261.794 431.869 261.492 cv
437.484 258.249 li
438.009 257.946 438.804 257.912 439.259 258.175 cv
444.927 261.448 li
445.382 261.71 445.325 262.169 444.799 262.473 cv
439.184 265.715 li
438.659 266.018 437.864 266.051 437.409 265.788 cv
cp
f
446.161 270.841 mo
440.494 267.57 li
440.039 267.307 440.095 266.848 440.621 266.544 cv
446.237 263.302 li
446.762 262.998 447.557 262.966 448.011 263.229 cv
453.679 266.501 li
454.134 266.764 454.078 267.222 453.552 267.526 cv
447.936 270.768 li
447.411 271.072 446.616 271.105 446.161 270.841 cv
cp
f
454.914 275.895 mo
449.246 272.622 li
448.791 272.36 448.848 271.901 449.374 271.598 cv
454.989 268.356 li
455.514 268.052 456.309 268.019 456.764 268.282 cv
462.432 271.554 li
462.887 271.817 462.83 272.276 462.304 272.579 cv
456.689 275.822 li
456.164 276.124 455.369 276.158 454.914 275.895 cv
cp
f
389.038 228.024 mo
383.37 224.751 li
382.915 224.489 382.972 224.03 383.498 223.726 cv
389.113 220.484 li
389.638 220.181 390.433 220.148 390.888 220.411 cv
396.556 223.683 li
397.011 223.946 396.954 224.405 396.428 224.707 cv
390.813 227.95 li
390.288 228.253 389.493 228.286 389.038 228.024 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
380.154 222.895 mo
374.487 219.622 li
374.032 219.36 374.088 218.901 374.614 218.598 cv
380.23 215.356 li
380.755 215.052 381.55 215.019 382.005 215.282 cv
387.672 218.554 li
388.127 218.817 388.071 219.276 387.545 219.578 cv
381.929 222.822 li
381.404 223.124 380.609 223.158 380.154 222.895 cv
cp
f
371.256 217.758 mo
359.05 210.71 li
358.595 210.448 358.652 209.989 359.177 209.685 cv
364.793 206.443 li
365.319 206.14 366.114 206.107 366.569 206.37 cv
378.775 213.417 li
379.23 213.68 379.173 214.139 378.648 214.442 cv
373.032 217.684 li
372.506 217.988 371.711 218.021 371.256 217.758 cv
cp
1 .866484 .240818 .0951247 cmyk
f
377.476 211.51 mo
367.57 205.791 li
367.115 205.529 367.172 205.07 367.698 204.766 cv
373.313 201.524 li
373.838 201.221 374.633 201.188 375.088 201.451 cv
384.995 207.169 li
385.45 207.432 385.392 207.891 384.867 208.195 cv
379.251 211.437 li
378.726 211.741 377.931 211.773 377.476 211.51 cv
cp
f
397.79 233.077 mo
392.123 229.804 li
391.667 229.541 391.724 229.082 392.25 228.78 cv
397.866 225.537 li
398.391 225.234 399.186 225.201 399.641 225.463 cv
405.308 228.736 li
405.763 228.998 405.707 229.457 405.181 229.761 cv
399.565 233.003 li
399.04 233.306 398.245 233.339 397.79 233.077 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
406.542 238.13 mo
400.875 234.858 li
400.419 234.595 400.477 234.136 401.002 233.832 cv
406.618 230.59 li
407.143 230.287 407.938 230.254 408.393 230.517 cv
414.061 233.789 li
414.516 234.052 414.458 234.511 413.933 234.814 cv
408.318 238.056 li
407.792 238.36 406.998 238.393 406.542 238.13 cv
cp
1 .866484 .240818 .0951247 cmyk
f
415.294 243.183 mo
409.627 239.911 li
409.172 239.648 409.229 239.189 409.754 238.886 cv
415.371 235.644 li
415.896 235.34 416.691 235.307 417.146 235.57 cv
422.813 238.842 li
423.268 239.105 423.211 239.564 422.686 239.868 cv
417.07 243.11 li
416.544 243.412 415.75 243.446 415.294 243.183 cv
cp
f
424.047 248.237 mo
418.379 244.964 li
417.924 244.702 417.982 244.243 418.507 243.939 cv
424.123 240.697 li
424.648 240.394 425.443 240.361 425.898 240.623 cv
431.566 243.896 li
432.021 244.159 431.963 244.618 431.438 244.92 cv
425.823 248.162 li
425.297 248.466 424.502 248.499 424.047 248.237 cv
cp
f
432.799 253.289 mo
427.132 250.017 li
426.677 249.754 426.734 249.295 427.259 248.993 cv
432.875 245.75 li
433.401 245.447 434.196 245.413 434.651 245.676 cv
440.318 248.949 li
440.773 249.211 440.716 249.67 440.191 249.974 cv
434.575 253.216 li
434.049 253.519 433.254 253.552 432.799 253.289 cv
cp
f
441.552 258.343 mo
435.884 255.071 li
435.429 254.808 435.487 254.349 436.012 254.045 cv
441.627 250.803 li
442.153 250.5 442.948 250.467 443.403 250.73 cv
449.071 254.002 li
449.526 254.265 449.468 254.724 448.943 255.027 cv
443.328 258.269 li
442.802 258.573 442.007 258.606 441.552 258.343 cv
cp
f
450.304 263.396 mo
444.637 260.123 li
444.182 259.861 444.239 259.402 444.764 259.099 cv
450.38 255.857 li
450.906 255.553 451.701 255.52 452.156 255.783 cv
457.823 259.055 li
458.278 259.318 458.221 259.777 457.696 260.08 cv
452.08 263.323 li
451.554 263.625 450.759 263.659 450.304 263.396 cv
cp
f
459.057 268.45 mo
453.389 265.177 li
452.934 264.914 452.992 264.455 453.517 264.152 cv
459.132 260.91 li
459.658 260.607 460.453 260.574 460.908 260.836 cv
466.576 264.109 li
467.031 264.371 466.973 264.83 466.448 265.133 cv
460.833 268.375 li
460.307 268.679 459.512 268.712 459.057 268.45 cv
cp
f
467.809 273.502 mo
462.142 270.23 li
461.687 269.967 461.744 269.509 462.269 269.205 cv
467.885 265.963 li
468.411 265.66 469.206 265.626 469.661 265.889 cv
475.328 269.161 li
475.783 269.424 475.726 269.883 475.201 270.187 cv
469.584 273.429 li
469.059 273.732 468.264 273.765 467.809 273.502 cv
cp
f
483.37 282.486 mo
471.003 275.346 li
470.548 275.083 470.605 274.624 471.13 274.322 cv
476.747 271.079 li
477.272 270.776 478.067 270.743 478.522 271.005 cv
490.888 278.145 li
491.343 278.408 491.286 278.867 490.76 279.17 cv
485.145 282.412 li
484.62 282.716 483.825 282.748 483.37 282.486 cv
cp
f
500.41 272.648 mo
489.972 266.621 li
489.517 266.359 489.574 265.9 490.099 265.597 cv
495.715 262.355 li
496.241 262.051 497.036 262.018 497.491 262.281 cv
507.928 268.307 li
508.383 268.57 508.326 269.029 507.8 269.332 cv
502.185 272.575 li
501.66 272.877 500.865 272.911 500.41 272.648 cv
cp
f
413.118 232.088 mo
407.45 228.816 li
406.995 228.553 407.051 228.094 407.577 227.79 cv
413.193 224.548 li
413.718 224.245 414.513 224.212 414.968 224.475 cv
420.635 227.747 li
421.09 228.01 421.034 228.469 420.508 228.772 cv
414.893 232.014 li
414.367 232.318 413.573 232.351 413.118 232.088 cv
cp
f
404.147 226.909 mo
398.48 223.637 li
398.025 223.374 398.082 222.915 398.607 222.612 cv
404.222 219.37 li
404.749 219.066 405.542 219.034 405.998 219.296 cv
411.666 222.568 li
412.121 222.83 412.064 223.289 411.539 223.593 cv
405.922 226.835 li
405.397 227.139 404.602 227.171 404.147 226.909 cv
cp
f
395.177 221.73 mo
389.509 218.457 li
389.054 218.195 389.112 217.737 389.637 217.433 cv
395.252 214.191 li
395.778 213.887 396.573 213.854 397.028 214.118 cv
402.696 217.389 li
403.151 217.652 403.093 218.111 402.568 218.414 cv
396.953 221.657 li
396.427 221.96 395.632 221.993 395.177 221.73 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
386.207 216.551 mo
380.54 213.279 li
380.084 213.016 380.141 212.557 380.667 212.254 cv
386.283 209.012 li
386.808 208.708 387.603 208.675 388.058 208.938 cv
393.725 212.21 li
394.18 212.473 394.124 212.932 393.598 213.236 cv
387.982 216.478 li
387.457 216.781 386.662 216.814 386.207 216.551 cv
cp
1 .866484 .240818 .0951247 cmyk
f
421.87 237.141 mo
416.202 233.869 li
415.748 233.606 415.804 233.148 416.33 232.844 cv
421.945 229.602 li
422.47 229.298 423.265 229.265 423.72 229.528 cv
429.388 232.8 li
429.843 233.063 429.787 233.522 429.26 233.826 cv
423.645 237.068 li
423.12 237.37 422.325 237.404 421.87 237.141 cv
cp
f
430.623 242.195 mo
424.955 238.922 li
424.5 238.66 424.556 238.201 425.083 237.897 cv
430.698 234.655 li
431.223 234.352 432.018 234.319 432.473 234.581 cv
438.141 237.854 li
438.595 238.117 438.539 238.576 438.013 238.878 cv
432.398 242.12 li
431.873 242.424 431.078 242.457 430.623 242.195 cv
cp
f
439.375 247.247 mo
433.708 243.975 li
433.252 243.712 433.309 243.254 433.834 242.951 cv
439.45 239.708 li
439.976 239.405 440.77 239.371 441.225 239.635 cv
446.893 242.907 li
447.348 243.169 447.292 243.628 446.765 243.932 cv
441.15 247.174 li
440.625 247.477 439.83 247.51 439.375 247.247 cv
cp
f
448.127 252.301 mo
442.459 249.029 li
442.004 248.766 442.061 248.307 442.587 248.003 cv
448.203 244.761 li
448.728 244.458 449.523 244.425 449.978 244.688 cv
455.646 247.96 li
456.101 248.223 456.043 248.682 455.518 248.985 cv
449.903 252.227 li
449.377 252.531 448.583 252.564 448.127 252.301 cv
cp
f
456.879 257.354 mo
451.212 254.081 li
450.757 253.819 450.814 253.361 451.339 253.057 cv
456.955 249.815 li
457.481 249.511 458.275 249.478 458.73 249.742 cv
464.398 253.013 li
464.853 253.276 464.796 253.735 464.271 254.038 cv
458.655 257.281 li
458.129 257.583 457.334 257.617 456.879 257.354 cv
cp
f
465.632 262.408 mo
459.964 259.135 li
459.509 258.872 459.567 258.413 460.092 258.11 cv
465.708 254.868 li
466.233 254.565 467.028 254.532 467.483 254.794 cv
473.151 258.067 li
473.606 258.329 473.548 258.788 473.023 259.091 cv
467.408 262.333 li
466.882 262.637 466.087 262.67 465.632 262.408 cv
cp
f
474.384 267.46 mo
468.717 264.189 li
468.262 263.925 468.319 263.467 468.844 263.163 cv
474.459 259.921 li
474.986 259.618 475.78 259.585 476.235 259.848 cv
481.903 263.12 li
482.358 263.382 482.301 263.841 481.776 264.145 cv
476.16 267.387 li
475.634 267.691 474.839 267.723 474.384 267.46 cv
cp
f
483.137 272.514 mo
477.469 269.242 li
477.014 268.979 477.072 268.52 477.597 268.216 cv
483.212 264.974 li
483.738 264.671 484.533 264.638 484.988 264.901 cv
490.656 268.173 li
491.111 268.436 491.053 268.895 490.528 269.198 cv
484.913 272.44 li
484.387 272.744 483.592 272.777 483.137 272.514 cv
cp
f
491.889 277.567 mo
486.222 274.295 li
485.767 274.032 485.824 273.574 486.349 273.27 cv
491.965 270.028 li
492.491 269.724 493.286 269.692 493.74 269.954 cv
499.408 273.226 li
499.863 273.489 499.806 273.948 499.281 274.251 cv
493.665 277.494 li
493.139 277.797 492.344 277.829 491.889 277.567 cv
cp
f
408.508 219.589 mo
402.841 216.317 li
402.386 216.054 402.443 215.595 402.968 215.292 cv
408.584 212.05 li
409.11 211.746 409.905 211.713 410.36 211.976 cv
416.027 215.248 li
416.482 215.511 416.425 215.97 415.9 216.273 cv
410.284 219.515 li
409.758 219.819 408.963 219.852 408.508 219.589 cv
cp
f
399.799 214.561 mo
394.132 211.288 li
393.677 211.026 393.734 210.567 394.259 210.264 cv
399.875 207.022 li
400.401 206.718 401.196 206.685 401.651 206.948 cv
407.318 210.22 li
407.773 210.483 407.716 210.942 407.191 211.245 cv
401.575 214.488 li
401.049 214.79 400.254 214.824 399.799 214.561 cv
cp
f
391.09 209.533 mo
385.423 206.261 li
384.968 205.998 385.025 205.539 385.55 205.236 cv
391.167 201.994 li
391.692 201.69 392.487 201.658 392.942 201.92 cv
398.609 205.192 li
399.064 205.454 399.007 205.913 398.482 206.217 cv
392.866 209.459 li
392.34 209.763 391.545 209.795 391.09 209.533 cv
cp
f
382.381 204.505 mo
376.714 201.233 li
376.259 200.97 376.316 200.511 376.841 200.207 cv
382.458 196.965 li
382.983 196.662 383.778 196.629 384.233 196.892 cv
389.9 200.164 li
390.355 200.427 390.298 200.886 389.773 201.189 cv
384.157 204.431 li
383.631 204.735 382.836 204.768 382.381 204.505 cv
cp
f
391.337 199.334 mo
385.669 196.062 li
385.214 195.799 385.272 195.34 385.797 195.037 cv
387.654 193.965 li
388.179 193.662 388.974 193.629 389.429 193.892 cv
395.096 197.164 li
395.551 197.427 395.495 197.886 394.969 198.189 cv
393.113 199.261 li
392.587 199.564 391.792 199.597 391.337 199.334 cv
cp
f
402.703 205.896 mo
397.035 202.623 li
396.58 202.361 396.637 201.903 397.163 201.599 cv
399.019 200.527 li
399.544 200.224 400.339 200.191 400.794 200.453 cv
406.461 203.726 li
406.917 203.989 406.86 204.448 406.334 204.75 cv
404.478 205.823 li
403.953 206.125 403.158 206.159 402.703 205.896 cv
cp
f
411.375 210.904 mo
405.708 207.631 li
405.252 207.369 405.309 206.91 405.834 206.606 cv
407.691 205.535 li
408.216 205.231 409.011 205.198 409.466 205.46 cv
415.134 208.733 li
415.589 208.995 415.532 209.454 415.006 209.758 cv
413.15 210.829 li
412.625 211.133 411.83 211.166 411.375 210.904 cv
cp
f
420.047 215.911 mo
414.38 212.638 li
413.925 212.375 413.982 211.916 414.507 211.613 cv
416.364 210.541 li
416.889 210.238 417.684 210.205 418.139 210.468 cv
423.807 213.74 li
424.262 214.002 424.205 214.461 423.679 214.765 cv
421.823 215.836 li
421.297 216.14 420.502 216.173 420.047 215.911 cv
cp
f
428.72 220.917 mo
423.052 217.645 li
422.597 217.382 422.655 216.923 423.18 216.62 cv
425.037 215.548 li
425.562 215.245 426.357 215.212 426.812 215.475 cv
432.479 218.747 li
432.934 219.01 432.877 219.469 432.352 219.772 cv
430.496 220.844 li
429.97 221.147 429.175 221.18 428.72 220.917 cv
cp
f
477.138 248.871 mo
471.47 245.599 li
471.015 245.336 471.073 244.877 471.598 244.575 cv
473.455 243.502 li
473.98 243.2 474.775 243.166 475.23 243.429 cv
480.897 246.702 li
481.352 246.964 481.295 247.423 480.77 247.726 cv
478.914 248.798 li
478.388 249.101 477.593 249.134 477.138 248.871 cv
cp
f
485.811 253.878 mo
480.143 250.607 li
479.688 250.344 479.746 249.885 480.271 249.581 cv
482.127 248.51 li
482.653 248.206 483.448 248.173 483.903 248.436 cv
489.57 251.708 li
490.025 251.971 489.968 252.43 489.443 252.734 cv
487.586 253.805 li
487.061 254.109 486.266 254.141 485.811 253.878 cv
cp
f
494.483 258.886 mo
488.816 255.614 li
488.361 255.351 488.417 254.892 488.943 254.588 cv
490.799 253.517 li
491.325 253.213 492.12 253.181 492.575 253.444 cv
498.243 256.715 li
498.698 256.978 498.64 257.437 498.115 257.741 cv
496.258 258.812 li
495.733 259.116 494.938 259.149 494.483 258.886 cv
cp
f
503.156 263.893 mo
497.489 260.62 li
497.034 260.358 497.09 259.899 497.616 259.596 cv
499.472 258.524 li
499.998 258.221 500.792 258.188 501.248 258.451 cv
506.916 261.723 li
507.371 261.986 507.313 262.445 506.788 262.747 cv
504.931 263.82 li
504.406 264.122 503.611 264.156 503.156 263.893 cv
cp
f
417.261 224.642 mo
411.593 221.37 li
411.138 221.108 411.196 220.649 411.721 220.345 cv
417.336 217.103 li
417.862 216.799 418.657 216.767 419.112 217.03 cv
424.78 220.301 li
425.235 220.564 425.177 221.023 424.652 221.327 cv
419.037 224.569 li
418.511 224.872 417.716 224.905 417.261 224.642 cv
cp
f
426.013 229.696 mo
420.346 226.423 li
419.891 226.161 419.948 225.702 420.473 225.399 cv
426.089 222.157 li
426.615 221.853 427.41 221.82 427.865 222.082 cv
433.532 225.355 li
433.987 225.618 433.93 226.077 433.405 226.379 cv
427.789 229.621 li
427.263 229.925 426.468 229.958 426.013 229.696 cv
cp
f
434.766 234.748 mo
429.098 231.477 li
428.643 231.214 428.701 230.755 429.226 230.452 cv
434.841 227.209 li
435.367 226.906 436.162 226.873 436.617 227.136 cv
442.285 230.408 li
442.74 230.67 442.682 231.129 442.157 231.433 cv
436.542 234.675 li
436.016 234.979 435.221 235.011 434.766 234.748 cv
cp
f
443.518 239.802 mo
437.851 236.53 li
437.396 236.267 437.453 235.808 437.978 235.505 cv
443.594 232.263 li
444.12 231.959 444.915 231.926 445.37 232.189 cv
451.037 235.461 li
451.492 235.724 451.435 236.183 450.91 236.487 cv
445.293 239.729 li
444.768 240.032 443.973 240.065 443.518 239.802 cv
cp
f
452.271 244.855 mo
446.603 241.583 li
446.148 241.321 446.206 240.862 446.731 240.558 cv
452.346 237.316 li
452.872 237.012 453.667 236.98 454.122 237.243 cv
459.79 240.514 li
460.245 240.777 460.187 241.236 459.662 241.539 cv
454.046 244.782 li
453.521 245.085 452.726 245.118 452.271 244.855 cv
cp
f
461.023 249.909 mo
455.356 246.636 li
454.901 246.373 454.958 245.914 455.483 245.612 cv
461.099 242.37 li
461.625 242.066 462.419 242.033 462.875 242.295 cv
468.542 245.568 li
468.997 245.83 468.94 246.289 468.415 246.593 cv
462.798 249.835 li
462.273 250.138 461.478 250.171 461.023 249.909 cv
cp
f
469.776 254.961 mo
464.108 251.69 li
463.653 251.427 463.71 250.968 464.236 250.664 cv
469.851 247.422 li
470.376 247.119 471.171 247.086 471.626 247.349 cv
477.294 250.62 li
477.75 250.883 477.692 251.342 477.167 251.646 cv
471.551 254.888 li
471.026 255.192 470.231 255.224 469.776 254.961 cv
cp
f
478.528 260.015 mo
472.861 256.743 li
472.406 256.48 472.462 256.021 472.988 255.718 cv
478.604 252.476 li
479.129 252.172 479.924 252.139 480.379 252.402 cv
486.046 255.674 li
486.501 255.937 486.445 256.396 485.919 256.7 cv
480.303 259.942 li
479.778 260.245 478.983 260.278 478.528 260.015 cv
cp
f
487.281 265.068 mo
481.613 261.796 li
481.158 261.534 481.215 261.075 481.741 260.771 cv
487.356 257.529 li
487.881 257.225 488.676 257.193 489.131 257.455 cv
494.799 260.727 li
495.254 260.99 495.197 261.449 494.671 261.752 cv
489.056 264.995 li
488.531 265.298 487.736 265.33 487.281 265.068 cv
cp
f
367.222 225.266 mo
350.53 215.629 li
350.075 215.367 350.132 214.908 350.658 214.604 cv
356.273 211.362 li
356.798 211.059 357.593 211.026 358.048 211.288 cv
374.741 220.925 li
375.196 221.188 375.138 221.647 374.613 221.951 cv
368.998 225.193 li
368.472 225.496 367.677 225.529 367.222 225.266 cv
cp
f
474.748 287.346 mo
458.056 277.709 li
457.601 277.447 457.659 276.988 458.184 276.684 cv
463.799 273.442 li
464.325 273.139 465.12 273.106 465.575 273.369 cv
482.266 283.005 li
482.721 283.268 482.665 283.727 482.139 284.031 cv
476.523 287.273 li
475.998 287.577 475.203 287.609 474.748 287.346 cv
cp
f
439.746 278.3 mo
434.078 275.028 li
433.623 274.765 433.68 274.306 434.206 274.002 cv
440.895 270.14 li
441.42 269.837 442.215 269.804 442.67 270.067 cv
448.338 273.339 li
448.793 273.602 448.736 274.061 448.21 274.364 cv
441.521 278.226 li
440.996 278.53 440.201 278.563 439.746 278.3 cv
cp
f
376.185 241.603 mo
367.121 236.37 li
366.666 236.107 366.723 235.649 367.249 235.345 cv
373.938 231.483 li
374.463 231.179 375.258 231.147 375.713 231.41 cv
384.778 236.642 li
385.233 236.905 385.175 237.364 384.65 237.667 cv
377.96 241.53 li
377.435 241.833 376.64 241.866 376.185 241.603 cv
cp
f
431.312 273.431 mo
422.249 268.198 li
421.793 267.935 421.85 267.476 422.375 267.173 cv
429.066 263.311 li
429.591 263.007 430.386 262.974 430.841 263.237 cv
439.905 268.47 li
440.36 268.733 440.303 269.192 439.778 269.495 cv
433.087 273.358 li
432.562 273.661 431.767 273.694 431.312 273.431 cv
cp
f
388.813 248.894 mo
379.749 243.661 li
379.293 243.398 379.351 242.939 379.876 242.636 cv
386.566 238.774 li
387.091 238.47 387.886 238.437 388.341 238.7 cv
397.406 243.933 li
397.861 244.196 397.803 244.655 397.278 244.958 cv
390.588 248.821 li
390.063 249.123 389.268 249.157 388.813 248.894 cv
cp
f
388.403 238.736 mo
427.811 261.488 li
428.299 261.77 428.299 262.228 427.811 262.51 cv
420.989 266.449 li
420.5 266.731 419.708 266.731 419.218 266.449 cv
379.81 243.697 li
388.403 238.736 li
cp
f
464.208 287.462 mo
470.52 291.107 li
470.893 291.322 470.846 291.699 470.416 291.947 cv
467.679 293.527 li
467.249 293.776 466.597 293.802 466.224 293.587 cv
459.911 289.943 li
459.538 289.727 459.584 289.351 460.015 289.102 cv
462.752 287.522 li
463.183 287.274 463.834 287.246 464.208 287.462 cv
cp
f
455.382 282.367 mo
461.695 286.012 li
462.068 286.227 462.022 286.603 461.59 286.852 cv
458.854 288.432 li
458.423 288.68 457.772 288.707 457.399 288.492 cv
451.085 284.847 li
450.713 284.632 450.759 284.255 451.19 284.007 cv
453.927 282.427 li
454.358 282.178 455.009 282.152 455.382 282.367 cv
cp
f
446.629 277.314 mo
452.943 280.958 li
453.316 281.174 453.269 281.55 452.838 281.798 cv
450.102 283.378 li
449.671 283.627 449.02 283.655 448.647 283.439 cv
442.333 279.794 li
441.96 279.578 442.007 279.203 442.438 278.953 cv
445.174 277.373 li
445.605 277.125 446.256 277.098 446.629 277.314 cv
cp
f
460.215 279.577 mo
466.529 283.221 li
466.902 283.437 466.855 283.813 466.424 284.061 cv
463.688 285.641 li
463.257 285.89 462.605 285.917 462.232 285.702 cv
455.919 282.057 li
455.546 281.841 455.593 281.465 456.024 281.216 cv
458.76 279.636 li
459.191 279.388 459.842 279.361 460.215 279.577 cv
cp
f
84.1687 172.804 mo
85.4587 172.804 li
86.5037 172.804 87.2283 172.56 87.6306 172.072 cv
88.0339 171.584 88.2351 170.779 88.2351 169.656 cv
88.2351 168.494 88.0085 167.651 87.5554 167.128 cv
87.1023 166.606 86.3416 166.344 85.2722 166.344 cv
84.1687 166.344 li
84.1687 172.804 li
cp
84.1687 163.87 mo
85.2605 163.87 li
86.2908 163.87 86.9998 163.649 87.3875 163.207 cv
87.7742 162.766 87.9675 162.022 87.9675 160.977 cv
87.9675 160.435 87.9041 159.995 87.7761 159.658 cv
87.6482 159.321 87.4333 159.068 87.1316 158.897 cv
86.8289 158.727 86.4939 158.615 86.1267 158.56 cv
85.7585 158.506 85.2683 158.479 84.657 158.479 cv
84.1687 158.479 li
84.1687 163.87 li
cp
80.6599 175.279 mo
80.6599 156.016 li
85.3767 156.016 li
86.2673 156.016 87.0447 156.095 87.7068 156.254 cv
88.3689 156.412 88.9568 156.676 89.4724 157.044 cv
89.9871 157.411 90.3767 157.921 90.6404 158.572 cv
90.9031 159.222 91.031 160.008 91.0232 160.93 cv
91.0154 163.308 90.071 164.636 88.1882 164.915 cv
89.3269 165.132 90.1775 165.629 90.739 166.408 cv
91.3005 167.187 91.5847 168.281 91.5925 169.69 cv
91.6003 171.518 91.1433 172.907 90.2214 173.855 cv
89.2996 174.804 87.9558 175.279 86.1902 175.279 cv
80.6599 175.279 li
cp
f
99.1443 175.511 mo
98.2849 175.511 97.5398 175.411 96.908 175.208 cv
96.2771 175.007 95.7576 174.725 95.3513 174.361 cv
94.9451 173.996 94.6199 173.53 94.3757 172.96 cv
94.1316 172.391 93.9607 171.776 93.864 171.114 cv
93.7673 170.452 93.7195 169.683 93.7195 168.807 cv
93.7195 156.016 li
97.1228 156.016 li
97.1228 169.167 li
97.1228 169.617 97.1345 170 97.158 170.318 cv
97.1814 170.635 97.2312 170.968 97.3093 171.317 cv
97.3865 171.665 97.4968 171.944 97.6404 172.153 cv
97.783 172.363 97.9812 172.536 98.2332 172.676 cv
98.4841 172.816 98.7888 172.885 99.1443 172.885 cv
99.5007 172.885 99.8044 172.816 100.056 172.676 cv
100.308 172.536 100.502 172.363 100.637 172.153 cv
100.773 171.944 100.882 171.665 100.963 171.317 cv
101.045 170.968 101.094 170.637 101.114 170.324 cv
101.134 170.01 101.143 169.624 101.143 169.167 cv
101.143 156.016 li
104.547 156.016 li
104.547 168.807 li
104.547 169.683 104.499 170.452 104.402 171.114 cv
104.304 171.776 104.135 172.391 103.89 172.96 cv
103.646 173.53 103.323 173.996 102.921 174.361 cv
102.517 174.725 102.001 175.007 101.37 175.208 cv
100.738 175.411 99.9968 175.511 99.1443 175.511 cv
cp
f
112.134 175.511 mo
108.741 175.511 106.96 173.551 106.79 169.632 cv
109.844 168.994 li
109.923 171.541 110.65 172.816 112.029 172.816 cv
112.563 172.816 112.961 172.653 113.219 172.328 cv
113.479 172.002 113.609 171.565 113.609 171.015 cv
113.609 170.48 113.512 169.991 113.319 169.545 cv
113.125 169.1 112.9 168.736 112.645 168.453 cv
112.389 168.17 112.025 167.82 111.552 167.402 cv
109.02 165.205 li
108.276 164.555 107.722 163.879 107.358 163.178 cv
106.995 162.477 106.812 161.6 106.812 160.546 cv
106.812 159.052 107.252 157.89 108.132 157.061 cv
109.01 156.233 110.217 155.811 111.751 155.795 cv
112.455 155.787 113.079 155.874 113.621 156.056 cv
114.163 156.239 114.61 156.483 114.963 156.788 cv
115.315 157.094 115.609 157.476 115.845 157.933 cv
116.082 158.39 116.259 158.864 116.374 159.356 cv
116.49 159.848 116.572 160.396 116.618 160.999 cv
113.621 161.592 li
113.605 161.205 113.58 160.869 113.546 160.581 cv
113.51 160.295 113.45 160.004 113.365 159.71 cv
113.28 159.416 113.17 159.178 113.034 158.995 cv
112.898 158.814 112.717 158.668 112.488 158.56 cv
112.26 158.452 111.994 158.409 111.692 158.432 cv
111.174 158.463 110.776 158.635 110.502 158.95 cv
110.226 159.263 110.089 159.683 110.089 160.209 cv
110.089 160.829 110.211 161.339 110.455 161.738 cv
110.699 162.136 111.08 162.565 111.599 163.022 cv
114.109 165.205 li
114.527 165.585 114.891 165.953 115.201 166.309 cv
115.51 166.665 115.806 167.073 116.09 167.53 cv
116.372 167.987 116.588 168.49 116.734 169.039 cv
116.882 169.589 116.955 170.17 116.955 170.783 cv
116.955 172.184 116.511 173.323 115.625 174.198 cv
114.738 175.074 113.574 175.511 112.134 175.511 cv
cp
f
119.116 175.279 mo
119.116 156.016 li
122.579 156.016 li
122.579 175.279 li
119.116 175.279 li
cp
f
125.541 175.279 mo
125.541 156.016 li
127.958 156.016 li
132.675 166.925 li
132.675 156.016 li
135.579 156.016 li
135.579 175.279 li
133.279 175.279 li
128.515 163.812 li
128.515 175.279 li
125.541 175.279 li
cp
f
138.46 175.279 mo
138.46 156.016 li
146.523 156.016 li
146.523 158.491 li
141.969 158.491 li
141.969 164.021 li
145.57 164.021 li
145.57 166.495 li
141.969 166.495 li
141.969 172.85 li
146.581 172.85 li
146.581 175.279 li
138.46 175.279 li
cp
f
153.459 175.511 mo
150.066 175.511 148.285 173.551 148.115 169.632 cv
151.17 168.994 li
151.248 171.541 151.975 172.816 153.354 172.816 cv
153.888 172.816 154.286 172.653 154.545 172.328 cv
154.804 172.002 154.934 171.565 154.934 171.015 cv
154.934 170.48 154.838 169.991 154.644 169.545 cv
154.45 169.1 154.225 168.736 153.97 168.453 cv
153.715 168.17 153.35 167.82 152.878 167.402 cv
150.345 165.205 li
149.601 164.555 149.048 163.879 148.683 163.178 cv
148.32 162.477 148.137 161.6 148.137 160.546 cv
148.137 159.052 148.577 157.89 149.457 157.061 cv
150.336 156.233 151.542 155.811 153.076 155.795 cv
153.78 155.787 154.404 155.874 154.946 156.056 cv
155.488 156.239 155.935 156.483 156.288 156.788 cv
156.64 157.094 156.934 157.476 157.171 157.933 cv
157.407 158.39 157.584 158.864 157.699 159.356 cv
157.815 159.848 157.897 160.396 157.943 160.999 cv
154.946 161.592 li
154.93 161.205 154.905 160.869 154.871 160.581 cv
154.836 160.295 154.775 160.004 154.69 159.71 cv
154.605 159.416 154.495 159.178 154.359 158.995 cv
154.223 158.814 154.042 158.668 153.813 158.56 cv
153.585 158.452 153.319 158.409 153.017 158.432 cv
152.499 158.463 152.101 158.635 151.827 158.95 cv
151.552 159.263 151.414 159.683 151.414 160.209 cv
151.414 160.829 151.536 161.339 151.78 161.738 cv
152.024 162.136 152.405 162.565 152.925 163.022 cv
155.434 165.205 li
155.852 165.585 156.217 165.953 156.526 166.309 cv
156.836 166.665 157.132 167.073 157.415 167.53 cv
157.697 167.987 157.913 168.49 158.059 169.039 cv
158.207 169.589 158.28 170.17 158.28 170.783 cv
158.28 172.184 157.837 173.323 156.95 174.198 cv
156.063 175.074 154.899 175.511 153.459 175.511 cv
cp
f
165.193 175.511 mo
161.801 175.511 160.019 173.551 159.849 169.632 cv
162.904 168.994 li
162.982 171.541 163.71 172.816 165.089 172.816 cv
165.623 172.816 166.02 172.653 166.279 172.328 cv
166.539 172.002 166.669 171.565 166.669 171.015 cv
166.669 170.48 166.572 169.991 166.379 169.545 cv
166.184 169.1 165.96 168.736 165.705 168.453 cv
165.449 168.17 165.085 167.82 164.612 167.402 cv
162.08 165.205 li
161.336 164.555 160.782 163.879 160.418 163.178 cv
160.054 162.477 159.872 161.6 159.872 160.546 cv
159.872 159.052 160.311 157.89 161.191 157.061 cv
162.07 156.233 163.276 155.811 164.81 155.795 cv
165.514 155.787 166.138 155.874 166.68 156.056 cv
167.222 156.239 167.67 156.483 168.022 156.788 cv
168.375 157.094 168.669 157.476 168.905 157.933 cv
169.141 158.39 169.318 158.864 169.433 159.356 cv
169.55 159.848 169.632 160.396 169.677 160.999 cv
166.68 161.592 li
166.665 161.205 166.639 160.869 166.605 160.581 cv
166.57 160.295 166.51 160.004 166.425 159.71 cv
166.34 159.416 166.229 159.178 166.094 158.995 cv
165.958 158.814 165.776 158.668 165.548 158.56 cv
165.319 158.452 165.053 158.409 164.752 158.432 cv
164.233 158.463 163.836 158.635 163.561 158.95 cv
163.286 159.263 163.148 159.683 163.148 160.209 cv
163.148 160.829 163.27 161.339 163.514 161.738 cv
163.759 162.136 164.139 162.565 164.659 163.022 cv
167.169 165.205 li
167.587 165.585 167.951 165.953 168.26 166.309 cv
168.57 166.665 168.866 167.073 169.149 167.53 cv
169.431 167.987 169.647 168.49 169.794 169.039 cv
169.941 169.589 170.014 170.17 170.014 170.783 cv
170.014 172.184 169.571 173.323 168.684 174.198 cv
167.798 175.074 166.634 175.511 165.193 175.511 cv
cp
f
181.353 168.517 mo
183.933 168.517 li
182.643 160.605 li
181.353 168.517 li
cp
176.881 175.279 mo
180.796 156.016 li
184.456 156.016 li
188.359 175.279 li
185.094 175.279 li
184.316 170.805 li
180.982 170.805 li
180.192 175.279 li
176.881 175.279 li
cp
f
190.253 175.279 mo
190.253 156.016 li
192.67 156.016 li
197.386 166.925 li
197.386 156.016 li
200.291 156.016 li
200.291 175.279 li
197.991 175.279 li
193.227 163.812 li
193.227 175.279 li
190.253 175.279 li
cp
f
206.646 168.517 mo
209.226 168.517 li
207.936 160.605 li
206.646 168.517 li
cp
202.174 175.279 mo
206.089 156.016 li
209.749 156.016 li
213.652 175.279 li
210.387 175.279 li
209.609 170.805 li
206.275 170.805 li
205.485 175.279 li
202.174 175.279 li
cp
f
215.546 175.279 mo
215.546 156.016 li
219.054 156.016 li
219.054 172.85 li
223.667 172.85 li
223.667 175.279 li
215.546 175.279 li
cp
f
227.43 175.279 mo
227.43 167.948 li
223.504 156.016 li
226.78 156.016 li
229.162 163.684 li
231.439 156.016 li
234.68 156.016 li
230.777 167.948 li
230.777 175.279 li
227.43 175.279 li
cp
f
241.21 175.511 mo
237.817 175.511 236.036 173.551 235.866 169.632 cv
238.921 168.994 li
238.999 171.541 239.726 172.816 241.105 172.816 cv
241.639 172.816 242.037 172.653 242.296 172.328 cv
242.555 172.002 242.685 171.565 242.685 171.015 cv
242.685 170.48 242.589 169.991 242.395 169.545 cv
242.201 169.1 241.976 168.736 241.721 168.453 cv
241.466 168.17 241.101 167.82 240.629 167.402 cv
238.096 165.205 li
237.352 164.555 236.799 163.879 236.434 163.178 cv
236.071 162.477 235.888 161.6 235.888 160.546 cv
235.888 159.052 236.328 157.89 237.208 157.061 cv
238.087 156.233 239.293 155.811 240.827 155.795 cv
241.531 155.787 242.155 155.874 242.697 156.056 cv
243.239 156.239 243.686 156.483 244.039 156.788 cv
244.391 157.094 244.685 157.476 244.922 157.933 cv
245.158 158.39 245.335 158.864 245.45 159.356 cv
245.566 159.848 245.648 160.396 245.694 160.999 cv
242.697 161.592 li
242.681 161.205 242.656 160.869 242.622 160.581 cv
242.587 160.295 242.526 160.004 242.441 159.71 cv
242.356 159.416 242.246 159.178 242.11 158.995 cv
241.974 158.814 241.793 158.668 241.564 158.56 cv
241.336 158.452 241.07 158.409 240.768 158.432 cv
240.25 158.463 239.852 158.635 239.578 158.95 cv
239.302 159.263 239.165 159.683 239.165 160.209 cv
239.165 160.829 239.287 161.339 239.531 161.738 cv
239.775 162.136 240.156 162.565 240.676 163.022 cv
243.185 165.205 li
243.603 165.585 243.968 165.953 244.277 166.309 cv
244.587 166.665 244.883 167.073 245.166 167.53 cv
245.448 167.987 245.664 168.49 245.81 169.039 cv
245.958 169.589 246.031 170.17 246.031 170.783 cv
246.031 172.184 245.588 173.323 244.701 174.198 cv
243.814 175.074 242.65 175.511 241.21 175.511 cv
cp
f
248.192 175.279 mo
248.192 156.016 li
251.655 156.016 li
251.655 175.279 li
248.192 175.279 li
cp
f
259.473 175.511 mo
256.081 175.511 254.3 173.551 254.13 169.632 cv
257.184 168.994 li
257.262 171.541 257.99 172.816 259.369 172.816 cv
259.903 172.816 260.301 172.653 260.559 172.328 cv
260.819 172.002 260.949 171.565 260.949 171.015 cv
260.949 170.48 260.852 169.991 260.659 169.545 cv
260.465 169.1 260.24 168.736 259.985 168.453 cv
259.729 168.17 259.365 167.82 258.892 167.402 cv
256.36 165.205 li
255.616 164.555 255.062 163.879 254.698 163.178 cv
254.335 162.477 254.152 161.6 254.152 160.546 cv
254.152 159.052 254.592 157.89 255.471 157.061 cv
256.35 156.233 257.556 155.811 259.091 155.795 cv
259.795 155.787 260.419 155.874 260.961 156.056 cv
261.503 156.239 261.95 156.483 262.302 156.788 cv
262.655 157.094 262.949 157.476 263.185 157.933 cv
263.422 158.39 263.598 158.864 263.714 159.356 cv
263.83 159.848 263.912 160.396 263.958 160.999 cv
260.961 161.592 li
260.945 161.205 260.92 160.869 260.885 160.581 cv
260.85 160.295 260.79 160.004 260.705 159.71 cv
260.62 159.416 260.51 159.178 260.374 158.995 cv
260.238 158.814 260.056 158.668 259.828 158.56 cv
259.599 158.452 259.334 158.409 259.032 158.432 cv
258.513 158.463 258.116 158.635 257.842 158.95 cv
257.566 159.263 257.428 159.683 257.428 160.209 cv
257.428 160.829 257.551 161.339 257.795 161.738 cv
258.039 162.136 258.42 162.565 258.939 163.022 cv
261.449 165.205 li
261.867 165.585 262.231 165.953 262.541 166.309 cv
262.85 166.665 263.146 167.073 263.429 167.53 cv
263.712 167.987 263.927 168.49 264.074 169.039 cv
264.221 169.589 264.295 170.17 264.295 170.783 cv
264.295 172.184 263.851 173.323 262.965 174.198 cv
262.078 175.074 260.914 175.511 259.473 175.511 cv
cp
f
176.498 265.061 mo
92.6609 265.061 li
86.2 265.061 80.9626 259.824 80.9626 253.363 cv
80.9626 246.902 86.2 241.664 92.6609 241.664 cv
176.498 241.664 li
182.959 241.664 188.196 246.902 188.196 253.363 cv
188.196 259.824 182.959 265.061 176.498 265.061 cv
cp
0 .912535 0 0 cmyk
f
109.014 258.573 mo
109.014 250.027 li
107.359 250.027 li
107.359 248.699 li
112.415 248.699 li
112.415 250.027 li
110.813 250.027 li
110.813 258.573 li
109.014 258.573 li
cp
0 0 0 0 cmyk
f
115 252.915 mo
115.434 252.915 li
115.967 252.915 116.344 252.802 116.569 252.576 cv
116.793 252.349 116.905 251.962 116.905 251.414 cv
116.905 250.886 116.808 250.508 116.614 250.28 cv
116.419 250.051 116.061 249.937 115.542 249.937 cv
115 249.937 li
115 252.915 li
cp
113.201 258.573 mo
113.201 248.699 li
115.465 248.699 li
115.984 248.699 116.43 248.742 116.804 248.827 cv
117.177 248.912 117.502 249.055 117.778 249.255 cv
118.053 249.456 118.26 249.728 118.397 250.072 cv
118.534 250.414 118.602 250.834 118.602 251.33 cv
118.602 251.951 118.51 252.456 118.326 252.85 cv
118.141 253.243 117.837 253.529 117.412 253.707 cv
118.781 258.573 li
116.977 258.573 li
115.798 254.065 li
115 254.065 li
115 258.573 li
113.201 258.573 li
cp
f
121.336 258.573 mo
121.336 254.815 li
119.323 248.699 li
121.003 248.699 li
122.223 252.629 li
123.39 248.699 li
125.052 248.699 li
123.051 254.815 li
123.051 258.573 li
121.336 258.573 li
cp
f
128.941 258.573 mo
128.941 248.699 li
130.716 248.699 li
130.716 258.573 li
128.941 258.573 li
cp
f
133.199 258.573 mo
133.199 250.027 li
131.544 250.027 li
131.544 248.699 li
136.599 248.699 li
136.599 250.027 li
134.998 250.027 li
134.998 258.573 li
133.199 258.573 li
cp
f
140.363 258.573 mo
140.363 248.699 li
141.602 248.699 li
144.02 254.29 li
144.02 248.699 li
145.509 248.699 li
145.509 258.573 li
144.33 258.573 li
141.887 252.695 li
141.887 258.573 li
140.363 258.573 li
cp
f
149.222 257.281 mo
149.347 257.332 149.498 257.358 149.673 257.358 cv
149.846 257.358 149.996 257.332 150.119 257.281 cv
150.242 257.229 150.341 257.161 150.414 257.078 cv
150.487 256.995 150.545 256.885 150.587 256.75 cv
150.628 256.616 150.656 256.48 150.67 256.345 cv
150.683 256.21 150.69 256.049 150.69 255.863 cv
150.69 251.378 li
150.69 251.14 150.678 250.942 150.655 250.783 cv
150.631 250.624 150.585 250.474 150.514 250.333 cv
150.445 250.193 150.342 250.087 150.202 250.018 cv
150.063 249.949 149.886 249.913 149.673 249.913 cv
149.458 249.913 149.28 249.949 149.139 250.018 cv
148.998 250.087 148.894 250.193 148.827 250.333 cv
148.759 250.474 148.714 250.624 148.689 250.783 cv
148.666 250.942 148.654 251.14 148.654 251.378 cv
148.654 255.863 li
148.654 256.049 148.661 256.21 148.675 256.345 cv
148.688 256.48 148.717 256.616 148.758 256.75 cv
148.8 256.885 148.856 256.995 148.927 257.078 cv
148.999 257.161 149.097 257.229 149.222 257.281 cv
cp
149.673 258.692 mo
148.656 258.692 147.927 258.415 147.486 257.864 cv
147.046 257.312 146.826 256.504 146.826 255.44 cv
146.826 251.795 li
146.826 251.271 146.875 250.817 146.974 250.432 cv
147.074 250.046 147.233 249.713 147.454 249.431 cv
147.675 249.149 147.969 248.938 148.339 248.797 cv
148.708 248.656 149.152 248.585 149.673 248.585 cv
150.684 248.585 151.412 248.858 151.855 249.402 cv
152.298 249.946 152.519 250.744 152.519 251.795 cv
152.519 255.44 li
152.519 255.956 152.469 256.41 152.367 256.801 cv
152.265 257.192 152.105 257.532 151.885 257.82 cv
151.664 258.107 151.37 258.325 151 258.471 cv
150.631 258.619 150.188 258.692 149.673 258.692 cv
cp
f
154.907 258.573 mo
153.496 248.699 li
155.009 248.699 li
155.818 255.065 li
156.872 248.699 li
158.081 248.699 li
159.159 255.071 li
159.969 248.699 li
161.452 248.699 li
160.041 258.573 li
158.605 258.573 li
157.492 251.98 li
156.384 258.573 li
154.907 258.573 li
cp
f
84.8737 198.084 mo
81.6921 198.084 li
81.6921 189.698 li
82.4861 189.698 li
82.4861 197.493 li
84.8737 197.493 li
84.8737 198.084 li
.472602 .264286 .0650339 0 cmyk
f
86.988 198.18 mo
86.6814 198.18 86.4236 198.131 86.2146 198.034 cv
86.0057 197.936 85.8406 197.788 85.7215 197.588 cv
85.6013 197.39 85.5163 197.157 85.4656 196.888 cv
85.4148 196.62 85.3904 196.297 85.3904 195.919 cv
85.3904 194.26 li
85.3904 193.498 85.5076 192.932 85.7439 192.561 cv
85.9801 192.19 86.3943 192.004 86.988 192.004 cv
87.5848 192.004 88.0007 192.189 88.2352 192.558 cv
88.4695 192.927 88.5866 193.495 88.5866 194.26 cv
88.5866 195.919 li
88.5866 196.297 88.5612 196.62 88.5105 196.888 cv
88.4608 197.157 88.3747 197.39 88.2556 197.588 cv
88.1354 197.788 87.9714 197.936 87.7625 198.034 cv
87.5535 198.131 87.2947 198.18 86.988 198.18 cv
86.988 192.571 mo
86.86 192.571 86.7487 192.588 86.6541 192.621 cv
86.5602 192.656 86.4821 192.71 86.4216 192.786 cv
86.2751 193.029 li
86.2381 193.115 86.2097 193.227 86.1912 193.365 cv
86.1726 193.503 86.1608 193.634 86.156 193.757 cv
86.1511 193.88 86.1482 194.035 86.1482 194.22 cv
86.1482 195.96 li
86.1482 196.146 86.1511 196.3 86.156 196.423 cv
86.1608 196.546 86.1726 196.676 86.1912 196.815 cv
86.2097 196.953 86.2381 197.065 86.2751 197.151 cv
86.4216 197.394 li
86.4821 197.47 86.5602 197.525 86.6541 197.558 cv
86.7487 197.592 86.86 197.609 86.988 197.609 cv
87.1403 197.609 87.2683 197.581 87.3728 197.526 cv
87.4772 197.47 87.5594 197.4 87.618 197.316 cv
87.6766 197.231 87.7215 197.112 87.7516 196.956 cv
87.782 196.801 87.8015 196.653 87.8102 196.511 cv
87.8191 196.369 87.823 196.186 87.823 195.96 cv
87.823 194.22 li
87.823 193.995 87.8191 193.81 87.8102 193.668 cv
87.8015 193.527 87.782 193.378 87.7516 193.223 cv
87.7215 193.069 87.6766 192.949 87.618 192.865 cv
87.5594 192.78 87.4772 192.71 87.3728 192.655 cv
87.2683 192.599 87.1403 192.571 86.988 192.571 cv
f
90.448 198.084 mo
89.6893 198.084 li
89.6893 192.095 li
90.448 192.095 li
90.448 192.92 li
90.6297 192.617 90.8425 192.392 91.0877 192.247 cv
91.3318 192.102 91.5788 192.03 91.8289 192.03 cv
91.9598 192.035 li
91.9598 192.854 li
91.8524 192.811 91.7302 192.788 91.5955 192.788 cv
91.1101 192.788 90.7273 193.021 90.448 193.487 cv
90.448 198.084 li
f
94.2214 198.18 mo
93.6482 198.18 93.2351 198.003 92.9822 197.65 cv
92.7292 197.295 92.6032 196.69 92.6032 195.833 cv
92.6032 194.321 li
92.6032 193.738 92.6629 193.275 92.782 192.933 cv
92.9021 192.59 93.0779 192.35 93.3083 192.212 cv
93.5397 192.074 93.8454 192.004 94.2263 192.004 cv
94.4793 192.004 94.6951 192.037 94.8737 192.103 cv
95.0525 192.169 95.2009 192.262 95.3191 192.384 cv
95.4373 192.505 95.531 192.669 95.5993 192.877 cv
95.6687 193.084 95.7165 193.314 95.7438 193.565 cv
95.7712 193.816 95.7839 194.118 95.7839 194.473 cv
95.779 195.014 li
93.361 195.014 li
93.361 195.91 li
93.361 196.53 93.4217 196.968 93.5408 197.224 cv
93.6608 197.481 93.8855 197.609 94.2166 197.609 cv
94.4793 197.609 94.6814 197.526 94.8229 197.359 cv
94.9646 197.192 95.0359 196.889 95.0359 196.451 cv
95.0359 196.036 li
95.779 196.036 li
95.779 196.369 li
95.779 196.95 95.6579 197.397 95.4147 197.71 cv
95.1726 198.024 94.7741 198.18 94.2214 198.18 cv
94.2214 192.571 mo
93.9011 192.571 93.6775 192.682 93.5515 192.905 cv
93.4245 193.127 93.361 193.55 93.361 194.174 cv
93.361 194.579 li
95.0359 194.579 li
95.0359 194.083 li
95.0359 193.874 95.031 193.701 95.0203 193.562 cv
95.0105 193.424 94.9891 193.287 94.9578 193.15 cv
94.9255 193.014 94.8806 192.907 94.8229 192.829 cv
94.7663 192.751 94.6862 192.689 94.5856 192.642 cv
94.4841 192.594 94.363 192.571 94.2214 192.571 cv
f
102.365 198.084 mo
101.646 198.084 li
101.646 193.38 li
101.646 193.053 101.595 192.826 101.495 192.698 cv
101.393 192.57 101.249 192.505 101.059 192.505 cv
100.678 192.512 100.303 192.719 99.9314 193.127 cv
99.9383 193.229 99.9422 193.306 99.9422 193.36 cv
99.9422 198.084 li
99.2341 198.084 li
99.2341 193.38 li
99.2341 193.053 99.1814 192.826 99.0769 192.698 cv
98.9725 192.57 98.8259 192.505 98.6365 192.505 cv
98.2555 192.512 97.8835 192.719 97.5192 193.127 cv
97.5192 198.084 li
96.8055 198.084 li
96.8055 192.095 li
97.5192 192.095 li
97.5192 192.703 li
97.9206 192.227 98.3904 191.99 98.9304 191.99 cv
99.4294 191.99 99.7429 192.252 99.8708 192.779 cv
100.289 192.252 100.782 191.99 101.348 191.99 cv
101.645 191.99 101.888 192.096 102.079 192.311 cv
102.269 192.525 102.365 192.874 102.365 193.36 cv
102.365 198.084 li
f
106.436 198.084 mo
105.678 198.084 li
105.678 192.095 li
106.436 192.095 li
106.436 198.084 li
106.442 191.271 mo
105.678 191.271 li
105.678 190.24 li
106.442 190.24 li
106.442 191.271 li
f
108.47 200.057 mo
107.712 200.057 li
107.712 192.095 li
108.47 192.095 li
108.47 192.596 li
108.791 192.202 109.174 192.004 109.618 192.004 cv
109.841 192.004 110.036 192.05 110.203 192.141 cv
110.369 192.232 110.501 192.35 110.597 192.496 cv
110.693 192.64 110.77 192.821 110.83 193.036 cv
110.888 193.252 110.927 193.465 110.946 193.676 cv
110.965 193.887 110.973 194.125 110.973 194.392 cv
110.973 195.657 li
110.973 195.973 110.961 196.256 110.933 196.506 cv
110.906 196.756 110.859 196.988 110.792 197.202 cv
110.724 197.415 110.635 197.593 110.526 197.733 cv
110.417 197.872 110.279 197.983 110.114 198.062 cv
109.949 198.141 109.757 198.18 109.537 198.18 cv
109.149 198.18 108.794 197.99 108.47 197.609 cv
108.47 200.057 li
109.401 192.601 mo
109.093 192.601 108.784 192.755 108.47 193.062 cv
108.47 197.144 li
108.747 197.434 109.062 197.578 109.416 197.578 cv
109.551 197.578 109.666 197.551 109.759 197.496 cv
109.854 197.44 109.931 197.364 109.99 197.268 cv
110.049 197.171 110.095 197.04 110.129 196.875 cv
110.163 196.71 110.185 196.534 110.197 196.347 cv
110.209 196.16 110.215 195.933 110.215 195.666 cv
110.215 194.392 li
110.215 193.751 110.161 193.292 110.053 193.016 cv
109.945 192.74 109.728 192.601 109.401 192.601 cv
f
113.401 198.18 mo
112.925 198.18 112.546 198.027 112.261 197.72 cv
111.975 197.413 111.813 196.998 111.772 196.476 cv
112.41 196.284 li
112.45 196.739 112.554 197.074 112.723 197.287 cv
112.892 197.502 113.128 197.609 113.431 197.609 cv
113.695 197.609 113.902 197.532 114.054 197.376 cv
114.199 197.228 114.271 197.029 114.271 196.78 cv
114.271 196.744 li
114.262 196.346 114.018 195.949 113.543 195.55 cv
112.728 194.857 li
112.442 194.618 112.233 194.383 112.101 194.154 cv
111.973 193.932 111.909 193.672 111.909 193.375 cv
111.909 192.937 112.041 192.598 112.303 192.359 cv
112.56 192.122 112.906 192.004 113.341 192.004 cv
113.782 192.004 114.122 192.146 114.36 192.429 cv
114.597 192.712 114.73 193.095 114.757 193.577 cv
114.22 193.754 li
114.197 193.353 114.115 193.056 113.975 192.862 cv
113.836 192.668 113.634 192.571 113.371 192.571 cv
113.135 192.571 112.946 192.637 112.804 192.768 cv
112.666 192.897 112.597 193.069 112.597 193.285 cv
112.597 193.48 112.633 193.648 112.703 193.787 cv
112.774 193.927 112.904 194.079 113.093 194.241 cv
113.937 194.998 li
114.09 195.13 114.213 195.245 114.309 195.345 cv
114.405 195.445 114.508 195.568 114.615 195.714 cv
114.723 195.862 114.803 196.02 114.855 196.19 cv
114.908 196.361 114.935 196.543 114.939 196.739 cv
114.939 197.198 114.8 197.552 114.524 197.804 cv
114.248 198.055 113.874 198.18 113.401 198.18 cv
f
116.669 198.175 mo
116.368 198.175 116.139 198.064 115.98 197.841 cv
115.822 197.619 115.743 197.304 115.743 196.896 cv
115.743 192.095 li
116.507 192.095 li
116.507 196.739 li
116.507 197.042 116.552 197.258 116.643 197.386 cv
116.734 197.514 116.878 197.578 117.073 197.578 cv
117.414 197.578 117.767 197.383 118.135 196.992 cv
118.135 192.095 li
118.894 192.095 li
118.894 198.084 li
118.135 198.084 li
118.135 197.421 li
117.69 197.924 117.201 198.175 116.669 198.175 cv
f
125.611 198.084 mo
124.892 198.084 li
124.892 193.38 li
124.892 193.053 124.842 192.826 124.741 192.698 cv
124.639 192.57 124.495 192.505 124.305 192.505 cv
123.925 192.512 123.549 192.719 123.177 193.127 cv
123.184 193.229 123.188 193.306 123.188 193.36 cv
123.188 198.084 li
122.48 198.084 li
122.48 193.38 li
122.48 193.053 122.428 192.826 122.323 192.698 cv
122.219 192.57 122.072 192.505 121.883 192.505 cv
121.502 192.512 121.13 192.719 120.765 193.127 cv
120.765 198.084 li
120.051 198.084 li
120.051 192.095 li
120.765 192.095 li
120.765 192.703 li
121.167 192.227 121.637 191.99 122.177 191.99 cv
122.675 191.99 122.989 192.252 123.117 192.779 cv
123.535 192.252 124.028 191.99 124.594 191.99 cv
124.891 191.99 125.134 192.096 125.325 192.311 cv
125.515 192.525 125.611 192.874 125.611 193.36 cv
125.611 198.084 li
f
130.174 198.18 mo
129.658 198.18 129.288 197.987 129.063 197.599 cv
128.839 197.211 128.727 196.567 128.727 195.666 cv
128.727 194.559 li
128.727 194.228 128.739 193.939 128.762 193.689 cv
128.786 193.439 128.83 193.205 128.893 192.986 cv
128.958 192.767 129.042 192.588 129.146 192.45 cv
129.251 192.311 129.386 192.202 129.552 192.123 cv
129.717 192.044 129.912 192.004 130.138 192.004 cv
130.533 192.008 130.885 192.181 131.195 192.526 cv
131.195 189.698 li
131.954 189.698 li
131.954 198.084 li
131.195 198.084 li
131.195 197.66 li
130.891 198.003 130.552 198.177 130.174 198.18 cv
130.305 192.601 mo
129.984 192.601 129.768 192.736 129.655 193.003 cv
129.542 193.272 129.485 193.709 129.485 194.316 cv
129.485 195.727 li
129.485 196.381 129.543 196.854 129.658 197.144 cv
129.772 197.434 129.995 197.578 130.325 197.578 cv
130.619 197.578 130.909 197.447 131.195 197.184 cv
131.195 193.026 li
130.891 192.742 130.595 192.601 130.305 192.601 cv
f
134.599 198.18 mo
134.293 198.18 134.035 198.131 133.826 198.034 cv
133.617 197.936 133.452 197.788 133.333 197.588 cv
133.213 197.39 133.128 197.157 133.077 196.888 cv
133.026 196.62 133.002 196.297 133.002 195.919 cv
133.002 194.26 li
133.002 193.498 133.119 192.932 133.355 192.561 cv
133.592 192.19 134.006 192.004 134.599 192.004 cv
135.196 192.004 135.612 192.189 135.846 192.558 cv
136.081 192.927 136.198 193.495 136.198 194.26 cv
136.198 195.919 li
136.198 196.297 136.173 196.62 136.122 196.888 cv
136.072 197.157 135.986 197.39 135.867 197.588 cv
135.747 197.788 135.583 197.936 135.374 198.034 cv
135.165 198.131 134.906 198.18 134.599 198.18 cv
134.599 192.571 mo
134.471 192.571 134.36 192.588 134.265 192.621 cv
134.172 192.656 134.094 192.71 134.033 192.786 cv
133.887 193.029 li
133.849 193.115 133.821 193.227 133.802 193.365 cv
133.784 193.503 133.772 193.634 133.767 193.757 cv
133.762 193.88 133.759 194.035 133.759 194.22 cv
133.759 195.96 li
133.759 196.146 133.762 196.3 133.767 196.423 cv
133.772 196.546 133.784 196.676 133.802 196.815 cv
133.821 196.953 133.849 197.065 133.887 197.151 cv
134.033 197.394 li
134.094 197.47 134.172 197.525 134.265 197.558 cv
134.36 197.592 134.471 197.609 134.599 197.609 cv
134.752 197.609 134.88 197.581 134.984 197.526 cv
135.089 197.47 135.171 197.4 135.229 197.316 cv
135.288 197.231 135.333 197.112 135.363 196.956 cv
135.393 196.801 135.413 196.653 135.422 196.511 cv
135.43 196.369 135.434 196.186 135.434 195.96 cv
135.434 194.22 li
135.434 193.995 135.43 193.81 135.422 193.668 cv
135.413 193.527 135.393 193.378 135.363 193.223 cv
135.333 193.069 135.288 192.949 135.229 192.865 cv
135.171 192.78 135.089 192.71 134.984 192.655 cv
134.88 192.599 134.752 192.571 134.599 192.571 cv
f
138.109 198.084 mo
137.345 198.084 li
137.345 189.698 li
138.109 189.698 li
138.109 198.084 li
f
140.82 198.18 mo
140.513 198.18 140.256 198.131 140.047 198.034 cv
139.838 197.936 139.673 197.788 139.553 197.588 cv
139.433 197.39 139.348 197.157 139.298 196.888 cv
139.247 196.62 139.222 196.297 139.222 195.919 cv
139.222 194.26 li
139.222 193.498 139.34 192.932 139.576 192.561 cv
139.812 192.19 140.226 192.004 140.82 192.004 cv
141.417 192.004 141.833 192.189 142.067 192.558 cv
142.302 192.927 142.419 193.495 142.419 194.26 cv
142.419 195.919 li
142.419 196.297 142.393 196.62 142.343 196.888 cv
142.293 197.157 142.207 197.39 142.088 197.588 cv
141.967 197.788 141.803 197.936 141.595 198.034 cv
141.385 198.131 141.127 198.18 140.82 198.18 cv
140.82 192.571 mo
140.692 192.571 140.581 192.588 140.486 192.621 cv
140.392 192.656 140.314 192.71 140.254 192.786 cv
140.107 193.029 li
140.07 193.115 140.042 193.227 140.023 193.365 cv
140.005 193.503 139.993 193.634 139.988 193.757 cv
139.983 193.88 139.98 194.035 139.98 194.22 cv
139.98 195.96 li
139.98 196.146 139.983 196.3 139.988 196.423 cv
139.993 196.546 140.005 196.676 140.023 196.815 cv
140.042 196.953 140.07 197.065 140.107 197.151 cv
140.254 197.394 li
140.314 197.47 140.392 197.525 140.486 197.558 cv
140.581 197.592 140.692 197.609 140.82 197.609 cv
140.972 197.609 141.1 197.581 141.205 197.526 cv
141.309 197.47 141.391 197.4 141.45 197.316 cv
141.508 197.231 141.554 197.112 141.584 196.956 cv
141.614 196.801 141.634 196.653 141.642 196.511 cv
141.651 196.369 141.655 196.186 141.655 195.96 cv
141.655 194.22 li
141.655 193.995 141.651 193.81 141.642 193.668 cv
141.634 193.527 141.614 193.378 141.584 193.223 cv
141.554 193.069 141.508 192.949 141.45 192.865 cv
141.391 192.78 141.309 192.71 141.205 192.655 cv
141.1 192.599 140.972 192.571 140.82 192.571 cv
f
144.28 198.084 mo
143.521 198.084 li
143.521 192.095 li
144.28 192.095 li
144.28 192.92 li
144.462 192.617 144.675 192.392 144.92 192.247 cv
145.164 192.102 145.411 192.03 145.661 192.03 cv
145.792 192.035 li
145.792 192.854 li
145.684 192.811 145.562 192.788 145.427 192.788 cv
144.942 192.788 144.559 193.021 144.28 193.487 cv
144.28 198.084 li
f
150.031 198.18 mo
149.555 198.18 149.175 198.027 148.89 197.72 cv
148.605 197.413 148.443 196.998 148.402 196.476 cv
149.04 196.284 li
149.08 196.739 149.184 197.074 149.353 197.287 cv
149.522 197.502 149.758 197.609 150.061 197.609 cv
150.325 197.609 150.532 197.532 150.683 197.376 cv
150.829 197.228 150.901 197.029 150.901 196.78 cv
150.901 196.744 li
150.891 196.346 150.648 195.949 150.173 195.55 cv
149.358 194.857 li
149.072 194.618 148.863 194.383 148.731 194.154 cv
148.603 193.932 148.539 193.672 148.539 193.375 cv
148.539 192.937 148.671 192.598 148.933 192.359 cv
149.19 192.122 149.536 192.004 149.97 192.004 cv
150.412 192.004 150.752 192.146 150.99 192.429 cv
151.227 192.712 151.36 193.095 151.386 193.577 cv
150.85 193.754 li
150.827 193.353 150.745 193.056 150.605 192.862 cv
150.466 192.668 150.263 192.571 150.001 192.571 cv
149.764 192.571 149.576 192.637 149.434 192.768 cv
149.296 192.897 149.227 193.069 149.227 193.285 cv
149.227 193.48 149.262 193.648 149.333 193.787 cv
149.404 193.927 149.534 194.079 149.722 194.241 cv
150.567 194.998 li
150.719 195.13 150.843 195.245 150.939 195.345 cv
151.035 195.445 151.137 195.568 151.245 195.714 cv
151.353 195.862 151.433 196.02 151.485 196.19 cv
151.538 196.361 151.565 196.543 151.569 196.739 cv
151.569 197.198 151.43 197.552 151.154 197.804 cv
150.878 198.055 150.504 198.18 150.031 198.18 cv
f
153.262 198.084 mo
152.505 198.084 li
152.505 192.095 li
153.262 192.095 li
153.262 198.084 li
153.268 191.271 mo
152.505 191.271 li
152.505 190.24 li
153.268 190.24 li
153.268 191.271 li
f
155.954 198.16 mo
155.546 198.16 155.264 198.048 155.109 197.824 cv
154.954 197.6 154.875 197.272 154.871 196.84 cv
154.871 192.601 li
154.148 192.601 li
154.148 192.095 li
154.871 192.095 li
154.871 190.244 li
155.63 190.244 li
155.63 192.095 li
156.627 192.095 li
156.627 192.601 li
155.63 192.601 li
155.63 196.769 li
155.63 197.073 155.666 197.281 155.736 197.394 cv
155.807 197.507 155.95 197.564 156.166 197.564 cv
156.304 197.564 156.446 197.55 156.592 197.523 cv
156.592 198.094 li
156.365 198.138 156.153 198.16 155.954 198.16 cv
f
160.582 198.18 mo
160.231 198.18 159.943 198.051 159.717 197.793 cv
159.491 197.535 159.379 197.216 159.379 196.835 cv
159.379 196.636 159.395 196.458 159.429 196.301 cv
159.463 196.145 159.526 195.997 159.619 195.859 cv
159.712 195.72 159.812 195.598 159.922 195.492 cv
160.032 195.386 160.187 195.273 160.389 195.153 cv
160.593 195.034 160.795 194.923 160.997 194.822 cv
161.199 194.721 161.464 194.598 161.791 194.453 cv
161.791 194.023 li
161.791 193.473 161.739 193.094 161.635 192.887 cv
161.53 192.68 161.334 192.576 161.048 192.576 cv
160.494 192.576 160.218 192.918 160.218 193.603 cv
160.218 193.821 li
159.47 193.795 li
159.47 193.698 159.47 193.636 159.474 193.613 cv
159.498 193.05 159.644 192.641 159.915 192.386 cv
160.184 192.132 160.575 192.004 161.088 192.004 cv
161.617 192.004 161.993 192.161 162.216 192.475 cv
162.438 192.788 162.55 193.291 162.55 193.982 cv
162.55 196.896 li
162.55 197.378 162.568 197.774 162.605 198.084 cv
161.932 198.084 li
161.821 197.255 li
161.73 197.518 161.576 197.738 161.358 197.914 cv
161.141 198.092 160.883 198.18 160.582 198.18 cv
161.791 194.953 mo
161.695 195.004 li
161.53 195.091 161.403 195.16 161.315 195.206 cv
161.227 195.253 161.123 195.313 161 195.383 cv
160.876 195.454 160.784 195.513 160.723 195.56 cv
160.513 195.733 li
160.342 195.922 li
160.233 196.127 li
160.157 196.372 li
160.143 196.458 160.136 196.553 160.136 196.658 cv
160.136 196.951 160.203 197.169 160.334 197.313 cv
160.466 197.456 160.631 197.528 160.83 197.528 cv
161.032 197.528 161.218 197.458 161.388 197.318 cv
161.559 197.178 161.693 197.012 161.791 196.82 cv
161.791 194.953 li
f
169.217 198.084 mo
168.498 198.084 li
168.498 193.38 li
168.498 193.053 168.447 192.826 168.346 192.698 cv
168.245 192.57 168.1 192.505 167.911 192.505 cv
167.53 192.512 167.154 192.719 166.783 193.127 cv
166.79 193.229 166.794 193.306 166.794 193.36 cv
166.794 198.084 li
166.086 198.084 li
166.086 193.38 li
166.086 193.053 166.033 192.826 165.928 192.698 cv
165.824 192.57 165.677 192.505 165.488 192.505 cv
165.107 192.512 164.735 192.719 164.371 193.127 cv
164.371 198.084 li
163.657 198.084 li
163.657 192.095 li
164.371 192.095 li
164.371 192.703 li
164.772 192.227 165.242 191.99 165.782 191.99 cv
166.281 191.99 166.594 192.252 166.722 192.779 cv
167.14 192.252 167.634 191.99 168.2 191.99 cv
168.497 191.99 168.74 192.096 168.93 192.311 cv
169.121 192.525 169.217 192.874 169.217 193.36 cv
169.217 198.084 li
f
171.837 198.18 mo
171.263 198.18 170.85 198.003 170.597 197.65 cv
170.344 197.295 170.219 196.69 170.219 195.833 cv
170.219 194.321 li
170.219 193.738 170.278 193.275 170.397 192.933 cv
170.517 192.59 170.693 192.35 170.924 192.212 cv
171.155 192.074 171.461 192.004 171.841 192.004 cv
172.094 192.004 172.31 192.037 172.489 192.103 cv
172.668 192.169 172.816 192.262 172.934 192.384 cv
173.052 192.505 173.146 192.669 173.215 192.877 cv
173.284 193.084 173.332 193.314 173.359 193.565 cv
173.386 193.816 173.399 194.118 173.399 194.473 cv
173.394 195.014 li
170.976 195.014 li
170.976 195.91 li
170.976 196.53 171.037 196.968 171.156 197.224 cv
171.276 197.481 171.501 197.609 171.832 197.609 cv
172.094 197.609 172.297 197.526 172.438 197.359 cv
172.58 197.192 172.651 196.889 172.651 196.451 cv
172.651 196.036 li
173.394 196.036 li
173.394 196.369 li
173.394 196.95 173.273 197.397 173.03 197.71 cv
172.788 198.024 172.389 198.18 171.837 198.18 cv
171.837 192.571 mo
171.516 192.571 171.293 192.682 171.167 192.905 cv
171.04 193.127 170.976 193.55 170.976 194.174 cv
170.976 194.579 li
172.651 194.579 li
172.651 194.083 li
172.651 193.874 172.646 193.701 172.635 193.562 cv
172.626 193.424 172.604 193.287 172.573 193.15 cv
172.541 193.014 172.496 192.907 172.438 192.829 cv
172.382 192.751 172.302 192.689 172.201 192.642 cv
172.099 192.594 171.978 192.571 171.837 192.571 cv
f
175.842 198.16 mo
175.434 198.16 175.153 198.048 174.998 197.824 cv
174.843 197.6 174.763 197.272 174.759 196.84 cv
174.759 192.601 li
174.037 192.601 li
174.037 192.095 li
174.759 192.095 li
174.759 190.244 li
175.518 190.244 li
175.518 192.095 li
176.515 192.095 li
176.515 192.601 li
175.518 192.601 li
175.518 196.769 li
175.518 197.073 175.554 197.281 175.625 197.394 cv
175.696 197.507 175.839 197.564 176.054 197.564 cv
176.193 197.564 176.335 197.55 176.48 197.523 cv
176.48 198.094 li
176.254 198.138 176.042 198.16 175.842 198.16 cv
f
177.411 199.293 mo
177.254 198.959 li
177.432 198.858 177.559 198.741 177.635 198.605 cv
177.712 198.47 177.75 198.297 177.75 198.084 cv
177.295 198.084 li
177.295 196.956 li
178.144 196.956 li
178.144 198.003 li
178.144 198.34 178.089 198.606 177.977 198.8 cv
177.866 198.993 177.676 199.159 177.411 199.293 cv
f
182.797 198.18 mo
182.524 198.18 182.29 198.14 182.093 198.059 cv
181.898 197.978 181.743 197.872 181.629 197.743 cv
181.514 197.613 181.424 197.442 181.358 197.23 cv
181.293 197.017 181.249 196.802 181.226 196.584 cv
181.205 196.367 181.194 196.11 181.194 195.813 cv
181.194 194.417 li
181.194 193.982 181.217 193.62 181.264 193.332 cv
181.311 193.044 181.395 192.797 181.514 192.591 cv
181.634 192.385 181.798 192.237 182.006 192.144 cv
182.213 192.051 182.475 192.004 182.792 192.004 cv
183.042 192.004 183.258 192.035 183.439 192.095 cv
183.622 192.157 183.769 192.24 183.882 192.346 cv
183.995 192.453 184.085 192.588 184.15 192.753 cv
184.216 192.918 184.262 193.093 184.287 193.277 cv
184.312 193.46 184.325 193.675 184.325 193.921 cv
184.325 194.204 li
183.622 194.204 li
183.622 193.921 li
183.622 193.409 183.561 193.056 183.439 192.862 cv
183.318 192.668 183.105 192.571 182.802 192.571 cv
182.458 192.571 182.23 192.693 182.119 192.938 cv
182.008 193.182 181.952 193.633 181.952 194.29 cv
181.952 195.97 li
181.952 196.583 182.012 197.01 182.132 197.249 cv
182.252 197.49 182.476 197.609 182.807 197.609 cv
182.949 197.609 183.068 197.588 183.167 197.548 cv
183.264 197.508 183.343 197.453 183.401 197.381 cv
183.461 197.311 183.507 197.212 183.541 197.088 cv
183.574 196.963 183.596 196.83 183.606 196.691 cv
183.617 196.551 183.622 196.374 183.622 196.162 cv
183.622 195.833 li
184.325 195.833 li
184.325 196.127 li
184.325 196.39 184.313 196.618 184.292 196.81 cv
184.269 197.002 184.226 197.188 184.16 197.369 cv
184.094 197.549 184.007 197.696 183.897 197.809 cv
183.788 197.921 183.64 198.012 183.455 198.08 cv
183.269 198.147 183.05 198.18 182.797 198.18 cv
f
186.818 198.18 mo
186.511 198.18 186.254 198.131 186.045 198.034 cv
185.836 197.936 185.671 197.788 185.551 197.588 cv
185.431 197.39 185.346 197.157 185.296 196.888 cv
185.245 196.62 185.22 196.297 185.22 195.919 cv
185.22 194.26 li
185.22 193.498 185.338 192.932 185.574 192.561 cv
185.81 192.19 186.224 192.004 186.818 192.004 cv
187.415 192.004 187.831 192.189 188.065 192.558 cv
188.3 192.927 188.417 193.495 188.417 194.26 cv
188.417 195.919 li
188.417 196.297 188.391 196.62 188.341 196.888 cv
188.291 197.157 188.205 197.39 188.086 197.588 cv
187.966 197.788 187.802 197.936 187.593 198.034 cv
187.384 198.131 187.125 198.18 186.818 198.18 cv
186.818 192.571 mo
186.69 192.571 186.579 192.588 186.484 192.621 cv
186.39 192.656 186.312 192.71 186.252 192.786 cv
186.105 193.029 li
186.068 193.115 186.04 193.227 186.021 193.365 cv
186.003 193.503 185.991 193.634 185.986 193.757 cv
185.981 193.88 185.978 194.035 185.978 194.22 cv
185.978 195.96 li
185.978 196.146 185.981 196.3 185.986 196.423 cv
185.991 196.546 186.003 196.676 186.021 196.815 cv
186.04 196.953 186.068 197.065 186.105 197.151 cv
186.252 197.394 li
186.312 197.47 186.39 197.525 186.484 197.558 cv
186.579 197.592 186.69 197.609 186.818 197.609 cv
186.97 197.609 187.098 197.581 187.203 197.526 cv
187.307 197.47 187.389 197.4 187.448 197.316 cv
187.507 197.231 187.551 197.112 187.582 196.956 cv
187.612 196.801 187.632 196.653 187.64 196.511 cv
187.649 196.369 187.653 196.186 187.653 195.96 cv
187.653 194.22 li
187.653 193.995 187.649 193.81 187.64 193.668 cv
187.632 193.527 187.612 193.378 187.582 193.223 cv
187.551 193.069 187.507 192.949 187.448 192.865 cv
187.389 192.78 187.307 192.71 187.203 192.655 cv
187.098 192.599 186.97 192.571 186.818 192.571 cv
f
192.579 198.084 mo
191.82 198.084 li
191.82 193.441 li
191.82 193.137 191.774 192.921 191.681 192.793 cv
191.589 192.665 191.444 192.601 191.249 192.601 cv
190.922 192.601 190.578 192.786 190.216 193.153 cv
190.216 198.084 li
189.458 198.084 li
189.458 192.095 li
190.216 192.095 li
190.216 192.718 li
190.659 192.243 191.139 192.004 191.659 192.004 cv
191.955 192.004 192.182 192.115 192.342 192.335 cv
192.5 192.557 192.579 192.871 192.579 193.279 cv
192.579 198.084 li
f
195.067 198.18 mo
194.591 198.18 194.212 198.027 193.927 197.72 cv
193.641 197.413 193.479 196.998 193.438 196.476 cv
194.076 196.284 li
194.116 196.739 194.22 197.074 194.389 197.287 cv
194.558 197.502 194.794 197.609 195.097 197.609 cv
195.361 197.609 195.568 197.532 195.72 197.376 cv
195.865 197.228 195.937 197.029 195.937 196.78 cv
195.937 196.744 li
195.928 196.346 195.684 195.949 195.209 195.55 cv
194.394 194.857 li
194.108 194.618 193.899 194.383 193.767 194.154 cv
193.639 193.932 193.575 193.672 193.575 193.375 cv
193.575 192.937 193.707 192.598 193.969 192.359 cv
194.226 192.122 194.572 192.004 195.007 192.004 cv
195.448 192.004 195.788 192.146 196.026 192.429 cv
196.263 192.712 196.396 193.095 196.423 193.577 cv
195.887 193.754 li
195.863 193.353 195.781 193.056 195.641 192.862 cv
195.502 192.668 195.3 192.571 195.037 192.571 cv
194.801 192.571 194.612 192.637 194.47 192.768 cv
194.332 192.897 194.263 193.069 194.263 193.285 cv
194.263 193.48 194.299 193.648 194.369 193.787 cv
194.44 193.927 194.57 194.079 194.758 194.241 cv
195.603 194.998 li
195.756 195.13 195.879 195.245 195.975 195.345 cv
196.071 195.445 196.174 195.568 196.281 195.714 cv
196.389 195.862 196.469 196.02 196.521 196.19 cv
196.574 196.361 196.601 196.543 196.605 196.739 cv
196.605 197.198 196.466 197.552 196.19 197.804 cv
195.914 198.055 195.54 198.18 195.067 198.18 cv
f
198.962 198.18 mo
198.388 198.18 197.975 198.003 197.722 197.65 cv
197.47 197.295 197.344 196.69 197.344 195.833 cv
197.344 194.321 li
197.344 193.738 197.403 193.275 197.522 192.933 cv
197.642 192.59 197.818 192.35 198.049 192.212 cv
198.28 192.074 198.586 192.004 198.967 192.004 cv
199.219 192.004 199.435 192.037 199.614 192.103 cv
199.793 192.169 199.941 192.262 200.059 192.384 cv
200.178 192.505 200.271 192.669 200.34 192.877 cv
200.409 193.084 200.457 193.314 200.484 193.565 cv
200.511 193.816 200.524 194.118 200.524 194.473 cv
200.519 195.014 li
198.101 195.014 li
198.101 195.91 li
198.101 196.53 198.162 196.968 198.281 197.224 cv
198.401 197.481 198.626 197.609 198.957 197.609 cv
199.219 197.609 199.422 197.526 199.563 197.359 cv
199.705 197.192 199.776 196.889 199.776 196.451 cv
199.776 196.036 li
200.519 196.036 li
200.519 196.369 li
200.519 196.95 200.398 197.397 200.155 197.71 cv
199.913 198.024 199.514 198.18 198.962 198.18 cv
198.962 192.571 mo
198.641 192.571 198.418 192.682 198.292 192.905 cv
198.165 193.127 198.101 193.55 198.101 194.174 cv
198.101 194.579 li
199.776 194.579 li
199.776 194.083 li
199.776 193.874 199.771 193.701 199.76 193.562 cv
199.751 193.424 199.729 193.287 199.698 193.15 cv
199.666 193.014 199.621 192.907 199.563 192.829 cv
199.507 192.751 199.427 192.689 199.326 192.642 cv
199.224 192.594 199.103 192.571 198.962 192.571 cv
f
203.038 198.18 mo
202.765 198.18 202.531 198.14 202.335 198.059 cv
202.139 197.978 201.984 197.872 201.87 197.743 cv
201.756 197.613 201.665 197.442 201.599 197.23 cv
201.534 197.017 201.49 196.802 201.467 196.584 cv
201.446 196.367 201.435 196.11 201.435 195.813 cv
201.435 194.417 li
201.435 193.982 201.459 193.62 201.506 193.332 cv
201.553 193.044 201.636 192.797 201.756 192.591 cv
201.876 192.385 202.039 192.237 202.247 192.144 cv
202.454 192.051 202.717 192.004 203.033 192.004 cv
203.283 192.004 203.499 192.035 203.68 192.095 cv
203.863 192.157 204.01 192.24 204.123 192.346 cv
204.236 192.453 204.326 192.588 204.391 192.753 cv
204.457 192.918 204.503 193.093 204.528 193.277 cv
204.553 193.46 204.566 193.675 204.566 193.921 cv
204.566 194.204 li
203.863 194.204 li
203.863 193.921 li
203.863 193.409 203.802 193.056 203.68 192.862 cv
203.559 192.668 203.346 192.571 203.044 192.571 cv
202.699 192.571 202.471 192.693 202.36 192.938 cv
202.249 193.182 202.193 193.633 202.193 194.29 cv
202.193 195.97 li
202.193 196.583 202.254 197.01 202.373 197.249 cv
202.493 197.49 202.717 197.609 203.049 197.609 cv
203.19 197.609 203.309 197.588 203.408 197.548 cv
203.506 197.508 203.584 197.453 203.642 197.381 cv
203.702 197.311 203.748 197.212 203.782 197.088 cv
203.815 196.963 203.838 196.83 203.847 196.691 cv
203.858 196.551 203.863 196.374 203.863 196.162 cv
203.863 195.833 li
204.566 195.833 li
204.566 196.127 li
204.566 196.39 204.554 196.618 204.533 196.81 cv
204.51 197.002 204.468 197.188 204.401 197.369 cv
204.336 197.549 204.248 197.696 204.138 197.809 cv
204.029 197.921 203.882 198.012 203.696 198.08 cv
203.51 198.147 203.291 198.18 203.038 198.18 cv
f
206.994 198.16 mo
206.586 198.16 206.305 198.048 206.149 197.824 cv
205.994 197.6 205.915 197.272 205.911 196.84 cv
205.911 192.601 li
205.188 192.601 li
205.188 192.095 li
205.911 192.095 li
205.911 190.244 li
206.67 190.244 li
206.67 192.095 li
207.667 192.095 li
207.667 192.601 li
206.67 192.601 li
206.67 196.769 li
206.67 197.073 206.706 197.281 206.776 197.394 cv
206.847 197.507 206.99 197.564 207.206 197.564 cv
207.345 197.564 207.486 197.55 207.632 197.523 cv
207.632 198.094 li
207.405 198.138 207.193 198.16 206.994 198.16 cv
f
209.978 198.18 mo
209.405 198.18 208.992 198.003 208.739 197.65 cv
208.486 197.295 208.36 196.69 208.36 195.833 cv
208.36 194.321 li
208.36 193.738 208.42 193.275 208.539 192.933 cv
208.659 192.59 208.835 192.35 209.065 192.212 cv
209.297 192.074 209.602 192.004 209.983 192.004 cv
210.236 192.004 210.452 192.037 210.631 192.103 cv
210.809 192.169 210.958 192.262 211.076 192.384 cv
211.194 192.505 211.288 192.669 211.356 192.877 cv
211.426 193.084 211.473 193.314 211.501 193.565 cv
211.528 193.816 211.541 194.118 211.541 194.473 cv
211.536 195.014 li
209.118 195.014 li
209.118 195.91 li
209.118 196.53 209.178 196.968 209.298 197.224 cv
209.418 197.481 209.642 197.609 209.973 197.609 cv
210.236 197.609 210.438 197.526 210.58 197.359 cv
210.721 197.192 210.793 196.889 210.793 196.451 cv
210.793 196.036 li
211.536 196.036 li
211.536 196.369 li
211.536 196.95 211.415 197.397 211.172 197.71 cv
210.929 198.024 210.531 198.18 209.978 198.18 cv
209.978 192.571 mo
209.658 192.571 209.434 192.682 209.308 192.905 cv
209.181 193.127 209.118 193.55 209.118 194.174 cv
209.118 194.579 li
210.793 194.579 li
210.793 194.083 li
210.793 193.874 210.788 193.701 210.777 193.562 cv
210.767 193.424 210.746 193.287 210.715 193.15 cv
210.682 193.014 210.637 192.907 210.58 192.829 cv
210.523 192.751 210.443 192.689 210.343 192.642 cv
210.241 192.594 210.12 192.571 209.978 192.571 cv
f
213.984 198.16 mo
213.576 198.16 213.295 198.048 213.139 197.824 cv
212.984 197.6 212.905 197.272 212.901 196.84 cv
212.901 192.601 li
212.179 192.601 li
212.179 192.095 li
212.901 192.095 li
212.901 190.244 li
213.66 190.244 li
213.66 192.095 li
214.657 192.095 li
214.657 192.601 li
213.66 192.601 li
213.66 196.769 li
213.66 197.073 213.696 197.281 213.766 197.394 cv
213.838 197.507 213.98 197.564 214.196 197.564 cv
214.335 197.564 214.476 197.55 214.622 197.523 cv
214.622 198.094 li
214.395 198.138 214.183 198.16 213.984 198.16 cv
f
216.342 198.175 mo
216.041 198.175 215.812 198.064 215.653 197.841 cv
215.495 197.619 215.416 197.304 215.416 196.896 cv
215.416 192.095 li
216.179 192.095 li
216.179 196.739 li
216.179 197.042 216.225 197.258 216.316 197.386 cv
216.407 197.514 216.55 197.578 216.746 197.578 cv
217.087 197.578 217.44 197.383 217.808 196.992 cv
217.808 192.095 li
218.567 192.095 li
218.567 198.084 li
217.808 198.084 li
217.808 197.421 li
217.363 197.924 216.874 198.175 216.342 198.175 cv
f
220.545 198.084 mo
219.786 198.084 li
219.786 192.095 li
220.545 192.095 li
220.545 192.92 li
220.726 192.617 220.939 192.392 221.184 192.247 cv
221.429 192.102 221.676 192.03 221.926 192.03 cv
222.056 192.035 li
222.056 192.854 li
221.949 192.811 221.827 192.788 221.692 192.788 cv
221.207 192.788 220.824 193.021 220.545 193.487 cv
220.545 198.084 li
f
225.962 198.18 mo
225.611 198.18 225.323 198.051 225.097 197.793 cv
224.871 197.535 224.759 197.216 224.759 196.835 cv
224.759 196.636 224.775 196.458 224.808 196.301 cv
224.842 196.145 224.906 195.997 224.999 195.859 cv
225.092 195.72 225.192 195.598 225.302 195.492 cv
225.412 195.386 225.567 195.273 225.769 195.153 cv
225.972 195.034 226.174 194.923 226.377 194.822 cv
226.579 194.721 226.844 194.598 227.171 194.453 cv
227.171 194.023 li
227.171 193.473 227.119 193.094 227.014 192.887 cv
226.91 192.68 226.714 192.576 226.427 192.576 cv
225.874 192.576 225.597 192.918 225.597 193.603 cv
225.597 193.821 li
224.849 193.795 li
224.849 193.698 224.85 193.636 224.854 193.613 cv
224.878 193.05 225.024 192.641 225.295 192.386 cv
225.564 192.132 225.955 192.004 226.468 192.004 cv
226.997 192.004 227.373 192.161 227.595 192.475 cv
227.818 192.788 227.929 193.291 227.929 193.982 cv
227.929 196.896 li
227.929 197.378 227.948 197.774 227.985 198.084 cv
227.312 198.084 li
227.201 197.255 li
227.11 197.518 226.956 197.738 226.738 197.914 cv
226.521 198.092 226.263 198.18 225.962 198.18 cv
227.171 194.953 mo
227.075 195.004 li
226.91 195.091 226.783 195.16 226.695 195.206 cv
226.607 195.253 226.503 195.313 226.38 195.383 cv
226.256 195.454 226.164 195.513 226.103 195.56 cv
225.893 195.733 li
225.721 195.922 li
225.613 196.127 li
225.537 196.372 li
225.523 196.458 225.516 196.553 225.516 196.658 cv
225.516 196.951 225.583 197.169 225.714 197.313 cv
225.845 197.456 226.01 197.528 226.21 197.528 cv
226.412 197.528 226.598 197.458 226.768 197.318 cv
226.939 197.178 227.073 197.012 227.171 196.82 cv
227.171 194.953 li
f
230.373 198.18 mo
229.857 198.18 229.487 197.987 229.262 197.599 cv
229.038 197.211 228.927 196.567 228.927 195.666 cv
228.927 194.559 li
228.927 194.228 228.938 193.939 228.962 193.689 cv
228.985 193.439 229.029 193.205 229.092 192.986 cv
229.157 192.767 229.241 192.588 229.345 192.45 cv
229.45 192.311 229.586 192.202 229.751 192.123 cv
229.916 192.044 230.111 192.004 230.338 192.004 cv
230.732 192.008 231.084 192.181 231.394 192.526 cv
231.394 189.698 li
232.153 189.698 li
232.153 198.084 li
231.394 198.084 li
231.394 197.66 li
231.09 198.003 230.751 198.177 230.373 198.18 cv
230.505 192.601 mo
230.183 192.601 229.968 192.736 229.854 193.003 cv
229.741 193.272 229.684 193.709 229.684 194.316 cv
229.684 195.727 li
229.684 196.381 229.742 196.854 229.857 197.144 cv
229.971 197.434 230.194 197.578 230.524 197.578 cv
230.818 197.578 231.108 197.447 231.394 197.184 cv
231.394 193.026 li
231.09 192.742 230.794 192.601 230.505 192.601 cv
f
234.156 198.084 mo
233.398 198.084 li
233.398 192.095 li
234.156 192.095 li
234.156 198.084 li
234.162 191.271 mo
233.398 191.271 li
233.398 190.24 li
234.162 190.24 li
234.162 191.271 li
f
236.19 200.057 mo
235.431 200.057 li
235.431 192.095 li
236.19 192.095 li
236.19 192.596 li
236.51 192.202 236.893 192.004 237.338 192.004 cv
237.56 192.004 237.756 192.05 237.923 192.141 cv
238.089 192.232 238.221 192.35 238.317 192.496 cv
238.413 192.64 238.49 192.821 238.55 193.036 cv
238.608 193.252 238.647 193.465 238.666 193.676 cv
238.684 193.887 238.693 194.125 238.693 194.392 cv
238.693 195.657 li
238.693 195.973 238.68 196.256 238.653 196.506 cv
238.626 196.756 238.579 196.988 238.511 197.202 cv
238.444 197.415 238.355 197.593 238.246 197.733 cv
238.136 197.872 237.999 197.983 237.834 198.062 cv
237.669 198.141 237.476 198.18 237.257 198.18 cv
236.869 198.18 236.513 197.99 236.19 197.609 cv
236.19 200.057 li
237.121 192.601 mo
236.813 192.601 236.504 192.755 236.19 193.062 cv
236.19 197.144 li
236.467 197.434 236.782 197.578 237.135 197.578 cv
237.27 197.578 237.386 197.551 237.479 197.496 cv
237.574 197.44 237.651 197.364 237.71 197.268 cv
237.768 197.171 237.815 197.04 237.848 196.875 cv
237.883 196.71 237.905 196.534 237.917 196.347 cv
237.929 196.16 237.935 195.933 237.935 195.666 cv
237.935 194.392 li
237.935 193.751 237.881 193.292 237.773 193.016 cv
237.665 192.74 237.448 192.601 237.121 192.601 cv
f
240.595 198.084 mo
239.838 198.084 li
239.838 192.095 li
240.595 192.095 li
240.595 198.084 li
240.601 191.271 mo
239.838 191.271 li
239.838 190.24 li
240.601 190.24 li
240.601 191.271 li
f
243.236 198.18 mo
242.76 198.18 242.381 198.027 242.095 197.72 cv
241.81 197.413 241.648 196.998 241.607 196.476 cv
242.245 196.284 li
242.285 196.739 242.389 197.074 242.558 197.287 cv
242.727 197.502 242.963 197.609 243.266 197.609 cv
243.53 197.609 243.737 197.532 243.888 197.376 cv
244.034 197.228 244.106 197.029 244.106 196.78 cv
244.106 196.744 li
244.096 196.346 243.853 195.949 243.378 195.55 cv
242.563 194.857 li
242.277 194.618 242.068 194.383 241.936 194.154 cv
241.808 193.932 241.744 193.672 241.744 193.375 cv
241.744 192.937 241.876 192.598 242.138 192.359 cv
242.395 192.122 242.741 192.004 243.176 192.004 cv
243.617 192.004 243.957 192.146 244.195 192.429 cv
244.432 192.712 244.565 193.095 244.592 193.577 cv
244.055 193.754 li
244.032 193.353 243.95 193.056 243.81 192.862 cv
243.671 192.668 243.468 192.571 243.206 192.571 cv
242.97 192.571 242.781 192.637 242.639 192.768 cv
242.501 192.897 242.432 193.069 242.432 193.285 cv
242.432 193.48 242.468 193.648 242.538 193.787 cv
242.609 193.927 242.739 194.079 242.927 194.241 cv
243.772 194.998 li
243.924 195.13 244.048 195.245 244.144 195.345 cv
244.24 195.445 244.343 195.568 244.45 195.714 cv
244.558 195.862 244.638 196.02 244.69 196.19 cv
244.743 196.361 244.77 196.543 244.774 196.739 cv
244.774 197.198 244.635 197.552 244.359 197.804 cv
244.083 198.055 243.709 198.18 243.236 198.18 cv
f
247.115 198.18 mo
246.843 198.18 246.608 198.14 246.412 198.059 cv
246.217 197.978 246.061 197.872 245.947 197.743 cv
245.833 197.613 245.742 197.442 245.676 197.23 cv
245.611 197.017 245.567 196.802 245.545 196.584 cv
245.523 196.367 245.512 196.11 245.512 195.813 cv
245.512 194.417 li
245.512 193.982 245.536 193.62 245.583 193.332 cv
245.63 193.044 245.714 192.797 245.833 192.591 cv
245.953 192.385 246.116 192.237 246.324 192.144 cv
246.531 192.051 246.794 192.004 247.11 192.004 cv
247.36 192.004 247.576 192.035 247.758 192.095 cv
247.94 192.157 248.088 192.24 248.2 192.346 cv
248.313 192.453 248.403 192.588 248.468 192.753 cv
248.534 192.918 248.58 193.093 248.605 193.277 cv
248.631 193.46 248.643 193.675 248.643 193.921 cv
248.643 194.204 li
247.94 194.204 li
247.94 193.921 li
247.94 193.409 247.88 193.056 247.758 192.862 cv
247.636 192.668 247.424 192.571 247.121 192.571 cv
246.776 192.571 246.549 192.693 246.437 192.938 cv
246.326 193.182 246.27 193.633 246.27 194.29 cv
246.27 195.97 li
246.27 196.583 246.331 197.01 246.45 197.249 cv
246.57 197.49 246.795 197.609 247.126 197.609 cv
247.267 197.609 247.386 197.588 247.485 197.548 cv
247.583 197.508 247.661 197.453 247.72 197.381 cv
247.779 197.311 247.825 197.212 247.859 197.088 cv
247.892 196.963 247.915 196.83 247.925 196.691 cv
247.935 196.551 247.94 196.374 247.94 196.162 cv
247.94 195.833 li
248.643 195.833 li
248.643 196.127 li
248.643 196.39 248.632 196.618 248.61 196.81 cv
248.588 197.002 248.545 197.188 248.478 197.369 cv
248.413 197.549 248.325 197.696 248.216 197.809 cv
248.106 197.921 247.959 198.012 247.773 198.08 cv
247.588 198.147 247.368 198.18 247.115 198.18 cv
f
250.494 198.084 mo
249.736 198.084 li
249.736 192.095 li
250.494 192.095 li
250.494 198.084 li
250.5 191.271 mo
249.736 191.271 li
249.736 190.24 li
250.5 190.24 li
250.5 191.271 li
f
254.885 198.084 mo
254.126 198.084 li
254.126 193.441 li
254.126 193.137 254.08 192.921 253.987 192.793 cv
253.894 192.665 253.75 192.601 253.555 192.601 cv
253.227 192.601 252.884 192.786 252.522 193.153 cv
252.522 198.084 li
251.763 198.084 li
251.763 192.095 li
252.522 192.095 li
252.522 192.718 li
252.965 192.243 253.445 192.004 253.965 192.004 cv
254.26 192.004 254.488 192.115 254.647 192.335 cv
254.805 192.557 254.885 192.871 254.885 193.279 cv
254.885 198.084 li
f
257.646 200.052 mo
257.329 200.052 257.05 200.035 256.809 200.001 cv
256.568 199.967 256.354 199.912 256.169 199.834 cv
255.983 199.757 255.842 199.652 255.744 199.518 cv
255.646 199.385 255.597 199.226 255.597 199.04 cv
255.597 198.75 255.694 198.485 255.886 198.244 cv
256.078 198.002 256.312 197.81 256.589 197.664 cv
256.407 197.614 256.25 197.54 256.119 197.445 cv
255.987 197.348 255.922 197.245 255.922 197.133 cv
255.922 196.817 256.159 196.413 256.635 195.924 cv
256.135 195.56 255.886 194.95 255.886 194.093 cv
255.886 193.803 255.92 193.535 255.987 193.287 cv
256.055 193.038 256.155 192.818 256.288 192.624 cv
256.421 192.43 256.595 192.279 256.811 192.169 cv
257.027 192.059 257.275 192.004 257.555 192.004 cv
258.159 192.004 258.589 192.252 258.845 192.748 cv
258.909 192.637 259.016 192.516 259.169 192.386 cv
259.32 192.256 259.482 192.155 259.654 192.08 cv
259.811 192.015 li
260.013 192.545 li
259.848 192.586 259.664 192.659 259.46 192.763 cv
259.256 192.868 259.111 192.969 259.027 193.067 cv
259.078 193.188 259.122 193.357 259.161 193.573 cv
259.2 193.788 259.219 193.969 259.219 194.114 cv
259.219 194.758 259.087 195.268 258.822 195.644 cv
258.557 196.02 258.138 196.207 257.565 196.207 cv
257.474 196.207 257.363 196.197 257.231 196.175 cv
257.099 196.153 257.009 196.132 256.958 196.112 cv
256.948 196.128 256.91 196.186 256.844 196.284 cv
256.779 196.381 256.729 196.456 256.698 196.509 cv
256.599 196.7 li
256.549 196.891 li
256.549 196.989 256.716 197.065 257.05 197.118 cv
257.12 197.138 257.289 197.168 257.555 197.206 cv
257.821 197.245 257.973 197.27 258.01 197.28 cv
258.503 197.368 258.875 197.521 259.128 197.741 cv
259.381 197.959 259.508 198.266 259.508 198.66 cv
259.508 199.136 259.34 199.487 259.007 199.713 cv
258.673 199.939 258.22 200.052 257.646 200.052 cv
257.009 197.766 mo
256.503 198.08 256.25 198.421 256.25 198.792 cv
256.25 199.022 256.358 199.188 256.574 199.29 cv
256.79 199.394 257.143 199.445 257.636 199.445 cv
258.027 199.445 258.337 199.382 258.564 199.255 cv
258.792 199.129 258.906 198.938 258.906 198.681 cv
258.906 198.462 258.828 198.291 258.673 198.17 cv
258.517 198.049 258.22 197.948 257.777 197.867 cv
257.009 197.766 li
257.57 192.545 mo
257.412 192.545 257.271 192.578 257.148 192.644 cv
257.025 192.71 256.927 192.793 256.854 192.895 cv
256.782 192.995 256.723 193.118 256.678 193.259 cv
256.632 193.401 256.601 193.538 256.587 193.671 cv
256.571 193.804 256.563 193.945 256.563 194.093 cv
256.563 195.139 256.897 195.662 257.565 195.662 cv
257.734 195.662 257.881 195.629 258.006 195.566 cv
258.13 195.501 258.226 195.42 258.294 195.323 cv
258.361 195.225 258.415 195.103 258.456 194.955 cv
258.496 194.809 258.522 194.671 258.534 194.541 cv
258.546 194.412 258.551 194.262 258.551 194.093 cv
258.551 193.062 258.224 192.545 257.57 192.545 cv
f
83.0476 210.611 mo
82.4744 210.611 82.0613 210.434 81.8084 210.08 cv
81.5555 209.726 81.4294 209.121 81.4294 208.264 cv
81.4294 206.751 li
81.4294 206.168 81.4891 205.705 81.6082 205.364 cv
81.7283 205.021 81.9041 204.781 82.1345 204.643 cv
82.366 204.504 82.6716 204.435 83.0525 204.435 cv
83.3055 204.435 83.5212 204.468 83.6999 204.534 cv
83.8787 204.6 84.0271 204.693 84.1453 204.815 cv
84.2635 204.936 84.3572 205.1 84.4255 205.308 cv
84.4949 205.515 84.5427 205.745 84.57 205.996 cv
84.5974 206.246 84.6101 206.549 84.6101 206.904 cv
84.6052 207.445 li
82.1872 207.445 li
82.1872 208.34 li
82.1872 208.96 82.2477 209.399 82.367 209.655 cv
82.487 209.911 82.7117 210.039 83.0428 210.039 cv
83.3055 210.039 83.5075 209.956 83.6491 209.789 cv
83.7908 209.622 83.8621 209.32 83.8621 208.881 cv
83.8621 208.466 li
84.6052 208.466 li
84.6052 208.8 li
84.6052 209.38 84.4841 209.828 84.2409 210.141 cv
83.9988 210.454 83.6003 210.611 83.0476 210.611 cv
83.0476 205.001 mo
82.7273 205.001 82.5037 205.113 82.3777 205.335 cv
82.2507 205.558 82.1872 205.981 82.1872 206.605 cv
82.1872 207.01 li
83.8621 207.01 li
83.8621 206.514 li
83.8621 206.305 83.8572 206.131 83.8464 205.993 cv
83.8366 205.855 83.8151 205.717 83.7839 205.58 cv
83.7517 205.445 83.7068 205.337 83.6491 205.259 cv
83.5925 205.182 83.5125 205.12 83.4118 205.073 cv
83.3103 205.025 83.1892 205.001 83.0476 205.001 cv
f
86.5017 210.515 mo
85.738 210.515 li
85.738 202.128 li
86.5017 202.128 li
86.5017 210.515 li
f
88.5701 210.515 mo
87.8122 210.515 li
87.8122 204.526 li
88.5701 204.526 li
88.5701 210.515 li
88.576 203.701 mo
87.8122 203.701 li
87.8122 202.67 li
88.576 202.67 li
88.576 203.701 li
f
91.2615 210.591 mo
90.8532 210.591 90.572 210.479 90.4167 210.254 cv
90.2614 210.031 90.1824 209.703 90.1785 209.271 cv
90.1785 205.032 li
89.4559 205.032 li
89.4559 204.526 li
90.1785 204.526 li
90.1785 202.675 li
90.9373 202.675 li
90.9373 204.526 li
91.9344 204.526 li
91.9344 205.032 li
90.9373 205.032 li
90.9373 209.2 li
90.9373 209.503 90.9734 209.711 91.0437 209.825 cv
91.115 209.938 91.2576 209.995 91.4734 209.995 cv
91.612 209.995 91.7537 209.981 91.8992 209.954 cv
91.8992 210.525 li
91.6726 210.569 91.4606 210.591 91.2615 210.591 cv
f
92.8299 211.724 mo
92.6726 211.39 li
92.8514 211.288 92.9783 211.171 93.0544 211.035 cv
93.1306 210.901 93.1687 210.728 93.1687 210.515 cv
92.7136 210.515 li
92.7136 209.387 li
93.5632 209.387 li
93.5632 210.434 li
93.5632 210.771 93.5076 211.037 93.3963 211.231 cv
93.2849 211.424 93.0954 211.589 92.8299 211.724 cv
f
98.0945 210.611 mo
97.6188 210.611 97.239 210.457 96.9539 210.151 cv
96.6686 209.844 96.5066 209.429 96.4656 208.907 cv
97.1033 208.714 li
97.1433 209.169 97.2478 209.504 97.4168 209.718 cv
97.5856 209.933 97.821 210.039 98.1247 210.039 cv
98.3885 210.039 98.5955 209.962 98.7469 209.807 cv
98.8924 209.659 98.9647 209.459 98.9647 209.21 cv
98.9647 209.174 li
98.9549 208.777 98.7117 208.379 98.236 207.981 cv
97.4216 207.287 li
97.1355 207.048 96.9265 206.814 96.7947 206.584 cv
96.6667 206.363 96.6022 206.103 96.6022 205.806 cv
96.6022 205.368 96.7341 205.029 96.9968 204.789 cv
97.2537 204.553 97.5993 204.435 98.034 204.435 cv
98.4753 204.435 98.8152 204.577 99.0534 204.86 cv
99.2907 205.143 99.4235 205.526 99.45 206.008 cv
98.9139 206.185 li
98.8904 205.784 98.8083 205.487 98.6687 205.292 cv
98.5291 205.099 98.3269 205.001 98.0642 205.001 cv
97.8279 205.001 97.6394 205.068 97.4978 205.199 cv
97.3591 205.327 97.2908 205.499 97.2908 205.715 cv
97.2908 205.911 97.3259 206.078 97.3962 206.218 cv
97.4676 206.358 97.5974 206.509 97.7859 206.671 cv
98.6306 207.429 li
98.7829 207.561 98.9061 207.676 99.0027 207.776 cv
99.0983 207.875 99.2009 207.998 99.3083 208.145 cv
99.4168 208.292 99.4968 208.451 99.5486 208.62 cv
99.6014 208.791 99.6287 208.974 99.6326 209.169 cv
99.6326 209.628 99.4938 209.983 99.2176 210.235 cv
98.9412 210.486 98.5671 210.611 98.0945 210.611 cv
f
101.989 210.611 mo
101.416 210.611 101.003 210.434 100.75 210.08 cv
100.497 209.726 100.371 209.121 100.371 208.264 cv
100.371 206.751 li
100.371 206.168 100.43 205.705 100.55 205.364 cv
100.67 205.021 100.846 204.781 101.076 204.643 cv
101.307 204.504 101.613 204.435 101.994 204.435 cv
102.247 204.435 102.463 204.468 102.641 204.534 cv
102.82 204.6 102.968 204.693 103.087 204.815 cv
103.205 204.936 103.299 205.1 103.367 205.308 cv
103.436 205.515 103.484 205.745 103.511 205.996 cv
103.539 206.246 103.552 206.549 103.552 206.904 cv
103.547 207.445 li
101.129 207.445 li
101.129 208.34 li
101.129 208.96 101.189 209.399 101.308 209.655 cv
101.428 209.911 101.653 210.039 101.984 210.039 cv
102.247 210.039 102.449 209.956 102.591 209.789 cv
102.732 209.622 102.803 209.32 102.803 208.881 cv
102.803 208.466 li
103.547 208.466 li
103.547 208.8 li
103.547 209.38 103.426 209.828 103.182 210.141 cv
102.94 210.454 102.542 210.611 101.989 210.611 cv
101.989 205.001 mo
101.669 205.001 101.445 205.113 101.319 205.335 cv
101.192 205.558 101.129 205.981 101.129 206.605 cv
101.129 207.01 li
102.803 207.01 li
102.803 206.514 li
102.803 206.305 102.799 206.131 102.788 205.993 cv
102.778 205.855 102.757 205.717 102.725 205.58 cv
102.693 205.445 102.648 205.337 102.591 205.259 cv
102.534 205.182 102.454 205.12 102.353 205.073 cv
102.252 205.025 102.131 205.001 101.989 205.001 cv
f
105.909 210.611 mo
105.393 210.611 105.023 210.417 104.799 210.03 cv
104.574 209.642 104.463 208.997 104.463 208.097 cv
104.463 206.99 li
104.463 206.659 104.474 206.37 104.498 206.119 cv
104.521 205.87 104.565 205.636 104.629 205.416 cv
104.693 205.198 104.777 205.019 104.882 204.88 cv
104.986 204.742 105.122 204.633 105.287 204.554 cv
105.452 204.475 105.647 204.435 105.874 204.435 cv
106.268 204.439 106.62 204.612 106.93 204.956 cv
106.93 202.128 li
107.689 202.128 li
107.689 210.515 li
106.93 210.515 li
106.93 210.09 li
106.627 210.434 106.287 210.608 105.909 210.611 cv
106.041 205.032 mo
105.719 205.032 105.504 205.166 105.39 205.434 cv
105.277 205.702 105.22 206.14 105.22 206.746 cv
105.22 208.158 li
105.22 208.812 105.278 209.285 105.393 209.575 cv
105.508 209.865 105.73 210.009 106.06 210.009 cv
106.354 210.009 106.644 209.877 106.93 209.615 cv
106.93 205.456 li
106.627 205.173 106.33 205.032 106.041 205.032 cv
f
112.298 210.611 mo
111.782 210.611 111.412 210.417 111.187 210.03 cv
110.963 209.642 110.851 208.997 110.851 208.097 cv
110.851 206.99 li
110.851 206.659 110.863 206.37 110.886 206.119 cv
110.91 205.87 110.954 205.636 111.017 205.416 cv
111.082 205.198 111.166 205.019 111.27 204.88 cv
111.375 204.742 111.511 204.633 111.675 204.554 cv
111.841 204.475 112.036 204.435 112.262 204.435 cv
112.657 204.439 113.009 204.612 113.319 204.956 cv
113.319 202.128 li
114.078 202.128 li
114.078 210.515 li
113.319 210.515 li
113.319 210.09 li
113.015 210.434 112.676 210.608 112.298 210.611 cv
112.43 205.032 mo
112.108 205.032 111.892 205.166 111.779 205.434 cv
111.666 205.702 111.609 206.14 111.609 206.746 cv
111.609 208.158 li
111.609 208.812 111.667 209.285 111.782 209.575 cv
111.896 209.865 112.119 210.009 112.449 210.009 cv
112.743 210.009 113.033 209.877 113.319 209.615 cv
113.319 205.456 li
113.015 205.173 112.718 205.032 112.43 205.032 cv
f
116.723 210.611 mo
116.417 210.611 116.159 210.562 115.95 210.464 cv
115.741 210.367 115.576 210.218 115.457 210.019 cv
115.337 209.821 115.252 209.587 115.201 209.319 cv
115.15 209.051 115.126 208.728 115.126 208.35 cv
115.126 206.691 li
115.126 205.929 115.243 205.363 115.479 204.992 cv
115.716 204.62 116.13 204.435 116.723 204.435 cv
117.32 204.435 117.736 204.62 117.971 204.989 cv
118.205 205.358 118.322 205.925 118.322 206.691 cv
118.322 208.35 li
118.322 208.728 118.297 209.051 118.246 209.319 cv
118.196 209.587 118.11 209.821 117.991 210.019 cv
117.871 210.218 117.707 210.367 117.498 210.464 cv
117.289 210.562 117.03 210.611 116.723 210.611 cv
116.723 205.001 mo
116.595 205.001 116.484 205.019 116.389 205.052 cv
116.296 205.086 116.217 205.141 116.157 205.216 cv
116.011 205.459 li
115.973 205.545 115.945 205.658 115.927 205.795 cv
115.908 205.934 115.896 206.065 115.891 206.188 cv
115.886 206.311 115.884 206.465 115.884 206.651 cv
115.884 208.391 li
115.884 208.576 115.886 208.731 115.891 208.854 cv
115.896 208.977 115.908 209.107 115.927 209.245 cv
115.945 209.384 115.973 209.495 116.011 209.581 cv
116.157 209.825 li
116.217 209.901 116.296 209.956 116.389 209.989 cv
116.484 210.023 116.595 210.039 116.723 210.039 cv
116.876 210.039 117.004 210.012 117.108 209.956 cv
117.213 209.901 117.295 209.83 117.353 209.746 cv
117.412 209.662 117.457 209.542 117.487 209.387 cv
117.517 209.232 117.537 209.083 117.546 208.942 cv
117.554 208.8 117.558 208.617 117.558 208.391 cv
117.558 206.651 li
117.558 206.425 117.554 206.241 117.546 206.099 cv
117.537 205.957 117.517 205.809 117.487 205.654 cv
117.457 205.499 117.412 205.379 117.353 205.295 cv
117.295 205.21 117.213 205.141 117.108 205.085 cv
117.004 205.03 116.876 205.001 116.723 205.001 cv
f
122.986 210.611 mo
122.413 210.611 122 210.434 121.747 210.08 cv
121.494 209.726 121.368 209.121 121.368 208.264 cv
121.368 206.751 li
121.368 206.168 121.427 205.705 121.547 205.364 cv
121.667 205.021 121.842 204.781 122.073 204.643 cv
122.304 204.504 122.61 204.435 122.991 204.435 cv
123.244 204.435 123.46 204.468 123.638 204.534 cv
123.817 204.6 123.966 204.693 124.084 204.815 cv
124.202 204.936 124.296 205.1 124.364 205.308 cv
124.433 205.515 124.481 205.745 124.509 205.996 cv
124.536 206.246 124.549 206.549 124.549 206.904 cv
124.544 207.445 li
122.126 207.445 li
122.126 208.34 li
122.126 208.96 122.186 209.399 122.305 209.655 cv
122.426 209.911 122.65 210.039 122.981 210.039 cv
123.244 210.039 123.446 209.956 123.588 209.789 cv
123.729 209.622 123.801 209.32 123.801 208.881 cv
123.801 208.466 li
124.544 208.466 li
124.544 208.8 li
124.544 209.38 124.423 209.828 124.179 210.141 cv
123.937 210.454 123.539 210.611 122.986 210.611 cv
122.986 205.001 mo
122.666 205.001 122.442 205.113 122.316 205.335 cv
122.189 205.558 122.126 205.981 122.126 206.605 cv
122.126 207.01 li
123.801 207.01 li
123.801 206.514 li
123.801 206.305 123.796 206.131 123.785 205.993 cv
123.775 205.855 123.754 205.717 123.722 205.58 cv
123.69 205.445 123.645 205.337 123.588 205.259 cv
123.531 205.182 123.451 205.12 123.35 205.073 cv
123.249 205.025 123.128 205.001 122.986 205.001 cv
f
126.415 210.515 mo
125.657 210.515 li
125.657 204.526 li
126.415 204.526 li
126.415 210.515 li
126.421 203.701 mo
125.657 203.701 li
125.657 202.67 li
126.421 202.67 li
126.421 203.701 li
f
128.565 210.606 mo
128.264 210.606 128.036 210.494 127.877 210.272 cv
127.718 210.049 127.639 209.735 127.639 209.327 cv
127.639 204.526 li
128.403 204.526 li
128.403 209.169 li
128.403 209.473 128.449 209.689 128.54 209.817 cv
128.631 209.945 128.774 210.009 128.969 210.009 cv
129.31 210.009 129.664 209.814 130.032 209.422 cv
130.032 204.526 li
130.791 204.526 li
130.791 210.515 li
130.032 210.515 li
130.032 209.852 li
129.587 210.355 129.097 210.606 128.565 210.606 cv
f
133.319 210.611 mo
132.844 210.611 132.464 210.457 132.178 210.151 cv
131.893 209.844 131.731 209.429 131.69 208.907 cv
132.328 208.714 li
132.368 209.169 132.472 209.504 132.641 209.718 cv
132.81 209.933 133.046 210.039 133.349 210.039 cv
133.613 210.039 133.82 209.962 133.971 209.807 cv
134.117 209.659 134.189 209.459 134.189 209.21 cv
134.189 209.174 li
134.179 208.777 133.936 208.379 133.461 207.981 cv
132.646 207.287 li
132.36 207.048 132.151 206.814 132.019 206.584 cv
131.891 206.363 131.827 206.103 131.827 205.806 cv
131.827 205.368 131.959 205.029 132.221 204.789 cv
132.478 204.553 132.824 204.435 133.259 204.435 cv
133.7 204.435 134.04 204.577 134.278 204.86 cv
134.515 205.143 134.648 205.526 134.674 206.008 cv
134.138 206.185 li
134.115 205.784 134.033 205.487 133.893 205.292 cv
133.754 205.099 133.551 205.001 133.289 205.001 cv
133.052 205.001 132.864 205.068 132.722 205.199 cv
132.584 205.327 132.515 205.499 132.515 205.715 cv
132.515 205.911 132.55 206.078 132.621 206.218 cv
132.692 206.358 132.822 206.509 133.011 206.671 cv
133.855 207.429 li
134.008 207.561 134.131 207.676 134.227 207.776 cv
134.323 207.875 134.425 207.998 134.533 208.145 cv
134.641 208.292 134.721 208.451 134.773 208.62 cv
134.826 208.791 134.853 208.974 134.857 209.169 cv
134.857 209.628 134.719 209.983 134.442 210.235 cv
134.166 210.486 133.792 210.611 133.319 210.611 cv
f
141.265 210.515 mo
140.547 210.515 li
140.547 205.811 li
140.547 205.484 140.496 205.256 140.395 205.128 cv
140.294 205 140.149 204.936 139.96 204.936 cv
139.579 204.943 139.203 205.15 138.832 205.558 cv
138.839 205.66 138.842 205.737 138.842 205.79 cv
138.842 210.515 li
138.134 210.515 li
138.134 205.811 li
138.134 205.484 138.082 205.256 137.977 205.128 cv
137.873 205 137.726 204.936 137.537 204.936 cv
137.156 204.943 136.784 205.15 136.42 205.558 cv
136.42 210.515 li
135.706 210.515 li
135.706 204.526 li
136.42 204.526 li
136.42 205.133 li
136.821 204.658 137.291 204.42 137.831 204.42 cv
138.33 204.42 138.643 204.683 138.771 205.209 cv
139.189 204.683 139.682 204.42 140.249 204.42 cv
140.546 204.42 140.789 204.527 140.979 204.742 cv
141.17 204.955 141.265 205.305 141.265 205.79 cv
141.265 210.515 li
f
143.865 210.611 mo
143.558 210.611 143.301 210.562 143.092 210.464 cv
142.883 210.367 142.717 210.218 142.598 210.019 cv
142.478 209.821 142.393 209.587 142.343 209.319 cv
142.292 209.051 142.267 208.728 142.267 208.35 cv
142.267 206.691 li
142.267 205.929 142.384 205.363 142.621 204.992 cv
142.857 204.62 143.271 204.435 143.865 204.435 cv
144.462 204.435 144.878 204.62 145.112 204.989 cv
145.346 205.358 145.464 205.925 145.464 206.691 cv
145.464 208.35 li
145.464 208.728 145.438 209.051 145.387 209.319 cv
145.338 209.587 145.252 209.821 145.133 210.019 cv
145.012 210.218 144.848 210.367 144.639 210.464 cv
144.43 210.562 144.172 210.611 143.865 210.611 cv
143.865 205.001 mo
143.737 205.001 143.626 205.019 143.531 205.052 cv
143.437 205.086 143.359 205.141 143.299 205.216 cv
143.152 205.459 li
143.115 205.545 143.087 205.658 143.068 205.795 cv
143.05 205.934 143.038 206.065 143.033 206.188 cv
143.028 206.311 143.025 206.465 143.025 206.651 cv
143.025 208.391 li
143.025 208.576 143.028 208.731 143.033 208.854 cv
143.038 208.977 143.05 209.107 143.068 209.245 cv
143.087 209.384 143.115 209.495 143.152 209.581 cv
143.299 209.825 li
143.359 209.901 143.437 209.956 143.531 209.989 cv
143.626 210.023 143.737 210.039 143.865 210.039 cv
144.017 210.039 144.145 210.012 144.25 209.956 cv
144.354 209.901 144.436 209.83 144.495 209.746 cv
144.553 209.662 144.598 209.542 144.629 209.387 cv
144.659 209.232 144.679 209.083 144.687 208.942 cv
144.696 208.8 144.7 208.617 144.7 208.391 cv
144.7 206.651 li
144.7 206.425 144.696 206.241 144.687 206.099 cv
144.679 205.957 144.659 205.809 144.629 205.654 cv
144.598 205.499 144.553 205.379 144.495 205.295 cv
144.436 205.21 144.354 205.141 144.25 205.085 cv
144.145 205.03 144.017 205.001 143.865 205.001 cv
f
147.841 210.611 mo
147.325 210.611 146.955 210.417 146.73 210.03 cv
146.506 209.642 146.394 208.997 146.394 208.097 cv
146.394 206.99 li
146.394 206.659 146.406 206.37 146.429 206.119 cv
146.453 205.87 146.497 205.636 146.56 205.416 cv
146.625 205.198 146.709 205.019 146.813 204.88 cv
146.918 204.742 147.053 204.633 147.218 204.554 cv
147.384 204.475 147.579 204.435 147.805 204.435 cv
148.2 204.439 148.552 204.612 148.862 204.956 cv
148.862 202.128 li
149.621 202.128 li
149.621 210.515 li
148.862 210.515 li
148.862 210.09 li
148.558 210.434 148.219 210.608 147.841 210.611 cv
147.972 205.032 mo
147.651 205.032 147.435 205.166 147.322 205.434 cv
147.209 205.702 147.152 206.14 147.152 206.746 cv
147.152 208.158 li
147.152 208.812 147.21 209.285 147.325 209.575 cv
147.439 209.865 147.662 210.009 147.992 210.009 cv
148.286 210.009 148.576 209.877 148.862 209.615 cv
148.862 205.456 li
148.558 205.173 148.261 205.032 147.972 205.032 cv
f
154.315 210.591 mo
153.907 210.591 153.626 210.479 153.47 210.254 cv
153.315 210.031 153.236 209.703 153.232 209.271 cv
153.232 205.032 li
152.51 205.032 li
152.51 204.526 li
153.232 204.526 li
153.232 202.675 li
153.991 202.675 li
153.991 204.526 li
154.988 204.526 li
154.988 205.032 li
153.991 205.032 li
153.991 209.2 li
153.991 209.503 154.027 209.711 154.097 209.825 cv
154.169 209.938 154.311 209.995 154.527 209.995 cv
154.666 209.995 154.807 209.981 154.953 209.954 cv
154.953 210.525 li
154.726 210.569 154.514 210.591 154.315 210.591 cv
f
157.3 210.611 mo
156.726 210.611 156.313 210.434 156.06 210.08 cv
155.807 209.726 155.681 209.121 155.681 208.264 cv
155.681 206.751 li
155.681 206.168 155.741 205.705 155.86 205.364 cv
155.98 205.021 156.156 204.781 156.386 204.643 cv
156.618 204.504 156.924 204.435 157.304 204.435 cv
157.557 204.435 157.773 204.468 157.952 204.534 cv
158.131 204.6 158.279 204.693 158.397 204.815 cv
158.515 204.936 158.609 205.1 158.677 205.308 cv
158.747 205.515 158.795 205.745 158.822 205.996 cv
158.849 206.246 158.862 206.549 158.862 206.904 cv
158.857 207.445 li
156.439 207.445 li
156.439 208.34 li
156.439 208.96 156.5 209.399 156.619 209.655 cv
156.739 209.911 156.964 210.039 157.295 210.039 cv
157.557 210.039 157.759 209.956 157.901 209.789 cv
158.043 209.622 158.114 209.32 158.114 208.881 cv
158.114 208.466 li
158.857 208.466 li
158.857 208.8 li
158.857 209.38 158.736 209.828 158.493 210.141 cv
158.251 210.454 157.852 210.611 157.3 210.611 cv
157.3 205.001 mo
156.979 205.001 156.756 205.113 156.63 205.335 cv
156.503 205.558 156.439 205.981 156.439 206.605 cv
156.439 207.01 li
158.114 207.01 li
158.114 206.514 li
158.114 206.305 158.109 206.131 158.098 205.993 cv
158.089 205.855 158.067 205.717 158.036 205.58 cv
158.004 205.445 157.959 205.337 157.901 205.259 cv
157.844 205.182 157.764 205.12 157.664 205.073 cv
157.562 205.025 157.441 205.001 157.3 205.001 cv
f
165.443 210.515 mo
164.724 210.515 li
164.724 205.811 li
164.724 205.484 164.674 205.256 164.573 205.128 cv
164.471 205 164.327 204.936 164.137 204.936 cv
163.757 204.943 163.381 205.15 163.01 205.558 cv
163.016 205.66 163.02 205.737 163.02 205.79 cv
163.02 210.515 li
162.312 210.515 li
162.312 205.811 li
162.312 205.484 162.26 205.256 162.155 205.128 cv
162.05 205 161.904 204.936 161.715 204.936 cv
161.334 204.943 160.962 205.15 160.597 205.558 cv
160.597 210.515 li
159.883 210.515 li
159.883 204.526 li
160.597 204.526 li
160.597 205.133 li
160.999 204.658 161.468 204.42 162.009 204.42 cv
162.508 204.42 162.821 204.683 162.949 205.209 cv
163.367 204.683 163.86 204.42 164.427 204.42 cv
164.723 204.42 164.967 204.527 165.157 204.742 cv
165.347 204.955 165.443 205.305 165.443 205.79 cv
165.443 210.515 li
f
167.32 212.488 mo
166.561 212.488 li
166.561 204.526 li
167.32 204.526 li
167.32 205.027 li
167.64 204.632 168.023 204.435 168.467 204.435 cv
168.69 204.435 168.885 204.481 169.053 204.572 cv
169.218 204.662 169.35 204.781 169.447 204.926 cv
169.543 205.071 169.62 205.251 169.679 205.467 cv
169.738 205.683 169.777 205.896 169.796 206.107 cv
169.814 206.318 169.823 206.556 169.823 206.823 cv
169.823 208.087 li
169.823 208.404 169.81 208.687 169.783 208.937 cv
169.756 209.187 169.709 209.418 169.641 209.632 cv
169.574 209.846 169.485 210.024 169.376 210.163 cv
169.266 210.303 169.129 210.413 168.964 210.492 cv
168.799 210.572 168.606 210.611 168.387 210.611 cv
167.999 210.611 167.643 210.42 167.32 210.039 cv
167.32 212.488 li
168.251 205.032 mo
167.943 205.032 167.634 205.186 167.32 205.493 cv
167.32 209.575 li
167.596 209.865 167.912 210.009 168.265 210.009 cv
168.4 210.009 168.515 209.982 168.609 209.926 cv
168.704 209.87 168.781 209.794 168.84 209.699 cv
168.898 209.602 168.945 209.471 168.978 209.306 cv
169.012 209.141 169.035 208.964 169.047 208.778 cv
169.058 208.59 169.065 208.364 169.065 208.097 cv
169.065 206.823 li
169.065 206.182 169.01 205.723 168.903 205.447 cv
168.795 205.17 168.578 205.032 168.251 205.032 cv
f
172.367 210.611 mo
172.06 210.611 171.802 210.562 171.594 210.464 cv
171.385 210.367 171.219 210.218 171.1 210.019 cv
170.98 209.821 170.895 209.587 170.844 209.319 cv
170.794 209.051 170.769 208.728 170.769 208.35 cv
170.769 206.691 li
170.769 205.929 170.886 205.363 171.123 204.992 cv
171.359 204.62 171.773 204.435 172.367 204.435 cv
172.964 204.435 173.38 204.62 173.614 204.989 cv
173.848 205.358 173.966 205.925 173.966 206.691 cv
173.966 208.35 li
173.966 208.728 173.94 209.051 173.889 209.319 cv
173.84 209.587 173.754 209.821 173.634 210.019 cv
173.514 210.218 173.35 210.367 173.141 210.464 cv
172.932 210.562 172.674 210.611 172.367 210.611 cv
172.367 205.001 mo
172.239 205.001 172.128 205.019 172.033 205.052 cv
171.939 205.086 171.861 205.141 171.8 205.216 cv
171.654 205.459 li
171.617 205.545 171.589 205.658 171.57 205.795 cv
171.551 205.934 171.54 206.065 171.535 206.188 cv
171.53 206.311 171.527 206.465 171.527 206.651 cv
171.527 208.391 li
171.527 208.576 171.53 208.731 171.535 208.854 cv
171.54 208.977 171.551 209.107 171.57 209.245 cv
171.589 209.384 171.617 209.495 171.654 209.581 cv
171.8 209.825 li
171.861 209.901 171.939 209.956 172.033 209.989 cv
172.128 210.023 172.239 210.039 172.367 210.039 cv
172.519 210.039 172.647 210.012 172.752 209.956 cv
172.856 209.901 172.938 209.83 172.997 209.746 cv
173.055 209.662 173.1 209.542 173.131 209.387 cv
173.161 209.232 173.18 209.083 173.189 208.942 cv
173.198 208.8 173.202 208.617 173.202 208.391 cv
173.202 206.651 li
173.202 206.425 173.198 206.241 173.189 206.099 cv
173.18 205.957 173.161 205.809 173.131 205.654 cv
173.1 205.499 173.055 205.379 172.997 205.295 cv
172.938 205.21 172.856 205.141 172.752 205.085 cv
172.647 205.03 172.519 205.001 172.367 205.001 cv
f
175.827 210.515 mo
175.068 210.515 li
175.068 204.526 li
175.827 204.526 li
175.827 205.351 li
176.009 205.047 176.221 204.823 176.467 204.678 cv
176.711 204.533 176.958 204.46 177.208 204.46 cv
177.339 204.465 li
177.339 205.284 li
177.231 205.242 177.109 205.219 176.974 205.219 cv
176.489 205.219 176.106 205.452 175.827 205.917 cv
175.827 210.515 li
f
181.052 210.515 mo
180.294 210.515 li
180.294 204.526 li
181.052 204.526 li
181.052 210.515 li
181.057 203.701 mo
180.294 203.701 li
180.294 202.67 li
181.057 202.67 li
181.057 203.701 li
f
185.442 210.515 mo
184.683 210.515 li
184.683 205.871 li
184.683 205.568 184.637 205.352 184.545 205.224 cv
184.452 205.096 184.307 205.032 184.112 205.032 cv
183.785 205.032 183.441 205.216 183.08 205.583 cv
183.08 210.515 li
182.321 210.515 li
182.321 204.526 li
183.08 204.526 li
183.08 205.149 li
183.522 204.673 184.003 204.435 184.522 204.435 cv
184.818 204.435 185.046 204.545 185.205 204.766 cv
185.363 204.988 185.442 205.302 185.442 205.709 cv
185.442 210.515 li
f
188.051 210.611 mo
187.779 210.611 187.545 210.571 187.348 210.49 cv
187.153 210.409 186.998 210.303 186.883 210.173 cv
186.769 210.043 186.678 209.872 186.613 209.661 cv
186.548 209.448 186.504 209.233 186.481 209.015 cv
186.46 208.798 186.449 208.54 186.449 208.243 cv
186.449 206.848 li
186.449 206.413 186.472 206.051 186.519 205.763 cv
186.566 205.475 186.65 205.228 186.769 205.022 cv
186.889 204.816 187.052 204.667 187.26 204.575 cv
187.467 204.482 187.73 204.435 188.047 204.435 cv
188.297 204.435 188.512 204.465 188.694 204.526 cv
188.877 204.587 189.024 204.67 189.137 204.777 cv
189.25 204.883 189.34 205.019 189.405 205.184 cv
189.47 205.349 189.516 205.524 189.542 205.707 cv
189.567 205.891 189.58 206.106 189.58 206.352 cv
189.58 206.635 li
188.877 206.635 li
188.877 206.352 li
188.877 205.839 188.816 205.487 188.694 205.292 cv
188.573 205.099 188.36 205.001 188.057 205.001 cv
187.713 205.001 187.485 205.123 187.374 205.369 cv
187.262 205.613 187.207 206.064 187.207 206.721 cv
187.207 208.401 li
187.207 209.014 187.267 209.441 187.387 209.68 cv
187.507 209.92 187.731 210.039 188.062 210.039 cv
188.204 210.039 188.323 210.019 188.422 209.979 cv
188.519 209.939 188.597 209.883 188.656 209.812 cv
188.716 209.742 188.761 209.643 188.796 209.519 cv
188.829 209.394 188.851 209.261 188.861 209.121 cv
188.872 208.982 188.877 208.805 188.877 208.593 cv
188.877 208.264 li
189.58 208.264 li
189.58 208.558 li
189.58 208.821 189.568 209.048 189.547 209.241 cv
189.524 209.433 189.481 209.618 189.415 209.799 cv
189.349 209.98 189.262 210.126 189.152 210.24 cv
189.043 210.352 188.895 210.443 188.71 210.51 cv
188.524 210.577 188.304 210.611 188.051 210.611 cv
f
191.43 210.515 mo
190.673 210.515 li
190.673 204.526 li
191.43 204.526 li
191.43 210.515 li
191.436 203.701 mo
190.673 203.701 li
190.673 202.67 li
191.436 202.67 li
191.436 203.701 li
f
194.036 210.611 mo
193.52 210.611 193.15 210.417 192.926 210.03 cv
192.701 209.642 192.59 208.997 192.59 208.097 cv
192.59 206.99 li
192.59 206.659 192.601 206.37 192.625 206.119 cv
192.648 205.87 192.692 205.636 192.756 205.416 cv
192.82 205.198 192.904 205.019 193.008 204.88 cv
193.113 204.742 193.249 204.633 193.414 204.554 cv
193.579 204.475 193.774 204.435 194.001 204.435 cv
194.395 204.439 194.747 204.612 195.057 204.956 cv
195.057 202.128 li
195.816 202.128 li
195.816 210.515 li
195.057 210.515 li
195.057 210.09 li
194.754 210.434 194.414 210.608 194.036 210.611 cv
194.168 205.032 mo
193.846 205.032 193.631 205.166 193.517 205.434 cv
193.404 205.702 193.347 206.14 193.347 206.746 cv
193.347 208.158 li
193.347 208.812 193.405 209.285 193.52 209.575 cv
193.635 209.865 193.857 210.009 194.187 210.009 cv
194.481 210.009 194.771 209.877 195.057 209.615 cv
195.057 205.456 li
194.754 205.173 194.457 205.032 194.168 205.032 cv
f
197.819 210.515 mo
197.061 210.515 li
197.061 204.526 li
197.819 204.526 li
197.819 210.515 li
197.825 203.701 mo
197.061 203.701 li
197.061 202.67 li
197.825 202.67 li
197.825 203.701 li
f
200.424 210.611 mo
199.909 210.611 199.539 210.417 199.314 210.03 cv
199.09 209.642 198.978 208.997 198.978 208.097 cv
198.978 206.99 li
198.978 206.659 198.99 206.37 199.013 206.119 cv
199.037 205.87 199.081 205.636 199.144 205.416 cv
199.209 205.198 199.293 205.019 199.397 204.88 cv
199.502 204.742 199.637 204.633 199.802 204.554 cv
199.968 204.475 200.163 204.435 200.389 204.435 cv
200.784 204.439 201.136 204.612 201.446 204.956 cv
201.446 202.128 li
202.205 202.128 li
202.205 210.515 li
201.446 210.515 li
201.446 210.09 li
201.142 210.434 200.803 210.608 200.424 210.611 cv
200.556 205.032 mo
200.235 205.032 200.019 205.166 199.906 205.434 cv
199.793 205.702 199.736 206.14 199.736 206.746 cv
199.736 208.158 li
199.736 208.812 199.794 209.285 199.909 209.575 cv
200.023 209.865 200.246 210.009 200.576 210.009 cv
200.87 210.009 201.16 209.877 201.446 209.615 cv
201.446 205.456 li
201.142 205.173 200.846 205.032 200.556 205.032 cv
f
204.244 210.606 mo
203.943 210.606 203.715 210.494 203.555 210.272 cv
203.397 210.049 203.318 209.735 203.318 209.327 cv
203.318 204.526 li
204.082 204.526 li
204.082 209.169 li
204.082 209.473 204.128 209.689 204.218 209.817 cv
204.309 209.945 204.453 210.009 204.648 210.009 cv
204.989 210.009 205.342 209.814 205.711 209.422 cv
205.711 204.526 li
206.469 204.526 li
206.469 210.515 li
205.711 210.515 li
205.711 209.852 li
205.265 210.355 204.776 210.606 204.244 210.606 cv
f
210.748 210.515 mo
209.989 210.515 li
209.989 205.871 li
209.989 205.568 209.943 205.352 209.85 205.224 cv
209.758 205.096 209.613 205.032 209.418 205.032 cv
209.091 205.032 208.747 205.216 208.385 205.583 cv
208.385 210.515 li
207.627 210.515 li
207.627 204.526 li
208.385 204.526 li
208.385 205.149 li
208.828 204.673 209.308 204.435 209.828 204.435 cv
210.124 204.435 210.351 204.545 210.511 204.766 cv
210.669 204.988 210.748 205.302 210.748 205.709 cv
210.748 210.515 li
f
213.287 210.591 mo
212.879 210.591 212.597 210.479 212.442 210.254 cv
212.287 210.031 212.208 209.703 212.204 209.271 cv
212.204 205.032 li
211.481 205.032 li
211.481 204.526 li
212.204 204.526 li
212.204 202.675 li
212.963 202.675 li
212.963 204.526 li
213.96 204.526 li
213.96 205.032 li
212.963 205.032 li
212.963 209.2 li
212.963 209.503 212.999 209.711 213.069 209.825 cv
213.14 209.938 213.283 209.995 213.499 209.995 cv
213.637 209.995 213.779 209.981 213.924 209.954 cv
213.924 210.525 li
213.698 210.569 213.486 210.591 213.287 210.591 cv
f
82.4206 223.036 mo
82.1199 223.036 81.8913 222.925 81.7322 222.703 cv
81.5739 222.48 81.4949 222.165 81.4949 221.757 cv
81.4949 216.956 li
82.2586 216.956 li
82.2586 221.6 li
82.2586 221.904 82.3044 222.119 82.3952 222.247 cv
82.4861 222.375 82.6297 222.44 82.825 222.44 cv
83.1658 222.44 83.5192 222.245 83.8875 221.853 cv
83.8875 216.956 li
84.6462 216.956 li
84.6462 222.946 li
83.8875 222.946 li
83.8875 222.283 li
83.4422 222.785 82.9529 223.036 82.4206 223.036 cv
f
87.2253 223.022 mo
86.8171 223.022 86.5359 222.91 86.3806 222.685 cv
86.2253 222.461 86.1463 222.133 86.1424 221.702 cv
86.1424 217.462 li
85.4197 217.462 li
85.4197 216.956 li
86.1424 216.956 li
86.1424 215.106 li
86.901 215.106 li
86.901 216.956 li
87.8982 216.956 li
87.8982 217.462 li
86.901 217.462 li
86.901 221.63 li
86.901 221.934 86.9372 222.142 87.0075 222.255 cv
87.0789 222.368 87.2214 222.425 87.4373 222.425 cv
87.5759 222.425 87.7176 222.411 87.8631 222.384 cv
87.8631 222.955 li
87.6364 222.999 87.4245 223.022 87.2253 223.022 cv
f
91.6862 222.946 mo
90.9226 222.946 li
90.9226 214.559 li
91.6862 214.559 li
91.6862 222.946 li
f
93.947 223.041 mo
93.5964 223.041 93.3083 222.913 93.0828 222.655 cv
92.8562 222.397 92.7438 222.078 92.7438 221.697 cv
92.7438 221.497 92.7605 221.32 92.7937 221.162 cv
92.8279 221.006 92.8913 220.859 92.9841 220.72 cv
93.077 220.581 93.1775 220.459 93.2868 220.353 cv
93.3972 220.247 93.5525 220.134 93.7547 220.014 cv
93.9578 219.895 94.1599 219.785 94.3621 219.683 cv
94.5641 219.582 94.8288 219.459 95.1559 219.314 cv
95.1559 218.884 li
95.1559 218.334 95.1043 217.956 94.9997 217.748 cv
94.8952 217.541 94.699 217.437 94.4129 217.437 cv
93.8591 217.437 93.5827 217.78 93.5827 218.464 cv
93.5827 218.682 li
92.8347 218.657 li
92.8347 218.559 92.8357 218.497 92.8396 218.474 cv
92.8631 217.911 93.0095 217.502 93.28 217.247 cv
93.5495 216.994 93.9402 216.866 94.4528 216.866 cv
94.9822 216.866 95.3581 217.023 95.5809 217.336 cv
95.8035 217.65 95.9148 218.153 95.9148 218.843 cv
95.9148 221.757 li
95.9148 222.24 95.9334 222.635 95.9705 222.946 cv
95.2976 222.946 li
95.1863 222.117 li
95.0954 222.379 94.9411 222.599 94.7234 222.776 cv
94.5066 222.954 94.2478 223.041 93.947 223.041 cv
95.1559 219.815 mo
95.0603 219.866 li
94.8952 219.952 94.7683 220.021 94.6804 220.068 cv
94.5925 220.115 94.488 220.174 94.365 220.244 cv
94.2409 220.316 94.1491 220.374 94.0886 220.421 cv
93.8786 220.594 li
93.7068 220.784 li
93.5983 220.989 li
93.5222 221.234 li
93.5085 221.32 93.5017 221.414 93.5017 221.519 cv
93.5017 221.813 93.5681 222.031 93.699 222.174 cv
93.8308 222.318 93.9959 222.389 94.1951 222.389 cv
94.3973 222.389 94.5837 222.32 94.7537 222.179 cv
94.9246 222.039 95.0583 221.873 95.1559 221.681 cv
95.1559 219.815 li
f
98.8591 223.041 mo
98.4646 223.041 98.1082 222.851 97.7917 222.47 cv
97.7917 222.946 li
97.0329 222.946 li
97.0329 214.559 li
97.7917 214.559 li
97.7917 217.452 li
98.1082 217.061 98.49 216.866 98.9343 216.866 cv
99.1569 216.866 99.3523 216.911 99.5194 217.002 cv
99.6853 217.093 99.8172 217.211 99.9138 217.357 cv
100.009 217.501 100.087 217.682 100.146 217.898 cv
100.205 218.114 100.244 218.327 100.262 218.538 cv
100.281 218.748 100.29 218.987 100.29 219.253 cv
100.29 220.518 li
100.29 220.834 100.277 221.118 100.25 221.368 cv
100.222 221.618 100.176 221.849 100.108 222.063 cv
100.041 222.277 99.9528 222.454 99.8454 222.594 cv
99.737 222.734 99.6003 222.844 99.4352 222.923 cv
99.2703 223.002 99.0779 223.041 98.8591 223.041 cv
98.7224 217.462 mo
98.4158 217.462 98.1052 217.617 97.7917 217.923 cv
97.7917 222.005 li
98.0681 222.295 98.3816 222.44 98.7321 222.44 cv
99.0525 222.44 99.2664 222.29 99.3719 221.993 cv
99.4782 221.694 99.532 221.205 99.532 220.528 cv
99.532 219.253 li
99.532 218.613 99.4782 218.154 99.3719 217.877 cv
99.2664 217.601 99.0495 217.462 98.7224 217.462 cv
f
102.819 223.041 mo
102.512 223.041 102.255 222.993 102.046 222.895 cv
101.837 222.797 101.672 222.649 101.553 222.45 cv
101.432 222.251 101.347 222.018 101.297 221.749 cv
101.246 221.482 101.221 221.159 101.221 220.781 cv
101.221 219.121 li
101.221 218.36 101.339 217.793 101.575 217.422 cv
101.811 217.051 102.225 216.866 102.819 216.866 cv
103.416 216.866 103.832 217.05 104.066 217.419 cv
104.3 217.788 104.418 218.356 104.418 219.121 cv
104.418 220.781 li
104.418 221.159 104.392 221.482 104.341 221.749 cv
104.292 222.018 104.206 222.251 104.087 222.45 cv
103.967 222.649 103.803 222.797 103.593 222.895 cv
103.385 222.993 103.126 223.041 102.819 223.041 cv
102.819 217.432 mo
102.691 217.432 102.58 217.45 102.485 217.483 cv
102.391 217.517 102.313 217.572 102.253 217.647 cv
102.106 217.89 li
102.069 217.976 102.041 218.088 102.022 218.226 cv
102.004 218.365 101.992 218.495 101.987 218.618 cv
101.982 218.742 101.979 218.896 101.979 219.081 cv
101.979 220.822 li
101.979 221.007 101.982 221.161 101.987 221.284 cv
101.992 221.408 102.004 221.537 102.022 221.676 cv
102.041 221.815 102.069 221.926 102.106 222.012 cv
102.253 222.255 li
102.313 222.331 102.391 222.386 102.485 222.419 cv
102.58 222.453 102.691 222.47 102.819 222.47 cv
102.971 222.47 103.099 222.443 103.204 222.387 cv
103.308 222.331 103.39 222.261 103.449 222.177 cv
103.508 222.092 103.552 221.973 103.583 221.818 cv
103.613 221.663 103.633 221.514 103.641 221.372 cv
103.65 221.231 103.654 221.047 103.654 220.822 cv
103.654 219.081 li
103.654 218.856 103.65 218.671 103.641 218.53 cv
103.633 218.388 103.613 218.24 103.583 218.084 cv
103.552 217.93 103.508 217.81 103.449 217.726 cv
103.39 217.641 103.308 217.572 103.204 217.516 cv
103.099 217.46 102.971 217.432 102.819 217.432 cv
f
106.28 222.946 mo
105.521 222.946 li
105.521 216.956 li
106.28 216.956 li
106.28 217.782 li
106.462 217.478 106.675 217.253 106.92 217.109 cv
107.164 216.963 107.411 216.891 107.661 216.891 cv
107.792 216.896 li
107.792 217.715 li
107.684 217.672 107.562 217.65 107.427 217.65 cv
106.942 217.65 106.559 217.882 106.28 218.348 cv
106.28 222.946 li
f
110.053 223.041 mo
109.48 223.041 109.067 222.865 108.814 222.511 cv
108.561 222.157 108.435 221.551 108.435 220.695 cv
108.435 219.182 li
108.435 218.599 108.495 218.136 108.614 217.794 cv
108.734 217.452 108.91 217.211 109.14 217.074 cv
109.372 216.935 109.677 216.866 110.058 216.866 cv
110.311 216.866 110.527 216.899 110.706 216.964 cv
110.885 217.031 111.033 217.123 111.151 217.245 cv
111.269 217.367 111.363 217.531 111.431 217.739 cv
111.501 217.946 111.549 218.175 111.576 218.426 cv
111.603 218.677 111.616 218.98 111.616 219.334 cv
111.611 219.875 li
109.193 219.875 li
109.193 220.771 li
109.193 221.391 109.254 221.829 109.373 222.085 cv
109.493 222.342 109.718 222.47 110.049 222.47 cv
110.311 222.47 110.513 222.387 110.655 222.22 cv
110.797 222.053 110.868 221.75 110.868 221.312 cv
110.868 220.897 li
111.611 220.897 li
111.611 221.231 li
111.611 221.811 111.49 222.258 111.247 222.572 cv
111.005 222.885 110.606 223.041 110.053 223.041 cv
110.053 217.432 mo
109.733 217.432 109.51 217.543 109.384 217.766 cv
109.257 217.989 109.193 218.412 109.193 219.035 cv
109.193 219.441 li
110.868 219.441 li
110.868 218.945 li
110.868 218.736 110.863 218.562 110.852 218.423 cv
110.842 218.285 110.821 218.148 110.79 218.011 cv
110.758 217.875 110.713 217.768 110.655 217.69 cv
110.598 217.613 110.518 217.55 110.418 217.503 cv
110.316 217.455 110.195 217.432 110.053 217.432 cv
f
-.000244141 .000366211 mo
-.000244141 86.5707 li
7.89624 92.6127 18.4353 94.2601 27.905 90.6879 cv
75.7556 72.64 li
83.573 69.6918 89.7429 63.5219 92.6912 55.7054 cv
110.739 7.85486 li
111.706 5.29041 112.281 2.64783 112.5 .000366211 cv
-.000244141 .000366211 li
cp
0 .912535 0 0 cmyk
f
600 301.404 mo
533.846 342.424 li
526.468 346.981 524.181 356.656 528.738 364.034 cv
550.952 400 li
600 400 li
600 301.404 li
cp
.147219 .0154116 0 0 cmyk
f
84.1462 329.555 mo
82.3757 323.196 77.3484 318.265 70.9558 316.619 cv
31.9558 306.572 li
25.5632 304.925 18.7791 306.814 14.157 311.527 cv
-.000244141 325.96 li
-.000244141 400 li
76.8464 400 li
90.3376 386.245 li
94.9597 381.533 96.7156 374.712 94.946 368.354 cv
84.1462 329.555 li
cp
.587366 .778347 0 0 cmyk
f
448.046 161.351 mo
447.822 161.351 447.574 161.28 447.313 161.129 cv
405.761 137.139 li
404.74 136.549 403.913 134.968 403.913 133.607 cv
403.913 100.914 li
403.913 99.9009 404.371 99.2949 405.027 99.2949 cv
405.252 99.2949 405.5 99.3662 405.761 99.517 cv
447.313 123.507 li
448.333 124.096 449.161 125.677 449.161 127.038 cv
449.161 159.732 li
449.161 160.745 448.702 161.351 448.046 161.351 cv
.0487068 .00485237 0 0 cmyk
f
418.326 139.05 mo
418.034 138.881 li
416.951 138.255 416.073 136.578 416.073 135.134 cv
416.073 119.554 li
416.073 118.11 416.951 117.447 418.034 118.072 cv
418.326 118.241 li
419.409 118.866 420.288 120.543 420.288 121.988 cv
420.288 137.567 li
420.288 139.011 419.409 139.675 418.326 139.05 cv
cp
.280034 .073518 .0233463 0 cmyk
f
426.683 143.874 mo
426.39 143.705 li
425.307 143.08 424.429 141.403 424.429 139.958 cv
424.429 130.84 li
424.429 129.396 425.307 128.732 426.39 129.358 cv
426.683 129.527 li
427.766 130.152 428.644 131.829 428.644 133.274 cv
428.644 142.392 li
428.644 143.836 427.766 144.5 426.683 143.874 cv
cp
f
435.04 148.7 mo
434.748 148.531 li
433.665 147.906 432.787 146.228 432.787 144.784 cv
432.787 123.078 li
432.787 121.634 433.665 120.971 434.748 121.596 cv
435.04 121.765 li
436.123 122.39 437.001 124.068 437.001 125.512 cv
437.001 147.217 li
437.001 148.661 436.123 149.325 435.04 148.7 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
486.929 152.338 mo
461.114 137.433 li
460.156 136.88 459.38 135.398 459.38 134.121 cv
459.38 132.845 460.156 132.259 461.114 132.812 cv
486.929 147.716 li
487.886 148.269 488.663 149.751 488.663 151.028 cv
488.663 152.304 487.886 152.891 486.929 152.338 cv
cp
.280034 .073518 .0233463 0 cmyk
f
470.323 151.829 mo
461.114 146.512 li
460.156 145.959 459.38 144.477 459.38 143.201 cv
459.38 141.924 460.156 141.337 461.114 141.89 cv
470.323 147.207 li
471.28 147.76 472.055 149.243 472.055 150.519 cv
472.055 151.795 471.28 152.381 470.323 151.829 cv
cp
f
485.777 160.751 mo
476.568 155.435 li
475.611 154.882 474.834 153.4 474.834 152.123 cv
474.834 150.847 475.611 150.26 476.568 150.813 cv
485.777 156.129 li
486.734 156.682 487.51 158.165 487.51 159.442 cv
487.51 160.718 486.734 161.304 485.777 160.751 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
505.197 171.998 mo
492.022 164.358 li
491.065 163.805 490.289 162.323 490.289 161.046 cv
490.289 159.77 491.065 159.183 492.022 159.736 cv
505.197 167.376 li
506.154 167.929 506.929 169.412 506.929 170.689 cv
506.929 171.965 506.154 172.551 505.197 171.998 cv
cp
.280034 .073518 .0233463 0 cmyk
f
493.369 174.213 mo
461.114 155.591 li
460.156 155.038 459.38 153.556 459.38 152.28 cv
459.38 151.003 460.156 150.416 461.114 150.969 cv
493.369 169.591 li
494.326 170.144 495.102 171.627 495.102 172.904 cv
495.102 174.18 494.326 174.766 493.369 174.213 cv
cp
f
506.929 191.018 mo
461.114 164.67 li
460.156 164.118 459.38 162.635 459.38 161.359 cv
459.38 160.082 460.156 159.495 461.114 160.048 cv
506.929 186.396 li
507.887 186.949 508.663 188.431 508.663 189.707 cv
508.663 190.984 507.887 191.571 506.929 191.018 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
510.805 166.082 mo
494.056 156.453 li
493.098 155.9 492.323 154.417 492.323 153.141 cv
492.323 151.865 493.098 151.278 494.056 151.83 cv
510.805 161.46 li
511.762 162.013 512.538 163.495 512.538 164.772 cv
512.538 166.048 511.762 166.635 510.805 166.082 cv
cp
.280034 .073518 .0233463 0 cmyk
f
411.955 166.779 mo
403.805 162.073 li
403.805 171.484 li
411.955 176.19 li
411.955 166.779 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
424.831 166.438 mo
416.68 161.733 li
416.68 178.917 li
424.831 183.622 li
424.831 166.438 li
cp
.147219 .0154116 0 0 cmyk
f
437.706 178.782 mo
429.555 174.076 li
429.555 186.351 li
437.706 191.056 li
437.706 178.782 li
cp
f
450.581 182.668 mo
442.43 177.963 li
442.43 193.785 li
450.581 198.49 li
450.581 182.668 li
cp
f
463.456 191.057 mo
455.305 186.351 li
455.305 201.217 li
463.456 205.923 li
463.456 191.057 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
476.331 194.747 mo
468.18 190.042 li
468.18 208.651 li
476.331 213.357 li
476.331 194.747 li
cp
1 .866484 .240818 .0951247 cmyk
f
489.206 200.196 mo
481.055 195.49 li
481.055 216.084 li
489.206 220.79 li
489.206 200.196 li
cp
.147219 .0154116 0 0 cmyk
f
502.081 202.607 mo
493.93 197.901 li
493.93 223.518 li
502.081 228.223 li
502.081 202.607 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
554.044 164.892 mo
553.587 163.107 li
558.772 161.778 li
559.229 163.563 li
554.044 164.892 li
cp
.657221 .328313 0 0 cmyk
f
551.4 167.472 mo
550.942 165.687 li
556.127 164.358 li
556.584 166.143 li
551.4 167.472 li
cp
f
548.754 170.051 mo
548.297 168.267 li
553.482 166.938 li
553.94 168.723 li
548.754 170.051 li
cp
f
546.11 172.631 mo
545.653 170.847 li
550.837 169.518 li
551.294 171.303 li
546.11 172.631 li
cp
f
450.186 271.622 mo
433.762 262.14 li
417.338 271.622 li
433.762 281.105 li
450.186 271.622 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
398.416 273.278 mo
381.992 263.795 li
365.568 273.278 li
381.992 282.76 li
398.416 273.278 li
cp
f
363.659 253.368 mo
347.234 243.885 li
330.81 253.368 li
347.234 262.849 li
363.659 253.368 li
cp
f
381.992 273.278 mo
381.992 222.705 li
398.416 213.223 li
398.416 263.795 li
381.992 273.278 li
cp
.172946 .892424 1 .0698253 cmyk
f
398.416 213.223 mo
381.992 203.741 li
365.568 213.223 li
381.992 222.705 li
398.416 213.223 li
cp
.0108949 .772579 .92517 0 cmyk
f
381.992 222.705 mo
365.568 213.223 li
365.568 263.795 li
381.992 273.278 li
381.992 222.705 li
cp
.657221 .328313 0 0 cmyk
f
381.992 273.278 mo
381.992 222.705 li
398.416 213.223 li
398.416 263.795 li
381.992 273.278 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
398.416 213.223 mo
381.992 203.741 li
365.568 213.223 li
381.992 222.705 li
398.416 213.223 li
cp
.147219 .0154116 0 0 cmyk
f
416.854 293.675 mo
416.854 265.228 li
433.278 255.745 li
433.278 284.193 li
416.854 293.675 li
cp
1 .866484 .240818 .0951247 cmyk
f
416.854 265.228 mo
400.43 255.745 li
400.43 284.193 li
416.854 293.675 li
416.854 265.228 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
433.278 255.745 mo
416.854 246.263 li
400.43 255.745 li
416.854 265.228 li
433.278 255.745 li
cp
.147219 .0154116 0 0 cmyk
f
347.234 253.368 mo
347.234 183.829 li
363.659 174.347 li
363.659 243.885 li
347.234 253.368 li
cp
f
347.234 183.829 mo
330.81 174.347 li
330.81 243.885 li
347.234 253.368 li
347.234 183.829 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
363.659 174.347 mo
347.234 164.865 li
330.81 174.347 li
347.234 183.829 li
363.659 174.347 li
cp
.657221 .328313 0 0 cmyk
f
337.452 213.658 mo
337.452 213.658 334.74 212.29 333.075 214.327 cv
331.409 216.363 329.029 221.17 328.955 224.418 cv
328.882 227.667 331.525 227.448 333.097 226.679 cv
334.669 225.911 339.261 219.249 339.539 217.944 cv
339.817 216.639 339.21 214.874 338.769 214.529 cv
338.328 214.184 337.452 213.658 337.452 213.658 cv
cp
f
338.043 213.004 mo
338.169 215.814 li
338.196 216.411 337.895 216.981 337.375 217.276 cv
336.902 217.544 336.214 217.75 335.284 217.601 cv
333.241 217.273 333.058 216.689 332.912 213.88 cv
332.766 211.071 338.043 213.004 338.043 213.004 cv
cp
.147219 .0154116 0 0 cmyk
f
327.525 208.256 mo
327.525 208.256 324.813 206.888 323.148 208.924 cv
321.482 210.961 319.102 215.768 319.028 219.016 cv
318.955 222.265 321.598 222.045 323.171 221.277 cv
324.742 220.508 329.335 213.847 329.612 212.542 cv
329.89 211.237 329.285 209.472 328.843 209.126 cv
328.401 208.782 327.525 208.256 327.525 208.256 cv
cp
.657221 .328313 0 0 cmyk
f
328.117 207.602 mo
328.243 210.411 li
328.269 211.009 327.969 211.578 327.449 211.873 cv
326.975 212.142 326.287 212.348 325.357 212.199 cv
323.314 211.87 323.132 211.286 322.985 208.478 cv
322.84 205.669 328.117 207.602 328.117 207.602 cv
cp
.147219 .0154116 0 0 cmyk
f
352.315 156.021 mo
351.512 142.961 338.171 157.942 338.171 157.942 cv
329.041 166.892 li
320.819 175.923 li
319.214 177.688 318.467 180.07 318.777 182.434 cv
322.103 207.76 li
322.267 209.011 323.338 209.933 324.598 209.923 cv
324.955 209.92 325.363 209.888 325.831 209.816 cv
328.798 209.353 328.579 206.533 328.579 206.533 cv
327.971 182.845 li
345.238 172.436 li
345.238 172.436 353.117 169.08 352.315 156.021 cv
cp
1 .866484 .240818 .0951247 cmyk
f
362.242 160.996 mo
361.439 147.937 348.098 162.917 348.098 162.917 cv
338.967 171.868 li
330.746 180.9 li
329.14 182.663 328.393 185.045 328.704 187.41 cv
332.03 212.736 li
332.194 213.987 333.264 214.91 334.525 214.899 cv
334.882 214.897 335.29 214.864 335.758 214.791 cv
338.724 214.329 338.505 211.508 338.505 211.508 cv
337.898 187.821 li
355.165 177.412 li
355.165 177.412 363.043 174.056 362.242 160.996 cv
cp
f
354.349 119.075 mo
364.463 123.268 364.26 129.246 364.26 129.246 cv
364.26 129.246 362.279 151.164 362.956 165.803 cv
363.238 171.922 330.444 172.389 335.335 156.064 cv
341.101 136.815 338.939 121.232 341.639 118.881 cv
344.338 116.531 351.733 117.991 354.349 119.075 cv
cp
.657221 .328313 0 0 cmyk
f
357.603 124.376 mo
357.074 126.43 354.383 127.512 351.593 126.793 cv
348.803 126.075 346.971 123.828 347.5 121.774 cv
348.029 119.72 350.719 118.638 353.509 119.357 cv
356.299 120.076 358.132 122.323 357.603 124.376 cv
cp
0 .286015 .250584 0 cmyk
f
351.778 119.617 mo
349.9 119.617 348.33 120.491 347.967 121.895 cv
347.506 123.687 349.187 125.674 351.714 126.326 cv
354.239 126.974 356.673 126.048 357.135 124.255 cv
357.351 123.415 357.1 122.497 356.426 121.671 cv
355.717 120.803 354.639 120.147 353.388 119.825 cv
352.841 119.684 352.297 119.617 351.778 119.617 cv
cp
353.3 127.496 mo
352.708 127.496 352.092 127.421 351.472 127.261 cv
348.43 126.478 346.437 123.962 347.031 121.654 cv
347.626 119.346 350.583 118.103 353.63 118.889 cv
355.079 119.262 356.337 120.033 357.175 121.06 cv
358.048 122.13 358.367 123.351 358.071 124.497 cv
357.597 126.335 355.623 127.496 353.3 127.496 cv
cp
0 0 0 0 cmyk
f
350.293 118.619 mo
350.293 118.619 350.381 119.025 350.207 122.23 cv
350.151 123.237 353.679 124.178 354.591 123.266 cv
355.503 122.354 355.138 121.406 355.357 117.977 cv
355.576 114.547 350.293 118.619 350.293 118.619 cv
cp
0 .286015 .250584 0 cmyk
f
355.357 117.977 mo
355.357 117.977 354.489 121.156 350.206 122.375 cv
350.271 119.486 li
355.357 117.977 li
cp
.0520027 .456916 .352453 0 cmyk
f
358.071 109.899 mo
359.147 114.062 356.644 118.309 352.482 119.385 cv
348.319 120.461 344.072 117.959 342.996 113.796 cv
341.919 109.633 344.421 105.386 348.584 104.31 cv
352.747 103.234 356.994 105.736 358.071 109.899 cv
cp
0 .286015 .250584 0 cmyk
f
352.321 112.133 mo
352.321 112.133 348.035 113.969 345.067 113.991 cv
342.098 114.011 342.752 111.526 342.752 111.526 cv
351.563 110.252 li
352.321 112.133 li
cp
.0520027 .456916 .352453 0 cmyk
f
344.182 112.617 mo
344.182 112.617 347.916 111.032 351.192 111.693 cv
351.961 111.848 352.675 112.26 353.171 112.87 cv
353.333 113.068 353.538 113.249 353.77 113.302 cv
354.351 113.434 355.301 111.024 356.431 110.969 cv
357.56 110.914 358.313 111.713 357.387 113.196 cv
356.461 114.677 356.775 116.336 357.201 116.575 cv
357.626 116.812 362.144 113.352 358.16 105.457 cv
354.174 97.5629 344.051 101.815 342.476 103.414 cv
342.476 103.414 340.818 104.86 339.469 103.574 cv
339.469 103.574 337.957 114.9 344.182 112.617 cv
cp
0 .912535 0 0 cmyk
f
358.586 145.26 mo
358.586 151.183 li
358.586 151.861 358.301 152.508 357.799 152.965 cv
345.632 164.058 li
347.015 166.172 li
363.083 154.519 li
363.833 153.975 364.316 153.138 364.413 152.217 cv
365.499 141.888 li
358.586 145.26 li
cp
0 .286015 .250584 0 cmyk
f
363.404 126.286 mo
363.404 126.286 367.095 131.836 368.47 146.448 cv
368.47 146.448 362.166 148.487 358.586 147.329 cv
355.008 146.171 363.404 126.286 363.404 126.286 cv
cp
.657221 .328313 0 0 cmyk
f
357.913 133.304 mo
357.913 133.304 356.467 141.037 356.385 144.672 cv
356.363 145.671 356.973 146.573 357.913 146.912 cv
357.913 133.304 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
354.756 171.759 mo
352.067 171.404 li
334.709 161.382 li
334.152 161.061 333.18 161.101 332.538 161.472 cv
320.237 168.571 li
318.611 168.357 li
318.611 169.975 li
318.613 169.975 li
318.602 170.189 318.723 170.394 318.986 170.545 cv
338.659 181.903 li
339.215 182.224 340.187 182.184 340.83 181.813 cv
354.225 174.081 li
354.586 173.873 354.767 173.604 354.756 173.352 cv
354.756 171.759 li
cp
.657221 .328313 0 0 cmyk
f
341.713 165.426 mo
340.48 164.714 li
326.922 164.714 li
320.237 168.571 li
318.611 168.357 li
318.611 169.975 li
318.613 169.975 li
318.602 170.189 318.723 170.394 318.986 170.545 cv
338.659 181.903 li
338.953 182.073 339.363 182.141 339.779 182.113 cv
341.713 165.426 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
319.333 168.452 mo
318.611 168.357 li
318.611 169.975 li
318.613 169.975 li
318.602 170.189 318.723 170.394 318.986 170.545 cv
319.333 170.745 li
319.333 168.452 li
cp
.657221 .328313 0 0 cmyk
f
338.857 181.995 mo
339.384 182.195 340.138 182.152 340.702 181.88 cv
340.702 179.126 li
338.857 179.126 li
338.857 181.995 li
cp
0 0 0 0 cmyk
f
338.659 180.286 mo
318.986 168.927 li
318.429 168.606 318.5 168.045 319.142 167.674 cv
332.538 159.943 li
333.18 159.572 334.152 159.532 334.709 159.853 cv
354.381 171.21 li
354.937 171.532 354.868 172.093 354.225 172.464 cv
340.83 180.196 li
340.187 180.567 339.215 180.607 338.659 180.286 cv
cp
f
338.326 178.564 mo
321.969 169.12 li
321.506 168.853 321.564 168.386 322.098 168.078 cv
329.276 164.041 li
329.81 163.733 330.619 163.699 331.082 163.966 cv
347.439 173.411 li
347.902 173.677 347.843 174.144 347.309 174.453 cv
340.131 178.489 li
339.597 178.797 338.789 178.831 338.326 178.564 cv
cp
.147219 .0154116 0 0 cmyk
f
333.299 159.57 mo
333.094 160.927 li
332.922 162.083 332.951 163.262 333.183 164.408 cv
333.426 165.604 li
333.562 166.279 334.096 166.802 334.773 166.925 cv
335.302 167.022 335.802 166.65 335.862 166.116 cv
336.186 163.213 li
336.186 163.213 336.928 164.187 337.287 164.187 cv
337.645 164.187 336.886 161.281 336.075 159.636 cv
335.264 157.992 333.299 159.57 333.299 159.57 cv
cp
0 .286015 .250584 0 cmyk
f
339.966 137.997 mo
337.856 142.175 li
337.357 143.162 337.063 144.242 336.992 145.346 cv
336.075 159.636 li
333.299 159.57 li
332.038 143.522 li
331.999 143.027 332.023 142.528 332.11 142.038 cv
333.55 133.901 li
339.966 137.997 li
cp
f
337.992 181.376 mo
336.343 179.223 li
318.997 169.18 li
318.44 168.858 317.99 167.995 317.991 167.253 cv
318.007 153.052 li
317.009 151.749 li
317.946 151.207 li
317.947 151.208 li
318.127 151.092 318.365 151.095 318.628 151.247 cv
338.286 162.629 li
338.841 162.952 339.292 163.814 339.291 164.556 cv
339.274 180.022 li
339.274 180.44 339.13 180.73 338.907 180.847 cv
337.992 181.376 li
cp
1 .866484 .240818 .0951247 cmyk
f
325.997 173.233 mo
324.764 172.519 li
317.999 160.769 li
318.007 153.052 li
317.009 151.749 li
317.946 151.207 li
317.947 151.208 li
318.127 151.092 318.365 151.095 318.628 151.247 cv
338.286 162.629 li
338.58 162.799 338.843 163.12 339.027 163.495 cv
325.997 173.233 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
317.452 152.328 mo
317.009 151.749 li
317.946 151.207 li
317.947 151.208 li
318.127 151.092 318.365 151.095 318.628 151.247 cv
318.973 151.448 li
317.452 152.328 li
cp
.657221 .328313 0 0 cmyk
f
338.464 162.755 mo
338.901 163.113 339.239 163.787 339.286 164.411 cv
337.365 165.52 li
336.444 163.921 li
338.464 162.755 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
337.349 163.171 mo
317.691 151.789 li
317.135 151.467 316.683 151.808 316.682 152.55 cv
316.666 168.016 li
316.665 168.758 317.115 169.62 317.672 169.943 cv
337.33 181.325 li
337.885 181.647 338.337 181.306 338.338 180.564 cv
338.355 165.098 li
338.356 164.356 337.906 163.494 337.349 163.171 cv
cp
.657221 .328313 0 0 cmyk
f
347.015 166.172 mo
346.7 166.825 li
346.337 167.577 345.767 168.208 345.057 168.646 cv
343.104 169.85 li
342.497 170.224 341.728 170.255 341.111 169.896 cv
341.044 169.856 li
340.424 169.467 340.368 168.576 340.878 168.051 cv
342.919 165.953 li
342.919 165.953 341.773 166.831 341.452 166.478 cv
341.216 166.218 342.563 164.953 343.597 164.911 cv
344.632 164.87 345.632 164.058 345.632 164.058 cv
347.015 166.172 li
cp
0 .286015 .250584 0 cmyk
f
341.841 118.851 mo
341.841 118.851 334.361 126.99 331.344 134.456 cv
331.344 134.456 333.901 139.065 340.163 140.873 cv
346.424 142.682 341.841 118.851 341.841 118.851 cv
cp
.657221 .328313 0 0 cmyk
f
338.754 140.391 mo
339.966 128.678 li
337.11 139.652 li
337.619 139.917 338.169 140.164 338.754 140.391 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
347.444 117.208 mo
345.434 116.656 li
345.434 116.656 346.394 118.165 347.794 118.55 cv
349.196 118.935 349.414 117.749 349.414 117.749 cv
347.444 117.208 li
cp
0 0 0 0 cmyk
f
316.578 344.828 mo
310.363 348.416 300.287 348.416 294.071 344.828 cv
287.856 341.24 287.856 335.422 294.071 331.834 cv
300.286 328.245 310.362 328.246 316.578 331.834 cv
322.793 335.422 322.793 341.241 316.578 344.828 cv
cp
329.805 324.198 mo
316.285 316.391 294.363 316.391 280.844 324.197 cv
267.323 332.003 267.323 344.66 280.844 352.465 cv
294.364 360.271 316.286 360.272 329.806 352.465 cv
343.326 344.66 343.326 332.003 329.805 324.198 cv
cp
.147219 .0154116 0 0 cmyk
f
275.736 319.572 mo
288.087 319.764 li
289.001 318.576 290.298 317.46 291.987 316.485 cv
298.778 312.564 309.457 312.261 316.856 315.571 cv
324.195 308.668 li
335.495 308.845 li
334.936 308.479 334.363 308.12 333.758 307.77 cv
318.054 298.703 292.594 298.703 276.89 307.769 cv
274.003 309.437 271.65 311.295 269.825 313.274 cv
275.736 319.572 li
cp
1 .866484 .240818 .0951247 cmyk
f
335.495 290.911 mo
335.495 308.845 li
324.195 308.668 li
324.195 290.734 li
335.495 290.911 li
cp
.657221 .328313 0 0 cmyk
f
316.856 297.636 mo
316.856 315.571 li
324.195 308.668 li
324.195 290.734 li
316.856 297.636 li
cp
1 .866484 .240818 .0951247 cmyk
f
288.087 301.83 mo
288.087 319.764 li
304.333 306.526 li
316.856 315.571 li
316.856 297.636 li
305.325 292.041 li
305.325 292.041 289.45 296.902 288.625 297.108 cv
287.8 297.314 288.087 301.83 288.087 301.83 cv
cp
f
275.736 301.638 mo
275.736 319.572 li
288.087 319.764 li
288.087 301.83 li
275.736 301.638 li
cp
f
269.825 295.339 mo
269.825 313.274 li
275.736 319.572 li
275.736 301.638 li
269.825 295.339 li
cp
.657221 .328313 0 0 cmyk
f
275.736 301.638 mo
288.087 301.83 li
289.001 300.641 290.298 299.526 291.987 298.55 cv
298.778 294.629 309.457 294.327 316.856 297.636 cv
324.195 290.734 li
335.495 290.911 li
334.936 290.545 334.363 290.185 333.758 289.835 cv
318.054 280.769 292.594 280.769 276.89 289.835 cv
274.003 291.502 271.65 293.362 269.825 295.339 cv
275.736 301.638 li
cp
.147219 .0154116 0 0 cmyk
f
320.576 299.842 mo
320.576 316.328 li
331.266 313.767 li
331.266 313.767 330.638 304.12 330.411 303.863 cv
330.183 303.605 320.576 299.842 320.576 299.842 cv
cp
.657221 .328313 0 0 cmyk
f
312.486 316.328 mo
312.486 334.263 li
313.64 335.494 li
321.177 331.148 li
321.177 331.148 320.009 317.457 319.871 317.182 cv
319.733 316.908 312.486 316.328 312.486 316.328 cv
cp
1 .866484 .240818 .0951247 cmyk
f
327.039 311.699 mo
320.576 317.777 li
325.96 322.036 325.323 328.041 318.663 331.886 cv
316.839 332.94 314.732 333.731 312.486 334.263 cv
319.166 341.379 li
313.247 346.946 li
320.762 346.078 327.932 343.965 333.759 340.602 cv
347.258 332.808 349.14 320.854 339.43 311.892 cv
327.039 311.699 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
313.247 329.012 mo
313.247 346.946 li
327.902 341.286 li
345.529 324.47 li
345.462 305.426 li
326.815 320.207 li
313.247 329.012 li
cp
f
327.039 293.764 mo
320.576 299.842 li
325.96 304.101 325.323 310.107 318.663 313.952 cv
316.839 315.005 314.732 315.797 312.486 316.328 cv
319.166 323.445 li
313.247 329.012 li
320.762 328.144 327.932 326.032 333.759 322.667 cv
347.258 314.873 349.14 302.919 339.43 293.957 cv
327.039 293.764 li
cp
.147219 .0154116 0 0 cmyk
f
313.199 341.286 mo
307.311 335.014 li
301.845 335.346 296.177 334.305 291.987 331.886 cv
287.66 329.388 285.878 325.978 286.635 322.727 cv
272.614 322.509 li
267.222 316.765 li
262.507 324.859 265.723 334.154 276.891 340.601 cv
285.097 345.339 295.968 347.596 306.718 347.382 cv
313.199 341.286 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
306.718 329.448 mo
306.718 347.382 li
265.124 324.332 li
265.124 306.389 li
271.197 308.845 li
306.718 329.448 li
cp
f
313.199 323.352 mo
313.199 341.286 li
306.718 347.382 li
306.718 329.448 li
313.199 323.352 li
cp
1 .866484 .240818 .0951247 cmyk
f
313.199 323.352 mo
307.311 317.079 li
301.845 317.411 296.177 316.37 291.987 313.952 cv
287.66 311.453 285.878 308.043 286.635 304.793 cv
272.614 304.575 li
267.222 298.83 li
262.507 306.924 265.723 316.219 276.891 322.667 cv
285.097 327.405 295.968 329.661 306.718 329.448 cv
313.199 323.352 li
cp
.657221 .328313 0 0 cmyk
f
337.495 80.4955 mo
338.564 78.681 li
338.564 78.681 339.457 79.1732 340.416 78.8715 cv
341.181 78.6302 341.844 77.9388 342.387 76.8158 cv
344.297 72.8558 347.825 72.5551 349.423 72.9496 cv
348.918 74.9955 li
349.171 73.972 li
348.927 74.9965 li
348.621 74.9261 345.886 74.4076 344.284 77.7299 cv
343.469 79.4164 342.367 80.4799 341.005 80.8929 cv
339.186 81.4437 337.663 80.5941 337.495 80.4955 cv
cp
f
304.011 132.381 mo
299.85 132.381 296.466 135.766 296.466 139.927 cv
296.466 144.088 299.85 147.473 304.011 147.473 cv
308.173 147.473 311.557 144.088 311.557 139.927 cv
311.557 135.766 308.173 132.381 304.011 132.381 cv
cp
304.011 149.578 mo
298.689 149.578 294.36 145.249 294.36 139.927 cv
294.36 134.605 298.689 130.276 304.011 130.276 cv
309.334 130.276 313.663 134.605 313.663 139.927 cv
313.663 145.249 309.334 149.578 304.011 149.578 cv
cp
.147219 .0154116 0 0 cmyk
f
247.379 271.334 mo
244.766 271.334 242.64 273.46 242.64 276.073 cv
242.64 278.685 244.766 280.811 247.379 280.811 cv
249.991 280.811 252.117 278.685 252.117 276.073 cv
252.117 273.46 249.991 271.334 247.379 271.334 cv
cp
247.379 282.916 mo
243.605 282.916 240.535 279.846 240.535 276.073 cv
240.535 272.299 243.605 269.229 247.379 269.229 cv
251.152 269.229 254.222 272.299 254.222 276.073 cv
254.222 279.846 251.152 282.916 247.379 282.916 cv
cp
.657221 .328313 0 0 cmyk
f
288.052 197.558 mo
290.839 203.228 li
296.509 200.44 li
293.72 194.77 li
288.052 197.558 li
cp
289.878 206.046 mo
285.233 196.597 li
294.681 191.952 li
299.327 201.401 li
289.878 206.046 li
cp
f
524.794 106.867 mo
520.451 109.002 li
518.315 104.659 li
522.659 102.523 li
524.794 106.867 li
cp
f
432.685 55.6156 mo
431.197 54.1273 li
438.27 47.0541 li
439.758 48.5424 li
432.685 55.6156 li
cp
.147219 .0154116 0 0 cmyk
f
438.27 55.6156 mo
431.197 48.5424 li
432.685 47.0541 li
439.758 54.1273 li
438.27 55.6156 li
cp
f
510.772 54.8715 mo
510.772 57.6146 508.548 59.8392 505.804 59.8392 cv
503.061 59.8392 500.837 57.6146 500.837 54.8715 cv
500.837 52.1283 503.061 49.9047 505.804 49.9047 cv
508.548 49.9047 510.772 52.1283 510.772 54.8715 cv
cp
f
377.067 333.147 mo
377.067 334.742 375.774 336.035 374.179 336.035 cv
372.585 336.035 371.292 334.742 371.292 333.147 cv
371.292 331.553 372.585 330.26 374.179 330.26 cv
375.774 330.26 377.067 331.553 377.067 333.147 cv
cp
f
493.956 332.806 mo
493.956 336.076 491.305 338.726 488.036 338.726 cv
484.766 338.726 482.116 336.076 482.116 332.806 cv
482.116 329.536 484.766 326.886 488.036 326.886 cv
491.305 326.886 493.956 329.536 493.956 332.806 cv
cp
f
281.438 220.181 mo
260.3 207.977 li
259.881 207.736 259.503 207.726 259.207 207.889 cv
259.208 207.875 li
257.158 209.06 li
257.158 209.06 258.065 209.391 258.598 209.587 cv
258.598 224.981 li
258.598 226.234 259.36 227.689 260.3 228.231 cv
280.505 239.896 li
280.505 241.703 li
282.576 240.509 li
282.564 240.505 li
282.915 240.292 283.139 239.824 283.139 239.15 cv
283.139 223.431 li
283.139 222.179 282.378 220.724 281.438 220.181 cv
cp
.139773 1 .00201419 0 cmyk
f
279.35 241.639 mo
258.212 229.434 li
257.272 228.892 256.51 227.437 256.51 226.185 cv
256.51 210.466 li
256.51 209.214 257.272 208.638 258.212 209.181 cv
279.35 221.385 li
280.29 221.927 281.052 223.382 281.052 224.635 cv
281.052 240.353 li
281.052 241.606 280.29 242.181 279.35 241.639 cv
cp
0 .912535 0 0 cmyk
f
265.32 224.018 mo
265.32 224.927 264.681 225.296 263.893 224.841 cv
263.106 224.386 262.468 223.281 262.468 222.37 cv
262.468 221.461 263.106 221.092 263.893 221.547 cv
264.681 222.002 265.32 223.108 265.32 224.018 cv
cp
0 0 0 0 cmyk
f
269.641 226.512 mo
269.641 227.422 269.003 227.79 268.215 227.336 cv
267.427 226.881 266.788 225.775 266.788 224.866 cv
266.788 223.956 267.427 223.587 268.215 224.042 cv
269.003 224.496 269.641 225.603 269.641 226.512 cv
cp
f
273.962 229.007 mo
273.962 229.916 273.323 230.286 272.536 229.83 cv
271.748 229.375 271.109 228.27 271.109 227.36 cv
271.109 226.451 271.748 226.082 272.536 226.536 cv
273.323 226.992 273.962 228.097 273.962 229.007 cv
cp
f
484.167 75.7777 mo
463.028 63.5736 li
462.61 63.3314 462.231 63.3226 461.935 63.4857 cv
461.937 63.472 li
459.886 64.6566 li
459.886 64.6566 460.794 64.9877 461.327 65.183 cv
461.327 80.5775 li
461.327 81.8295 462.088 83.2845 463.028 83.8275 cv
483.233 95.4926 li
483.233 97.2982 li
485.304 96.1058 li
485.293 96.1019 li
485.643 95.8881 485.868 95.4193 485.868 94.7455 cv
485.868 79.0277 li
485.868 77.7748 485.106 76.3197 484.167 75.7777 cv
cp
.657221 .328313 0 0 cmyk
f
482.079 97.2347 mo
460.94 85.0306 li
460 84.4886 459.239 83.0336 459.239 81.7806 cv
459.239 66.0629 li
459.239 64.8099 460 64.2347 460.94 64.7767 cv
482.079 76.9818 li
483.018 77.5238 483.78 78.9789 483.78 80.2308 cv
483.78 95.9496 li
483.78 97.2015 483.018 97.7777 482.079 97.2347 cv
cp
.147219 .0154116 0 0 cmyk
f
468.048 79.6136 mo
468.048 80.5238 467.41 80.892 466.623 80.4379 cv
465.834 79.9828 465.196 78.8763 465.196 77.9672 cv
465.196 77.058 465.834 76.6888 466.623 77.1439 cv
467.41 77.598 468.048 78.7045 468.048 79.6136 cv
cp
0 0 0 0 cmyk
f
472.37 82.1088 mo
472.37 83.0179 471.731 83.3871 470.943 82.932 cv
470.156 82.4769 469.517 81.3715 469.517 80.4613 cv
469.517 79.5521 470.156 79.184 470.943 79.6381 cv
471.731 80.0931 472.37 81.1996 472.37 82.1088 cv
cp
f
476.69 84.6029 mo
476.69 85.5131 476.052 85.8812 475.264 85.4271 cv
474.476 84.972 473.837 83.8656 473.837 82.9564 cv
473.837 82.0472 474.476 81.6781 475.264 82.1332 cv
476.052 82.5873 476.69 83.6937 476.69 84.6029 cv
cp
f
482.299 340.082 mo
494.709 332.917 li
507.12 340.082 li
494.709 347.247 li
482.299 340.082 li
cp
.147219 .0154116 0 0 cmyk
f
508.642 324.669 mo
521.052 317.504 li
533.463 324.669 li
521.052 331.834 li
508.642 324.669 li
cp
f
534.906 309.624 mo
547.316 302.459 li
559.727 309.624 li
547.316 316.789 li
534.906 309.624 li
cp
f
521.052 324.669 mo
521.052 286.455 li
508.642 279.29 li
508.642 317.504 li
521.052 324.669 li
cp
.172946 .892424 1 .0698253 cmyk
f
521.052 286.455 mo
533.463 279.29 li
533.463 317.504 li
521.052 324.669 li
521.052 286.455 li
cp
.139773 1 .00201419 0 cmyk
f
521.052 324.669 mo
521.052 286.455 li
508.642 279.29 li
508.642 317.504 li
521.052 324.669 li
cp
0 .912535 0 0 cmyk
f
494.709 340.082 mo
494.709 318.586 li
482.299 311.421 li
482.299 332.917 li
494.709 340.082 li
cp
f
494.709 318.586 mo
507.12 311.421 li
507.12 332.917 li
494.709 340.082 li
494.709 318.586 li
cp
.139773 1 .00201419 0 cmyk
f
482.299 311.421 mo
494.709 304.256 li
507.12 311.421 li
494.709 318.586 li
482.299 311.421 li
cp
0 .912535 0 0 cmyk
f
547.316 309.624 mo
547.316 257.079 li
534.906 249.914 li
534.906 302.459 li
547.316 309.624 li
cp
f
547.316 257.079 mo
559.726 249.914 li
559.726 302.459 li
547.316 309.624 li
547.316 257.079 li
cp
.139773 1 .00201419 0 cmyk
f
534.906 249.914 mo
547.316 242.749 li
559.726 249.914 li
547.316 257.079 li
534.906 249.914 li
cp
0 .912535 0 0 cmyk
f
508.642 279.29 mo
521.052 272.125 li
533.463 279.29 li
521.052 286.455 li
508.642 279.29 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (cartoon_banners_1_10.eps)
%%CreationDate: 12/19/2018 11:21 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X+_e+!81>Z^oWEtT*`E7>8k+B]JR"TkJ9,&@8i`cbU-mbAnUhu:pFmRf!2O`K4=fF'=[C3O95\oq.J97F5!W7Dl"Ie,e)
%"^B@^/%Y+-"]\V4po6FLNPCdFT%=J3:4LN_laeuS[u7+q)gG(t;!/)RlC_;E?,hllI_/a>4.T9UhJ@C:$`+qBUTb]._3q7k0!<fq
%rtPBW<4RNp]M7uWXOZ@8ftNEV"fnTK62d0'Ias"MTE4u9O)Hp+oj0N4L[4!cjs?Pdcl)_JIN6A`/q=GFWX)I9pYE7dc"]Nng4jBY
%.X\L;=*4uKU;/MYi[Us:g4eW!+/-\EgU'/uL'F7SI$u-o>@jERr[[dBdlm':gU%g1LN+hZ8)7@T!H8#E:mU'N+c&ph?G4Mn.AXB0
%C\M-9Rs7c^CZ1Bc?"F`b\eq+$L&Fo?jFAX/.fQ9p#/B,@Xe6I=f$F>EJ:2+4Ju'.i'2E?@!d1.<4L.XGd]g*JXimYkdCBm&i0?h&
%AZHkpA)\t<;2h6clC!Z2<9W<b#K=Zt,'9OCkX@q<.ZS!S<P$K&N1t+96-XD-DL,U2On&0Lr6K-:GoTiE2J5.Uh*%k<(Dt@oJ..=P
%%j1H/EVib2ecd<V3p*a,h/-3Q3o_c?H!$,hf4:&n40NW<[EmhbLfC_;_pMaA3(YbVHC$_@O1=!X%D'T,XgiB#Hqf,p\l7)mNQJ%u
%1j-beBLU`,W4$RZ>gjD2TGm='a]p$9^uhjUd1&\B4p]8:]674jXKFOu4-laaq:TH5Wi>dG>/=WcKM^'Yra#'?i<CcR]5^1\U2%`F
%h6\Is.IJ8J5*!p8QR@ckL/cZm!pC^2Jb!<$-]#>GEe^^\0MMKqpcl>8gBtT8*T&FVhd%&U9-nRWfC;eknZ8nR=^>ZQ_iQK`QWY))
%ZRl#c=]iqSYaT-WTkMquZ&\-Z*T1Cn/pCU&k.4Y(^Yq7T/![>BWJ$V(8pI44_E)+]B>`*%kjgFG$=V".@R)`2)+:Q%Fqu_GkB.dt
%`t,8+Gi:_b6bEQ1ll74'moTgW_KWk&OFphtGi:a`6DX)kRps<F9d<R2::T=#4H+MnYDf=e!j%-TiB,Ts6Tc\bM1B6'B!c*E_KU/P
%_k&$e^h;$!rX!g(<2'_H@5Yt8hm"UgO:62RNXm+Y_.ne$(hlGXFtr!4n+[8&A:/pr*-aT!moU$=`-4,,N*R9?)$JTihus0gE0;&!
%"sTg*<b'&]ZshTC":05V)XEg!/V]6b&ML5<#RVVA"R0r]3BN3[i]C1N]T+s,]!.+_*U=i"E4OnI+\@W?X:N>8Jt3(o#ehPA)9X_2
%&4.S\Q;O9ja(WeFB#GqP`P;cW)#.3-oZrt=%C#Hj`IVZRauGlM4X1MR,,?#bj])*02/p*fhGhc'Yu3SiS1\=pj[?[BjX)/Hl"CH.
%Vk\es$$+JU.7jZP!bB\7CRAD-WX?H/PH.<@^GLq@8jD"P0\GjdPJ,mpdq"6^:\M)2p,i4`0?7M9*@L+-i@iMeVp\B7npU3nrF@Rk
%4:'T5oTQu2AbJ4aA1o6SEBT@mM!o/-fl-D=I3O]?;)1i&nSKa95Jt9Wk]1%j-h;Zim(tGQi>48I_%'_D$2B0h>h8ce5c1^>Zn$.l
%K\jXY!4#%<HdG1[bC,?g^l'u;YffOg>k6@8L,GHoHl+79J`[W5"p<QZZ?gC*B\FSS`rKK;i)1LIL$f&>`4fYIWm2Q(`9$#m?4I&N
%Rj!Tn&.E+hJHQ=fkEqhI4Xr`73X.H=,1I/f'Fe@X^iE*XW^'Q+IljN;68a6LiI!3\*^J4\ljYQpN#AdqVhI%!;d=l81^dTfa?3sP
%0B996PL'R?hZQo#hADG9%fsZCS5E[[$lfH,%iK+7)b@qYQP7Zo^6K*:!Qgd`j,Rfi<3TH9C`7tg8K-+efd-]SP$]u+)L_Yl+QN70
%5H9@cTO.olh;`q:-6!!$cP,5FPElPMHI0EXeA.iNRqNbgY$D5Gi4B/jU$"hlW-ZO2UJHW5!AHJimd'p_D^+uY_)?<uN#oV4RmW%`
%6qbRh:7>ipJ5@O4Gl_V&L<EI+7UST]jO,oUFJ=PP;a0:/PCSL32?O/YNeY`pj'dHFfr*!^!eTB"*b,o5UPf8p-KBT8T@#5Y(,%WC
%1%Z$ad+%S)P5mLGd$Q.f9F$U3KAs45lH9i8EJO`+%O2m%1F(ssPP-#O.?M-X4orjnGsN[1p$NH[r)/SQeR9/",&EL_`I\1a0!ML6
%7`n(R5TaUd2S7TfhW(hce0"7Y@'LDj5$6klGU4/WVC%uA$#n0/Gd2db?-WF>A]+R=aU8tJR;*RZJc``>][2LjRSQJEMj8g%Ot<A9
%@KS*#KT<,96g9\Ck]RgO0s0Ws.F#]$e0C('1%8'dW>6+\iB*\F5g9;o\X_&1l5b+?6*;if:uOrlC,4MG:n<1BaKEmc%O9<PL+-N3
%C_E?`\;H!R5U@5_`IHfoL],5qfMUp>i.ge4moY.V`nr,"N(2</gkbIY\DTT2Hc`#u4YbgakTeD.p])V7%*:oY85#`l=;'QUe68<Y
%J:l]AU,3DjdErrRms*Dn^("$G+>l4(/di8-%n?c-B6Z5JR@k1D?"@0b[%qjk_55<m57k"YL9>3c3fpTL17[ZdiXWjC,o]\M3:1hk
%SIlB@^_(316\OR4c:'uYY(Qod&9/QM169dl[a&C*KBWWNS;&;"MH<VY'1.;99f?h)q?XXM`]<OKM(PJW7L2<^&-^01!)*)$/53eu
%-?8s(\<'c>G&\?6YTj'fG4@q/;atg]ACPQlAgT:UdP6C`$CbKk:d]K^SB.K]OV<Om]#&.'#"qjQ(>!?d5>rG[0U"h#F4nQ6JW3pR
%_EoM@jkie_Qn[SHEIp%bY;%;!b;7hpdQ>kJ":Op@8t_T#eXa(I;J,^`5N>&U'm`&$_ori<*ol0^9KAuF/YF;Z8&^,dnIt_T'U?l@
%6dDDOY&8PleDZalQ\]'<UF^l1(qZ4=`PjS&Ud8Tn7OS-]Rslc=T;.Jo,qY</19)j`Pd"4qqADoGKRQKV=lX$3=RYT,,G.Q]9INY*
%B4OhNM:ecZATl9P#ksQHJHIJ8?<?1IS)W=$F+V<kQZI<51+>lre))EtoGa5,REW!WQN5Q@"r*g7C-Y]"%bES)SRG]fR]nd5nK?1[
%B.%5^O\(lX$KLB)!bfj_-J(0BT0P4:i-:25F.&\cHjg!7?NPXLNsdM6/)d7uSg+#GQm;l<;C@#'/(PMi,t4BT?P#"B>Zfns%K0F^
%\`Uc\,NdO])=!cVb"Yun=9e;N.Lmm>iEJ9HBp(OM6Ab9TW(M\4$FGcj1I'JC$!g6m!<\o&#THF>ktpE'Fi,qBTA0N@oF39FAg5,Y
%=Ve@lc-%7q#9?,6RmUU?pAcm:_^@0tb?ZuXiD0mD0XE$,MG]"!>_ZBPb8CL'BadL(4ISu%0@Pgt%n9glZ\.)^8C!VZaqtk?B<GAm
%roE*4MOIsjR-5<+)CJC?Q\:"8,,FE7knjLVk90"`-`96HVU8%!/>dJBZ::',MI`J3<3h<l\M?oh/*pWPn2S:=NGC00H,a-!b_9b+
%=W!W`hM@-]-RE*O=&t"YpEe-=1Z@jZs,7#Y7_h\Wq9NN'"l:[Kkhd\7i#o]HQd&7["7hLGe8,'E;a:G_g)76;JJ<b^VXbV`Lj6iQ
%N"bur',<m.kthgFRjM8t7g,]fDp[s)?Q-\L%T;)@dA('GmiGOD;BA9gG/+Ih0tBg!(mG=U-rq+BkR:E9,1Ec@Sf%e7.?1r!,l83$
%O&?io;5PO.IYVaD.<>QG;4E5DVjJGgPPKDR^>f(S-N,tR\tj21X<X,-c')7r:dUM*R1LVt))+I:`BAV(R?K#<eHo*BW,=paSd8eq
%$(h6X6<WBNOu/oUOrrIYonb3agdG*f74j`)diul-L`n3=#=ATJZ!cb5!pW@_d0ZLCQ3:=lPZ5Hh-KG,!'F%HeJLbJ&9*-^H]'seS
%7HQ@k`abEV7nugo-aZ>^a;kn0QuO=el]tYmX;!Ekh\SG]pa(VZ:kkAJVQdV.'nd_cKrL8d^M1V,%ZNjRm\DNrGe"q8951[/N<hU/
%MPO+aVS>,QKj'o;Nf)1p8hfM%gD"8Y''eE50l%:9M/6Te$suA>dsYhPR%b9Y0#q71JWh@`4Nqg_i.CC@X!af9#cdCb>[`b3-,[+b
%R5,>68!8N3qu9fZO+d[mP``n>/4rZO_/'QHk,)C7r\b;e[?,3n5nn8@,uDGe,<PVPJ"AOGQjt&h$;Akb>nY_.=Xkg+"#7%"kfi];
%*LsFQP+J,8K;$I(0NFG"(/j:[%\X_QTa3cdRO>.m)#:[?MJ[EW!8j1DJe0mZ!<FU5OLssZmj?XnPaRZPeDm"<1n5-\9JWHmA`Q,b
%@YLLknG^U+QrP_m_?2O:(a1aKF2@U.73\&M4qS"i1eF-HQH`q5P9iKHD_u!</0qfk-!f\JBhjVG"rqdgg[WY6%^]'TfI4\!%Wf_%
%8k:Cm,\":(a6i7bdP3a/0dJ?/3hJ,=-Q*m_@-Gf;6C5NE^5[&H[LW<iqfDp97k:L"p0mA<!j./CBJkRCk![?bKYYG)#kc]fB<J%Q
%?0m.EE0>>uU,4tY57%>b(aLeIrfQO9X2=tH3IMW.@g\;kB)0,nSAIF$6"lDhnK^@_a^njP6oZ^"M.@<E7PpoX-k\[TG)1ZkOJk2f
%DVlfCYM8.#C)5,3_5O+tA"SA9(^Hl27$ulT_E\I80ptRHa!<@3Du`-l"tfYl#KWhX$JIjlIMcq.s)*obM9_(LBfW#8_Ln=cOZ,i,
%6&OfYWat/lGED&(A5UUhIk;]</>imTA>IDQXSg0?AO_i<!g^k!4j.:InB<2BE]4<6A]#TU9&r\nrSkPM(&%5XI81t5#N"KkP)nQE
%JZq]tKqsb6D#DC?""TOKE(fH/\D]nk'\E"4Uo-$-@9,2k$sapWKfI:-en)@D#oFB(_9YF6=mlHJ=mq<#=;".m*%Y_SdSG^f(lpO_
%5(l#%pAp!lq6SO97*W^kLQi<+P/>H!^qn?ej)/X#D.aRXU:6iQ`=NGJBU@cn)[qD4#ML"V2\(h@",F[\^)X>9ikhr%.t=:N1/%T,
%*CBSD.Z==nai^i7N8m/C9h9gs5=?W[oCMndSsMuM%`],7m<o$:4anJ2bEr,2H<rb\oFg#E*l3!p30.Ip'6Q$#-?+d6-[Hm68N48F
%S&g!e"CWb?/e[i^<,PZTqBu;HC0onq?(Ci7VM=NJS+Yn]5F_YFF,+bEf=Je1][DAk(JVE4f"gOJ2u\->c8irBocBXYBK(:?c,OJh
%`a?nq[<WB$G&!#H^eP[/m(L:,7pT+YlDDl+D<ms7WUR+-59)W?hh#>bI+gJ9!7u$fj!^J??ArX$HP:]h]SO1bo3^dP2=XVY^Q'i#
%B"Rco\6@NHq$K?bDb]XiAcLC!*]'Ks"4!ASShI;]L<WMml%K?@2W;.p!/7kFrpg%*et]Yj'tBQYMU+E:#Os5S,&Q6_=@<?(_IY5H
%Co3)G(`WkWZioKM!c+jlp`A%V/aT)eRg4KBHIRc)d\-Ses*qr*5[7M8j94B@2?JV@)+>U@^S,9C,jrCk"`rJeZs],5hZj9n@Kl!q
%Y-+MeH,6])NG@Y.WMA266D=g9R\DtY?jAr+4lqjK+."A"HED7V8tq`M4$d8M$uTca>*K/#eeEKXfdKCCTea^Q)A>oFKiH'j<K5No
%*"@A@<04mm]3D>cj22t0DOcUg92WB/4)7?go3/!K[sO\;_GRXBrseVO,_ct+Vb;?Ri&X5aM^fR,F"I;EQ'A@.%?q8SJW%n;A>X8"
%DX94t=8bT^2*FrYQG?$_a*\:R?G"A\qR<2^>kNGhO..%litA:F8?'E/)Pct/KfH+T#utqtUu:IGc!Wi4_[mH,aUi3HA'B?&>Ndc#
%+UP:B0!?Le>YGOeC(5QZ&]Sj-S\oq$E85VO-PNQo%eOJ;;$EC.p1iEN3GE5o*/:]oS.s2S(m8Lng=b$j[*sa?;[CTWn?6F'H"H*W
%?WP!]aStj%40$lI4^S@hCkXO!"P$sKf<eN*[eUP-P95F>YlP9f_DRPPDi"(MXHKCp<5S\IIWL,FV4\Y&lA`PBh"^4*NPCu=AuV<I
%<Ep:-h7:+45f),_()5MG>hAXRh^uA>PVSKM;`keP`a]t*1Hc,'c"<[-Jd*V_q(_B]:dSN?U-d7Th)D!o^.!8F*8e`8^@.EP-<]Pf
%-)ID(d@f]"N"X'%-*(QDECp361lJQ1<5o4M:t.`<oY:`+.M`^[Du`ijJ0rrQM#_"c)h1!sI&SE.9.oWtnb@H7Hn+A2?j0^B#T>6;
%rJ)@J;:N=SnY-]P#)D$o`P1jY@":3rKSLs^;Z&e%cEJfT%*Jtl'oE2a-[Z[*"0Ca)Q47>7_J!@/Wd9OA_H7"mV@V_Q_Dp:(hBn2p
%%U>[<$DlAW+HPu9NpAZbm9"T``mGe4ruKWeCn/]a!',J^K+Q]:T!W;I\.h;BeQ/cu.K`9hb6R`[/]Y.Kb;(Ze!Wf].9//f?%&fNF
%F@0Fra0\Ra1ekjjARqef`54t]#ZLl&nUN23!ua*L___c(K\K<471]&H&@/,/^l#93AU_D,S<S]j=t(nL;S8g8;K7j$A"qYh=@k62
%@O+B<9);GLU86nj?YYsmE`,dn.4)s"MO,"nMng,3#88:8Uia5b%Y=6qO>d:DL,onK4&SDA*7?kkA/\u]*sE@4)V%++0#N4)@8Lk>
%<<g=,FWqk.#.t+%L6pj,H-[jE7*\1a[>B*iO--&W+uQ*gi9Co=$SEh%69/NGKsHK^#V8k/BmKj'4:[AYH9acE!*TDATEc`k52g8k
%QB(o%iN30NWPFCM)OrQR-Up*!JVaM+>RbBMda;I_`5W6VdH9I_1CIppnX]1RitCDj`^,D'j"01F]^`rGh>k:p6pu6M,>1)UD(*2t
%@"&Ns;s4:G!K]2BmP]#!)(+g'rr]TD.3K9B8;@Ll@Y;%4+?'<2L_\VN+H!-He$a/l"fLko!Xj$M6=g1<(ck%j@T\9/TX-mqC#KpE
%<4IKX(-KK=1n[RoRRaJG9@O`cUZ5MrC'E)h>`Ahd-<m1*V*J792Sqp&ET8_!,:0]-?m12G0G;QZpJiN?5SaCBMUhccYQo&T'4A2h
%1,.Iu9#tiP/'LoTgeqN7M3fd!(`(`r2Wll@#;1+QQ9h"%>U-Xa$ebV62VsW"/QsJ1MYbd'HD&gt!*KQ*VE$-QZ:(//+FR@H&Tr'[
%Y,-_hQ=/di17L>-:B7!U%@e-,K17AB0!g+m<8]AN#/UEnU6$_+<<JUJ"QV_b;+sD[7_D"Xs5qq:[O<[>O:N$uW`hs(OEq5D0bZ%6
%6mb#r1d]aF>hpY4#>D!\k#@NZ%p(n;RH>WeIXH%_Kb@#.&1Sk;kNX>X815``;G&*F8"l;BZsJso*b&N?2*MNZ`Z,j9R+WbJ8#O3T
%&*bWdNYG)uP:e1$cbO$"ieo-"1Y*d\/^-(.fYV/TUWq#k0\jlo$ffLU[uRQS.*R3o+qR56R;lZVR4/rlS=+G,d$[HA7\,ri@G&CV
%5i\H'G@ocQ/fkpUB&\N,B4bHeH=lGrZ'WZtLkif@^+fE-ljL]AVOs*U%:21UCX?AgRZ:Tj-sGX.6,sb?<gT%dM:=%SXr:AqW*13>
%L-DS;<3-G+6X<Th/ud;4\3U-sLamV>blO_F36YRc.[-W$DDG.F+]jEV*#"YmkLc%?@o@IgF,3Dm3TQe.Ot3%`_QjOX0JXH3S3sM[
%5\@5X@-SadqOiU03!+%)6?!E6]Y+^`K*_Ws@nZkrR5MMd1FPZsN0\>?[MLPmc=@lB'K$=('0!^'>Y!33MbSh#cjHXJ0[1dM\V8;d
%[MR!!er&?N3,fV@CLIrJ<Ai0UASD_H^_bN%"c>Cp\Eo,S0O2--/SJ`nKjt`H^Y0<Q#HXXg+9SMk3]4\l6QB+k^]L;g%DM&/V:Z9O
%<J3#%?%V6@>=*T4+H9\rFSb/F<`f=G&M#]j(U5`<9$3AI;W\lR(!;c=cW$bUo<>.u$cY=\nd3Cj5ek8]lYVe?Q"(n8U)mHY=ab%\
%3)O7mW!=%`.7mEu+J#0=:c2FP&2DHr2<^1fZYAk.e5;n4coEJ]a-7XF4f8"Ag9\k5`##@O;LG/6Y]09%.R9[/R1_nFBL<RO.70m=
%F\mcA-q$sgCauM#)6nEWNduB0,=O^=dZL;o9O%ZO.Qj:7I^eg_qdZ&Bk_OtN6[l_nrHhClPcC-#H=,'SPfsM=beB<(--70`/:cWM
%"lRdX2Y%rKqti,KTUL"p#LK;`JBj^RoV`gE6]7DC41mh:MK""ipEq3lL&7&p5&'@p8o@BBGEl!]E7[Rh2;F`G^E&_CEb!1=6'EY+
%/_p(jDo!QW=U4D`9-T]kk1c0BO7p\^G"EkuMC`QrQY9QZ`Hc^2V@F-_@[05_;.b4tWH_Zk*UWp\,fQjhprIRLUkiENU+"0&OGh$a
%Mi)>ZGV,#7hcIIA_N=gWbO$h*j<?SPpNZ2500]%E<DXQf!a[/i4(OooA5rj@a&jB?"?<8(^]k5UZ5H-b.VLT$k$iQ\)Q40$[^JG2
%3l$b%*a<EQ3ml?n2:4UlG8YcH(fcHs%CTm^G632OYXu[("3;[%LI]5r=VE1H'FS,C7#eHnJ=K-WYem/DP6r7:@Xl\Z(_rC"j-.]d
%QkuK\Cg_7NRnoY=Q69mN_*C!e&&P]Xi#sQ'5V^?V1kl]cI$(-\nr&37/::r78j"NW6Y8Nf+VDlYT!H[2PEO0uE0YurZc*Ra%Z.s@
%^#r9[]T<d[9ff1dB.t#^_;JmfcTM/r8O.(P1^F.bjD1Zm#G-20_1\$8*MdBS.H-@8V[ZOp-;QUW7"Hj7NtZ$>'4?Hi68f-r?W&jX
%%,4ZXR&>X(ft0gJQk_V9*(]=&8eA>GU?s4/X<oB+-kMeF2G5MhVO2eN)H(C^5`;&fAS6#iPB[PX;[14V[VnM*@"?Y6Ggap7<$-09
%aq2.ge=K,Y4`j[T9'*;lT$NRCjRe+iX@$V+?NrM_(8qq&XG]U:<!e9[d18gbi*M<)8K$TN=lc/7jJ[Y$8CCJ3+Y0<TB.Du3+:(#/
%a++=#M@aXO^t725;SqBEPA3uDq5<fI)$)K@U:)IV[E3#8KuI"lM.0PX*2Ej@+VgkO*6ZcV6>A5`aLA#jl#jOF@PV1\jL?b"*1(<#
%9[pS'1_QPib(6$ZAu3Ghjmo"?)uV%K-<O=fAlb;q9QYk7E[G+ZMU>MLJRYkc/R!R6^]O7sPk0,4h;mgAPpaiZShbMdA3!;HX#rZh
%8?$Tp(<6gu3'H%s;og*iUboS+-,=ZF"V]RceG0`f,RSoa6YY?C$BqQRE4[)2qM6(Sm$<^$$%A8RjX'>\bpatp8kDd7LI37.9(PYm
%i`K@]erZ$(;WL"BT.#,*;^ogFH'/hO-Q+9faZA\aNXPIX'pa=Nkm4ho@>_>.ZV`p489oTe)2$YUYa<Ii_$^Q5QT&nc7nnjbMA]#4
%WrRd'!lK9C0=*L2N4$-bo;#S0iGX/s>+AcSAcBs^1]Dj__gri+)gC;mS]u*1obVU0cU_s:V-8`3bY*$k=C$[r3XQ5+OiR%[BpLnQ
%1@#FrVmBX>cEn;;;b>=AhFj:nGIYpR\^&X6:F$1+fR0,$pTch2dB_4CS,QJL>G/t+DZEIWbp:m3ggZ[haESgh6:Sm&n'ks9aGoYt
%gWX[cpR]/iB-fq#hNi(tUOOoE/SU@O]+?WEInB,hH&fYEr.YupCn]qLUnWl$9"*)@mke#ndZro>BfW2XUuKSZ`a?i3&N@<(`KAT@
%BefE(TemKV),+^@8^jA21,PO7OsWLa!Ye3L&t]M,GD\d9fR9@:F=;]3)."^P:I?V3_JXJD]k\^r?g([el`QUG.OaR8-<2D,IW(,N
%Nt9Jhr-\;L/bXl)d,I=S0Mn:%73prj!\K;uk!0e3Dj$X3J[Q'de&V>@Nsfi;:93;c1#%M(Z96Zo\/=42:ZCFlSY&YX9%3RVcXI6E
%8Ba`KGfJ(Fj+^+*j(oq!kCE=fjldt*apU5W`8_'bErq[Ci(/uCs(u$:]38[G0chFHg$jp]&%+A_;3*0g@"B*jO'*]b4et%>"lrLk
%c'(oUnt`6hIWCW#/a4:91hjp7@%9cS9WJhNIDee)9_'t69e7(FM$\T*1?"-ep&_4%2F't.8uHuhS9`f41l^6'K<e#lO(@kH?S%\"
%q'7<?J]K8d=f!sYA5HS]P?Afl=2M+*%[4Pga=@!"AHl$r8X&^9fi\i6o,\MccZM<#Ip'/R^M6UPY?!nY?L`n[CpAB\!\NQ:)b_m+
%*$FA;QJ^%uT.6]5;j3(s[clD]F'L9"ggA9!ahDSj3)Tc?StoB*r@:)]@Lf9&dp<f8l6KH5E"eqA)/Hh0,dPuJmo3i"e%E)\jK1l%
%>0^6.Cc,e(Du>mUM+[5*Gs!GpA/7A-"*^KXI40(OMXEddpe.'t2)pq<?oHWX\Qm6M/m=?eGDst<>[eb@R)S19r>[_FMp:*fF16,N
%(=([O=^,^fQ8:L%90ma:)+95@cssb*ck\Oa,][m^'co,99f;H4?b-Qni_usEV8s=5I\do?43@c.9XC^7=,5bnF0*1F\I-Vk!r('<
%a!fUZ*5[JL\OG+LS:\^@PCWJZQ4P*be=#X^DUg`2bgK_uZ.![W%=V/j_o+$^Qia/>@%?bL@?+AVa$Q5toc'?gid<?PGL+l]mhO?(
%+jJVBbgBeAd9k,Fs7:g,mq?\q7t36`IkaHC^?=]5(A09qoe%$Q/f+-*kFu:f0SmHjarnOj@W;r`C4iR>.'2K*L!<*#1URkYkLUNL
%Al/Y/pD[-_M3\u@5I:(+^ru@W>en;tq0=An]r7qBec-O)U6V^sh#Q=#NOuG]LqE=KgqANU(NK0nmU!ifMn"*GG;%tD7GPS4],,J]
%,4;$>G@.D\q+pDInM@GIXV\gZWkTCUMH6SjYo;>7N``!k^5/%-R<NmD`0U"l##JXU>8BkY#8[&+X.*h,&1]Jrkn7?3,fKiBFEqf)
%d<*L(8/CoNi!J"%R'#q0nMI%1]+-bXrfpRUUL$:uc(M&B(/:`ME=FaHL&Qm#>0rokRcoB5KT?JC9X-]TJM]3A-N1LiSPqYBXIi"<
%d%a0h+\b=7;\3f[UfFLjf-q'I<V.>,/I]JBki=.t#TOjQPp1.(OV8_Fhp1+J&]`NW=#qSXnYBsj'/UN5kYYUJdr#3QHCq\*-NC0'
%Buo;C,Q6X#6AtEBa`6Qk:V'_U^W&>j869gOqe$d]6]9f&qH&<:U-OWqQd]DVMB`j;.Tm5n"U#TE'FBiM8!GA*-5-q:2#'g"gkAHi
%giP36n`I0r(Zfs*Qq`q/)Tf9iPqU<4o4>Hr?^>J#NapX_lusKapCY9rX91K$KcKMG$658[CuQ1?Q43VQj!%_E4*=p*dXN\t!A,dh
%V1_-tORP$)#`C?c:(n2%'-k%A*pp'S].ig(_Z",#-$`"LrXb#aQRc^c3]XE;6b>1bPJ]Hoi$BNf)@)3,If%!i,`H3C7::Gc:9og&
%Ag9Y[GEt[>BHIiA5=D9JT`a(Lid!k]nq1W-d%\qK6D11coL#)o2P;I>qh3E**?P"J;b>=a9-pB2)0q$8.FAU(>l%_)\AWA)e+eY,
%#%'20[VT?@2?_I*%2r!`LS-ohXFY6;^c#m<PO!(k=d1pAXO`bQo=u+BA)2u&Hdo.^5ol;,1^bCGQtS'@%@IhPhmc!G2Q^p3gdB5g
%S!%Uu$!4@nJ1"K3(310*RYAqpj;.m7@Gr?U7h,en82qq=9Thr$80Cc3(f:"jiLN""2^"J$'^+24D-<MX=u"j.m4*[oMVCOX$`&8!
%N5"hKT\Ej6"QV<pQ+V1WJFVT*7G)&s5m+K2Rcp]^774sH6h9r#Tb/>fQk&u9&5(WYC!fmX(`emU5VouO&8X])F86VV;bbGHJW+@m
%C;DSHK!7*m%f*dI-duf>>G[ak\q53V$uJgs<Ok!;i0/8*2JIDDb4.,D1poRT3:Z_I9%Y7?K-gaoR<A:F`,B1,nl_m0cXbu$A/dJd
%[#!O+dO`"L>MNaJOoE$^ZAo=,R(._LOE0fIaLrrrQRglt(gi$RH5\2!DI(q*MBdPmhV_"d;MtWYB(LP#9buLHa%Y&nH$jNP[LOfn
%Kf(Ts:+BT2f-b+\oB"OZlP7W#X3=Xl;&UtFbGX#Nq5$a'kZ^\-Xf)?p0<_ELf@Heal_IO(afT&MUtAo4(SSf5aubp.es5$m/TE-j
%/b2Qg`Z_Z&8P0_PRT)NZ_IU2<he@]XGlnn/7h/`QN`97\BP3CMIVi0k%F(0E;ZdCaI^TEo2T+(]]$o2qS#iR8`QA[UWI24EYGa.?
%N/@G2bO[.GThd7>'mB0;ogW&aG@McTUZ?c1'n3jPh0IDL`q2Em<P#SM,AR7GE,)MZr1D/Y"&?!eh/9iJdd+oDH\I5Od;-4dr]6>9
%>.rXM)cT0T4PFUne!'RXrIIbbK9OJQHBOrYlntenLYr$U]u$O3kb3!^^#FB<n*s%G$(4kS>.6;^E[//+FTJ@5m>"WWdb?n`W%3aM
%X:os3NhIGnPHh5iF!-=)VM1MF1`;,l3H4aJgF/"i9GrQa9Fh<R=#l@%O)&Ckh&Mf<MR/;f5IG8#49mdWhSX^Pc^Ka@-53-$]A0H/
%U[N1DN@7l"f(aE8m?>Y*[Gt#cSqgT?`Mk;JU1-kek9T?2@6=J>M]7pD)R6LF[#f&[&%a]FB^d8M4&k[I<mSa?RG-,#`*OGi*)B%b
%>r<4tV"%fC=rdk@A/?[YRY7"1nT`d6Y^WN.7d7pOF+gru`F"DF?FphgY_U`j_'g*de&,fDJ.`L><nr_Hc#sRrd]-63QW!F\ea1ZS
%1388p++f)2Q,s"g$KBOOg*3hljiG_L7!=L0D@tS#/3<fka=`72=@@>]NpLfIkSAa*lihR1m0H+Rrh<Q]/4-sO;L48JD@tSS6G'c<
%mI4hb9&=OT+IC?7l;!9;s%NNpL-[9lWu/>rm(6uKD[fI12EPS=,tirU-Auc@U<P?uGb*`@%s&fjpibGm7sQl2;70Tnf"U<e2:AMR
%ZNo%U[+6(r3&CP].uq2,099P'l;#SaS=l;2+VR#R+;?/`>IOP'_X&8P<HF.$FdaQ*BK#G&<Me-Um+%jn2Ek&bC;WtHf/0=sRddHo
%i-u3M_rhr.-qqXI^?..1U>iQLm'Q&c49J]BlBPX7PQRbhlI9hU3CN09B49mn"gE=%67&Z3'E-"':-7lcUNXq9%BDK@PhPY=F/4N7
%qJPtR:0W.h+\^Ca?05%%1DoN6H'1hN+T>]*&>!.[-+WkoK7C)]3fgF0k^QJPkm>RDdP`1.^H3q@;u)?2W7U:`U4tlNX4c&)=&,")
%I-N@4K?_![s2g5W<"Q'c<8V##Pb._?I5X<HbZWBr3V#QSGm+.VMK5=6l$4ujcO:<K'LU1d39YX,ct@\F7bq=qi*acg#<DB6nS5XZ
%k&"VXY'&&Dj),p!ASu?q%UJS-23RQU,N=SjHPI]ok*YSVmB[Xd3R'Xq%#W"ejMa:C`BE;>I1J?Y'">hCADrn,mNF7O+YW7,0CC!I
%"i\*pR^/7.Ra00+A%ZRsj[cX/mMdhI)_^UuO4%^"qo4Qk`\VQUCiS?W$Gq9%mMk?1?r_!?VnGi1C,WkR2"L.g^_Kdhhf<D??MbFG
%_F&9Jnp!.IlI3W97pN5Vs-\gN*S6uOKp>9:Sh"s?J&0XOU:_Btn$lqDca`D4Fc42Wq\g?Kg__UuA;^lL9P):cC%uJ*-8QHPZ5HE$
%0n3a$X<#?@26_,k)MhYcXL\&<euZpJ[<>e\CUU"XaEr8lr7N9D[`G*&0[G[Tg$C[k<fXcmE?0MibaqCKVe0S4*&pCeX^1X@D&nkj
%S8t&FW)4aJ-f=nt&-!mt'PQiPYAGoF?G3LE(%>,(ED#>],Tf(L\,tN)qi@jCR*mgA*&>Jf^Hs,fn<3#>E;:(ss/-$/dZkA;03KQ,
%(5\AHian6sq0+)jGaa=4??d6?nh5p>b9HJ^8A$Jd08mcl^HV0C4nn1:bk%6j"O\G(Gih&>FPW8E?7@6Vo,3j0[q!B!:Dll*1X5ZK
%'mV\TR.Un=nne"RlPimc)2H1c'sf_/D>(*kFkaP,g?r!=YBBT7g;n[=_DoiF@@;8u\Cf&?@2u0ZB$Iu>bcc4,[W1#2[+N@^HL9^6
%KlLDbi3_.QBj,?L0AGg6[.kD+(>ICGpGt&]3,'4G'-uAnaO&QemWi@6%?^!Srmss&CR>GH<n(pS1t[1Hbkgp=c0P$bfNdVkSd-e*
%N;;<%iqd3?(>E.h0N$;@2<TGCM]>onR`@ltVeDmsi/ku^W(t`E\0d+HR]!'S\;Se^NiP2'29_'F@`Vgsjg@#WT@m7LVtFZ.b%@0I
%T%'OX`EIg5C:9j/XnuU..H^2>IcO^u`Tg0UmrD1)T,Tf5M9ihj;2C/iQW!H3g3O6H-fjBm=Z<50DZ8=sp's.H;763ql$DU&CHl`F
%Z)?L'XZldJ4P)@1\Qs^!f[=\mD=1k+^Y`XeB$D5rf5S!ZT#1iXgL@-24J1_2\PG#f>3\.b\$PRJk0r4u-D&%2h/=Zr:sJZV4'1'1
%khio+cGD$!&#X+"'E*)>(+[Hr);2t9njNb48l!_Wg&86EZWKLW)iNbm/')@5OkaCLq<ZhSCVNJZ@2rq'3%e6nc\?FEX<=,Ej1&2W
%^9EU'4%B6RgGk63jI_o0RU6>u3NuRh8Npo7o4O<Ir/AZ<KjlYpid*a!4O:^S7dkB$dZ)!(g<X'-4>!@hHL6o&4`9>+"NK6PAM,Gm
%DTSG;SN(H+hg0g#T&k9Hor!LJUNtLoFXs5)-"`G^@D/F>4VondC/55Jdrkiq;1HupjiO='lR$),1d=]51/Z>/>Ec)kKpQ6*Os?12
%Ci1;;E>?GPo;6:*Y3q7:V)FB,r\B)fEpUt*:Ki@9oB_K)Cpqm4p"nci\i@!FIRW$KASCN+aB5t_Rq/V]nA&[cQ]+.qAXWreHiKl6
%Yg\j93Sn<+B81%/mZh%npRHL8\onbRn5]U2*(E$A:DqCP,_BKs,tRXk:1'"HAmR"/ki>i?3,_\OpC?k=Z9ZKHDboD:=DRr1ABm<o
%'\3UOm`fjKPC!-fDuMIiHWm1=5[:K,=4h:f%d$ZK'^^KM=KpKVYh@$DZC/:#B(NrPr_t8#:l'`sJreV_UN;me#n/W2o2f7;0_8G.
%X8-Hcmri$\`!>>6l$Cd9eAnf@Tdand]tT;AI[4=W;_7sm'[&]D_;aEFoD.l$e`IB:1AJ2<nA.[Vh"U-Kq-E)@5Mp<4iV0g@bTFu(
%:M4NLSm*IuM8'"uM7tbr=P$jGkE<m7G4RJMOf)sCdk#YP^22rjb3&?#BZI6$P\12A<3=`_[I8C:/?LtHA4/:=XYk-9@gNj*UMc1V
%cD=ci>,^Pf<V!ANhHpg4PK,:[Ip,sCU[44-3AB'H<MqiZNFjDrBN6Oqb?d?SPD[I]SebN&=sK&JCnY$hlBU1;T#b3;3\@/%qENAg
%*,Gj$D)Z4moR0lekpcAMk"(K&NNG\sde\R\H>^d`c_Nk$7dVstSG]ocbe,UY\o&HDk45Nb4d#4]n".bL9nl+%F>Baj;Gk=:Y2d:A
%&rX3t;7ACUcum7E8%.`bJu,fOZ/`Tm*9UE_EnpiEs1ncDBaWX\Vd_8hmLRKGN\&"hQan(]=NK8ak!mN6MNY(q=gJfc,L&%Yfc.=b
%hnM_#Efcq7<GT91q0u7]>0cV[gK_0j)jB$EEsI3(fl!?>lclaUpWXJBn$d'rCSCQEOC4dX(7K08q;t-;J]9K'2JL="24hoHU2;!Y
%^e:3%NT3-BM6<KUVm@J"VCYG2,L?"H.8EIVLI@`98Z'!RM/)*;i]PN\^o4'gCnpStXd\S?A%^Zg3X^l5Vrkg4aS151H!>5BpT*AY
%_lcp`E1$;mVln/5CX[^cYFhoBnKq2fV_kU>Hl-t'q]ju3Y$&GPn_A88AG7rY$2>4%`T+%@0\t`.eoMIC5X5a]aY`j4%\ilFMK-=u
%%uj^f:RJ\saIf)lVN8">X=^#I]pKN0CPHrn?%Qk$YJ_OUEMf^rk'KIP`</+H*#9(Gr8Zfk%hIa6/e@!TDR\.4:ZVHJ)TR+3K!1@%
%]q3skc.[t)T#CF0TifMD>&4jpj]PB/F@+G=)N>`[3Yt^PVXB<oVJ=>NI:#[u=A79?,7aY2\R=#L4SppqZC@Jj@+Ig0%jnIAB2BAK
%g*0Rej]Ln/n*2m/q&SVGr6OfPKuC&G51(1):I\eLhht9NXAiJ91o;>[/2A,"kmBN(+JY&(LIF[BAn0\CPPIX:A!,0+[?4U&1_psg
%77Lc&1E*W;+muh5ZL=Z^AiVE#m5SY2^O*/ll-.JDs'3TefOdL]?C?gYkkmLt*B=1l\U,l.\(<gS7LN.[U9]#!em(BVX#oSA!toqH
%WeksHNDJ#Y?9D:t^djjUU5=9oDWVTqM^L#+ik7dnp[do]%OYZsn')%DMg016d.qn(HT@tg0&jQYa*TfNBbBdX?F]`B+,%94p_Enf
%,2cZ.I#EODH3\gEgJAuE4T%#E5(+;u?]3b3F3QM3nK;c33m:sFAt.taM^U6P75;h\LH0_4c?5P_r260o1S&rSY#5+fLWP#:NXgQ]
%'><ChNtuJHg3g;)?IP8iIuT[oT"Mj*H2V[@SEmD6j;R6`P8mHkr5eUHp7(nW!^=Yc?HG&5ZS!(T-4J,S]tfgo*ojm=]9:57?/,ba
%\(q@\=i$OC__^Jb1NP,6l/[7>es%82Q%u>Ns*j=Bn-2X.YgqN2c901lr11-G*4M;-k>@udf+6nf>fi=N)8'K`pj"l;"(!"__+UYA
%D1Yrh<KAX"A_cM;7]j3X3D)T%_SB51o6'VkdapUaS>\Er8n@)7HB'i3go0nh#b&pkq-uTNl5V$)0-56BT0U"MDKKJp^ZBb9k<*YW
%Q&E[p?A7K3<6^C0bCe#]IpbMOBfg/j0D!EBUMA6rb8`n&D<A)jc0=36Nla;PN(I!Nf"/9XH0f9LF]qo/:t@C:U@T1S`+8eOor#fY
%URZ#n%V)))"Bhj@U![O3nuuJtd_"k*R=1/7+K=q=d&P\9EKjr8^.MA.lo+J%7jV0+(/da7Q90rLEk)mshR$+9lMj7:EhELE6T8cC
%F=gV>Bq]Y&NoU0%OJUE0]q0.?I!s/"7F\8Ajq@KFIgUdCYT`>T[Fiar)?_g\lSK8$%l3a>^6mrK.(P(@eceFcOZ&fCW@4%t2&0]-
%$/&c?b)BlVo17HFR%?=1MitucS<LK3\X7.*kFu2hJ"UhQk+^p&Ahb*50c/r$@;W1/>SQj<0Gc%%&t+$Q^6jg6WugqC0$;E%\*H'k
%,o;We]F)8GF&DKN1G;Z+47CVAj.)QC@sJ7BRc[_tpOfemc1"nq`;K#40g>d18"l:s"P7Bi6e_!)2qd?][+CrKV]O\PNts<C%WGbJ
%rqV0W;k+1YEI5&BRe,?>YINuD6IGb#U<E)*p$8dEEfa\&kSB%nU$+bh/U<hcEa3K]'88rs9K[FpU=n1S<k?Z)apLB$j"+^9b`0AD
%[-4$tcL'51n@hCS9V\bj2G`=ahsPX4$bK7\3WkYYf<,16P>2nGfhteQf?T``n>]"'B)N=SpF>>n:-Z<k-ush<M(CW9!4<F.+U4\a
%`,g0975G:NU<l+?NSS=ErSY<SSCd0MG(8$%%S4K\U\R]<I\B:`H];X4TP5>,8oYFI8^(W1Z;lsL8kNM&ho+=n/8laqU@Mf4J)IL^
%q">G_r<%9ZFpfBU.>@$r3-i<>^9'`Fq[l)Lm$AXGT`@*=1K+8k\iC'<ke$%\QJi\M75GWJFl82;R]9uJ(I`Hu4JfZYMI-eH1%bJH
%jOS-EdW4N9P4i\uM.,]`i@-gVX]\1Ydl&5BQ"$eSio1bC<Aj]KBt?lC%.V<RQi4t`G>)j[=TSAi.:05aAYN;C\=,<hHD$G(3P)4H
%@#DOhWjY>I@KDN7`>,3.+,'I-7pEAcg87mFBNmNF1%5GG_flJ`(^bXLi?(7#ldO1AqLB-#*DNf$UM[oQOG>CCYnU^h>B^Ms:T:q-
%R<V-M<7>mPMeT\T\)*CS=%?arL)>lYA;2JdoDPU/GIoRsDZ9jEYmo<^iNm?%FU9!kJRe0QpsCd4%P*]D;]/"5ND\:-C>(07'U1IK
%TIc)VJ(^4M^$*ICqitSh?iF^hU,n7/N?bK]g:oN_XEDd"X]q;[1-I1TT"q#7s#^#5IKIepd^<P!MP?klJ4<++J>P+rP(9:-,2XV)
%-jM(*6JC\?'2:Cm)c$I(K)\4rX;(OU\1*;m(MK[TU5D9\.0=TLkpq[+-d`@\"jOim5r3]4%%qF8%V]V,EY1dm0bg08[&Pg.lkm0?
%iYOBoO6'K4SMUd(6.8(bs,!GI=<!"Siao]1gGVCZ>+,YO&_<Vm1kZVeG;O%IH:aef1i1T;YXpE`&hlclFU)U"KEHJFFVHa(!%q.m
%+WRmuC!_Sk('(jq39[rUlFLXs`tpH8.<)6u#90r@Ca5rpW!4sb=:q:=Xr=agg&bK/_GJ1:LokdsAu$ZF6^(=ORWP*b5>BVR(c7,D
%lJa=QKgp`)D'5c6#eVl,Ro5>A@"XWN*"rUROZd_Z$fP$+BUle%M`P!MAn@ZrpgQ%V(G4Bt\EY9Q3(D?'k!0"Q=`W>/k"sNL_]ib[
%`Ye/(87XU>m\ER4:fds0WDV2f9\(U/=8JXq%a$+Q1bfqY"[ei@\7j@!W(ic89R-f^6Y1X])CgefMJ.6N@WR\e2<A7W(/7:J"7f'Z
%Eb1^DXZ8d2K0W=4=o23;#[0-cA]5fA:)VJ;'MHuDoXcHlPH1^"S.(2#5t1;d<.r2W)-2??gN[2VGj@8+q,\OYOre;b_U2CA9kr)[
%U)>5tMWJL]2#p=Gb%qA"KakN:j@NrV;Dkb7[@pNcJ2MI[1,_gbUR4:_*N!.31CB+#$'&Jmm3ni?&=Zdj+^,KC:DLI`@@BYBV4rRm
%BX$#drE6Q5P!L)j\Lc,F$j"a00f9G>8>7gJ\QMGYTP5j(QB%_2HtI,ZJBS^DaH\-CcKKY@PaA(@@k!SP!N](O#,TQ)N?rbc'Xl>!
%balfmfc_@n+_^CFG'/SY+17W9-$#<U0Dcq"RR6/\m1V>'=Ls42fJ^*L$Og<oMYKQ[/J0T9b/@_!NThnZ%GPiX*@qFFWrbXCI_*lS
%TH"t&O]jS#)c+OAC5*lL=r4\S2oTU_U<;hD@^.^)efY'1>*?^A>s^gXE]YO(@/O:fC]+(EA;iaeB,.;<C50N^Cc7`=eFo]f2A%7B
%3#QHA\kW<SI$^o%ql.&lpk2^Aqs;fnh4JYt#9?mscqieu</$l*r,I#1XCG3/:X2<#*?EZ47kJCTH8tRYLq5jaV;k)*!6,0:1R$@D
%"&d9gaQ_+*A#PpYO8i;+r2*dijdDHqa(FV'NgK2k3lg-QG%YZ$^)ecaM2=/j&nj>ZT6!f.P8ZSUEUm(-W!ak6N4XAD`Z^0!l47M/
%fj#K?5eVKMEY2*[f1;!ZWkX`HI[q$[DoF7Jk8W_jFHU-V.tWmrFJh=t='#a0ht*lPX?.@pNd+TNSSn%>#1VNPA^T%'KXiqHTqH)i
%F6`clD@S&_,4WF&kB_u*kObAai9r\QjILV!EdcI4M?1OV7$nPE4?A:nqA@-uc=S1QIa!W)?I9M:KJ6]"N7c)!9FQjt5n&t$R-RZu
%ig&s=_ZYkhN8a#2BXj(/e9&s+LgdHA%ML,P@u$tC+,l`IClZF!UtGp$@jaJ-m^6gj2Z4k."tuD_f7J)kS&%S?R\(&H!_hHE^i:69
%UFJ6/^B#2GQ[u\IjdD<;4=A[V6])FX^E1EqjMf_Kj1:DDpGUjE?E`,KFUJFOV]3*\s.r_[KnHnaXS7k]PsA\4F4"m\3M1E8nqW:;
%VQs@0L'dn"8)6#tGI,(\-u?JrW+>KqXD$&V:D*uH9iWbj8L<m*HEBM9#D%aOEP&I4N]V6i+N<KC_ae1gKf`/lX;@GHL&GVaf+PCA
%YD73mi8'9jeUH?%Bf.32ZXZkGf',DB)0IQb?KE;0Re=*O,':'CWYO!&oem1aYM2_V/^OPh5t`qR$W4N_dYuo163YsF(UV%N3nalG
%6it1QKo6.gpe;V"ZZ\,jIU]p%m<CnU"tT6OQAO;ROfbU:G*6=%=B.\$,*6NFRT-EDNZ+HheAeW#!0:<kcq+O)Z%!Y]&JV>Jqa]HZ
%5`I5g1g&Ka[%\?*Br=FipI`;fBp%&XrB2bQ`W,0<b10ZS3iUYF?/a83QL<rCY_&iI;<*#Q3L#n!nEi]YGnSX<i`<8>8c-`sL]_`]
%A0m@$IFN)T-\iT*,kh\E*gQcSC::_kTm7Xiaj,)-@gK)XiNUpK!OeQ9S+@P[DXVr-DII-[T\q)'m)SKg/$@g=gD_hka/IM1s67OK
%l4S-*b(_b(>^rDqH.e+;c@qhaHX%WoYYmGTPRY\DDLl'VFPG&u`0;ojC(^A18S)1PRpiL,(Z]iNYQ<kDlk"%Qep\F&?kh;k*/DGA
%r]KI4:Ol[)h@)GeHFT0$eD4h>U,o<u9Pq>[&WS)Z4d7gOnosq4-c*le0T$e)=oemK8_R#iBC5I*1b%25TNN:SdJ@NTWRk;rR[>Gt
%%uC*#cpY6TVdc1,UeN=\jZDj.;ZM*!BM5Y9h6_hX2?dHbJM`I]dVN"FlB%\g4F5EAB$[N8OOtQR`8g,o1Dj_e5m<MI%gtHYqG7jh
%<b8:=]M[gXD;Z$5e44a$1Xl;hAUDl5?tQRs)-rN&YH(l8<E>KHAkMtfX[.Trm*rV'U\%tRY1@oc;TF4b!Wb@-8'%tdRU"oP&,A'4
%ii9qs=D+h0,@hji)C=Il''IYpOZ^bjN>_L]Y8MQ\,Is#ghW(Wp0V`rYIL&?LUJule4]@nk*G5\2*=np(1(l^K?aV!7an-O4jQ,iC
%m>i4U8[9hqd\AWqHh=^k;EUq$0-esQ=Un6'6E]3,]=]P`TRL^KSebI&."%#:oe3*67;&:-3Wtsho=[m-JjnD',E)?4AcHHZgB6pU
%CEG$,RLL+//i.FO$5ch>/9e-;'n7hukj,=4&b7YI8iCi\`Fc1!S5c9;)d`^7?^)9HD0X;8GDlGdYGg-Ce8]+lA=)8@:9ej]<TA8X
%DgD4q`Efj"%Hr+c`O^qa3#Y:DW!1]<d_3bBPoB0qPWVWN9N.9GOmrha'i/Qmf4,^\D01?C-QN6"4p"*n"WZ&d[GGYj2H(W^6aGHE
%Jo;J1XP(eH"j55)=6>T9W^m=:8)&0*ZVtguZ;r'fTNJ8)rma=If&;P'(<)a3h6NG>$h7f7aG5U*"CAU9+H3cLc4?UNVctfTj3sr.
%muftnKk!9Y?*)?;8a9_Xh,Y7\UYa'&7B8JS<H]`GXZ;X3>A[\b*61DmhCl(o(i%IKL5m"uc"*2sZO>9_?%Q!%O1jeH`K>#[8_j\I
%VQ;he793Q'eaZbHqAH?E$s\T^B4hY^fa_;n+_Xf98_!mC+H2<eQH@KU7BrrK1e'/L_N6W5K5ak3OfFR_OBAn;hq!9TVjVkK9FcA-
%,SVUg/Nf1FWBj.QN2_KT<T?jAX<ArOL6E,5:9`1RFNr9<4]fV$_gJk3Lt(0J8^39qOoujSor'&iGa^e&HFm?s[P8bZZJOQeL4ssX
%;6M+=3MK@XGUBd'eP<rg3cDJ,4-gro`j;Dt6$9]TJCS>FlJd&#jfNqQUS(^fPt#5$-[,<6!hPrTX'YTV&MB_o4_d]-X]qi=@[Zbg
%SW@KE$tnA2ABB&u5S]]!T>8fQZ\*<]-T;=ThlV#K2b0HiW)V9jOZic4'b%nS<7^P.0a@fC_Bd-6R((+^ZrEq,qRkB=D2oR%XC!1i
%X3j(?HKc\iGOd]I*=HYpg@"SBq8d<K]gcS'-cIS*YdMpt-W6:"OdW4SrjWfci+^GJpH7u)7PlTo_rXt=_d_S!Hr;@MUFl\h+.!Mq
%m-T;8=88qXEnITL=[N]U1f+KaY;F-Y]IfjHe7^[[<6MdBp+RKo0iBpe\!A;n0rsAlRKY.\3LFn+PL#Yar#9FPl?.*UTedHg\cT?O
%L`0pdo`<VXD9B7VfhD%GU[Fp]SVpYZXC1't$l@#f9k^[=!EQfG2edVq@H4ZD4P9iP:rm7?`MdHBRS;M?r?nc:a6h?#E;U1b;<uIe
%E9/5[QV9THn,.(p4.JM&`+R`b5[(2&*X'7@UFQN8kb!f:iRtC9m4_TnYRMibR-H<"pI6G#%\rL_/i`M]?oP9M4dLBM6t7qc]!Ji]
%GN[Th6F6m?<gW>h2A6EC/aT`@E^Iun*%=OMXX;k#qO,!!X`75,FFh>UM9(TPhJ?F2E+M>-fHp9'qJsQWW%iNmVZ0C%%Y0)\Y6db5
%_p[\E@g2pMQ'NpR):/$EI!G/Uc',bTdG'F\qOP;7J%`O8H+nUU\@E@2I(4R5</ZX)gX`FgAa@q4qQ#UR]>h2-SW@u=fA!ur*L=*=
%B1Xt>>Dgi8^'83\Q.tV?T8WHq+$XRaeiVX?,Nr`fD<GM8eCs3aB?srQX?SW&_c#mDdn3FfhE;hACT%"=3jaNYC"7[Id1*g=nr<Ao
%&&$0K:'^QgHiDs&FfQ;_`pG_afD=;^cqSJZCn1uOmC)DRg94k4pui``MQ]PE.b@o'[/ThEr3X2l.:,1D*\R-&jc/OSF@5[-^Du_8
%K%!M6Cqm\jJ%L$lT6Erkp3SYaOY:p1MRrCrrUI5+Dcf@,FJnd,luNiSh>%h&<]=sn/'cc$hVlVZ"p<k%<:)t1mapP*Q#aik\Qh0S
%Nn5>!9DY1arelP=*it^r^'[MQn,Cef>IVo0.[B3!^XXBi:Nt)ef;eBiZJ2eA?WLs7\#On*l.OmXp4JDhDs-W82alT\qV'N2%c(6&
%Y<T.9NQU)##>]Np*ncl%T@@]S;<LpQg6GD*_8WFC1g(-n3j4*Tp>+AMUFXmF>3SleK<4K)=^H@jqfR8cP2YnJB5,&dq=rO1njD$I
%($39o#OBr>]@?cVi:6-uLK3a&egG5,Bk%HGH>;9NKu<JtH=OX)+K:t/(\b!GcChAA4,Wn!eo't*H@.*Qq;?Z?]<UkDB53.#5W?j-
%hjXiKGjmP;beH;i;r2-Z9+T3Q=DQVPD%eo(Xn(E7e+,jXG]re62tZ7Sj0e1((S>Cu'8W?q4l6t05V7I9!T?raK"Cm@!,KOX*A_X1
%_(h'6Lc`oklb2u!iZ/20*sAL&[_J*&kjE<F3dLDHh-YL*b1eHBqn_N*mG%KH:TJ-TNGlHk3bAMCDcP\]O4=K=IH.H=(C"7(*1(DI
%X[d0)QV1t"l1D[s1jo/=[L]C_ZpX$GgZ>lQ[r[$\%.7-))0H(aR0XoCFBc_N&"^Ip^+kkD>#)H=G1?KF45/un#*J3rY!`RN(iS.f
%78nsa6$jn_QrSTB>rpHK4FS%oiQ$)3pu(\/a'es1ErY)#^Zg48+0R58jhV[a_:[r(H)F/S6>U11D=).aa'1%`c/T&2[4gM0l#tHQ
%*Zr)ImbRm?QpHn3Lt+S+j)FfhlX&i23k-S&fI;P(^OdH<CQbt`/6@s2f0Qu#mf7C;mZl)Cb8kr3o'4#sheR0,a'o!nrH5"-^Gj:c
%%o:th_r>"@gEl('45-f#!+kcO%K)c@(W51-W`$NiGP3Hk:K^W'%:aUDICf=7^&@e2(msd"#>[:mi6o"I28H85)O:KSp8sUnf;*bN
%lLWU<WRp(UQe$TbCU\WSf,Lo_hU2/RgX*t6K;='!q-ilK(>`3!5BmF2kBGmj:Nq3P_9P&BSbI`b]?`'Z[s?7u@eo]Ok<bq2&)3_:
%oPjcqa]m9h?\/sOr/LGcWRAo>]AjnOIAf57lRS#f];9ZO]1FM0\!4r4`H&!p52K,&,ut!Ei-lr8"`0*m\lIjf='g@Hm7h>@qT^9P
%06ce>!&-SVW8N&KYdW4F"oV`;Abp/FrkU\oZ;oms?15u5j6*6_<;H)'oYJfn?[^fnp'uF>7XC@MUJ?FdQg=%]l5_cnZCnqG>l3#I
%laFJIh,7%oT-("sQ-3fTAa+ZBCqY2T_U$dor-Wdg<f2)'IeNKg;`OIP.PKU/d5U9D/s<ChhCaYb.i\!OI%Pl9=_6on)CXA7gjT1!
%IP&B?eUt=e+5W`7AUF7?;uZB[In7Tk)qOfObB:?7!g#^^rK?oddd[T.dG`A\BJT.'CWdfk_->IQB=iMOTusEKnFj[k]-3CU$'($j
%2hX`l-";A5%,Yt!nFl"#G=\!WmpCnUO@fp$4Me$/S1bBjd>0^B4dg>b07b;?5^5m!YCr<`5WAcMAaB<N([SGkZVEd!Z>R[6:I&IS
%"c[a(9Fpo!I.:+;P!P,>al#+.h#!R&i_&8N7TT^?730C5\f'G?gKth&Z>NPmUkUkiK).,217&[Le-7f`=AZeiQV"\2Yg?_!cm^m4
%Eo(6YboinpE%01AC9#8:7,>'tBmdB9qYm:LAB7FWq0ZOW,N)!^Ag0U,,;ca%0C]F*8`nt'MNeBCKjfV4V9D#`"9\E$8'9&k]#K&j
%Itl3%Y"JIdlAJ2pic+]E]g>Qjf`@:bdKb`Jb:Vd3q"uTkUtnQ]KHs+aB'FK#U#@CHcR9LIcriP."X&R%lJkT1+!b"q(f]M%!H"?(
%k!Uk==/(.)n6??oT)"ar;=Aj%YI>It9t5X25(^l:<0Jo&lSZJLTC%;=G2KEV2t%R/Q2"n?&Iuq*D/c\1MtK$<?Cd?rT8tiYk#5QA
%K=63o/i\1O?BRYYh(YJbBWLl8<7P(.+Ig7N3n]F;nik]@huD+@W$+bDcqhPm"[gms&0AQ8SFIef>O/K]0)IrB^@R1tCL9$ogA@Gf
%1Y3_^$D&n0DL("*%NChBd7:89ni="kqVr=fmpPIt/Me'668XY[oGC*95<0,2qrO@WXp8B[I.-2Xi;f"hd5PunoA3!UAuN2tT<NkE
%_:)V(D]!:-qjF"pJ^7TTX*FF#Vu;jDIjGUI](noFT9/*,NV`Q_&2cB&5R=`>&XHE&>7W;e;q0qM`BM$OD_ZI_\t9,s:V@u)]%9G%
%&L^e2ppg7,R"U(1nY'>_(f%HcTcgdUgTNf[gVN-tcJbPPrWc8`j_lH"[BBK,@=3/iKGcg/g$&.S=.Q\:X/-3l^?1H.31Z/)O]90M
%b.VGH;-rPFRbmb-\$nY^*dep"gh2*QLVQd:m?;9eWa<Ca`ZKjZh?uY'Le5\8LB]b'i$1QfIIgtq'nuY67Lk!F+l2YRf%Gg8W_)dp
%X'=<#1(QLCG/<]dSsF,^RMD?qI+['=h:d7:<?C[:4lo&Al;Ts"=c&_c?e4Z6j&os$H<F=6XUTE2PZXQ*@5kKJ*SKaog[G-uB`3@.
%1LYi7N)oYb_i<q_i3XkKD>i!ZQO1gPgQ+N\=mg"/s8;*+.6E[]]MgJlT;rKh9C>'$)m6[)kHBiph)EZYTf(rbg(t1D9$4,;g>r'i
%hRb(PYN8"CNLm>P%psGliVc^Y-2QT,kH8[*,U\U+48>p[o6=Htk^KUL4o]j<BO6(jG-ZF3s.6BeRpj!kkaG.`IqhN$IrVN2rpf,#
%KVHN-)8(j]rl+;XgS>#H:Q=^#I.f5#-TBKfM(R5/pu]a9IQdDT;XNV%]:`I.Q[s2SgacGY^>5IpEPJs<0`6<%^)MAO2aQ,8]Ne2U
%C!H5:E*`EcbGQcgdI+h@%ia-L4QW5Bp/FmbLiK:@-H9^)-;!e"Q,G.I&7`0j2G]*b1&:s"Ot6\;P.Ye>'S@gHI#LWn?/6oGfDD&U
%Uk^L=O8N2Gr'Le/h:hgjKXc'7g&/e#:\T.d:VU1e.QG&Nrp<i7('Aikk;aol1R=^7AiKkF3-uI3(2oY#UeeGQ*G+i[`adEugh)gQ
%\"](\aLf)]TWb*qc_#SAA@G!Srpd.8<8'DBM?h[sp!jip[FBl+grIjZGFfnhp$>K)&#@[C]04Jg<55'6`cIN3<nM1-Z.qgu3-b[e
%=!U:ofCPK!@+)dmgY9u\d[(@!!!gEq$T9LG?G`rlA-)*BE"F(VcHa<Bn$';![r](1H=&j]Un#9UqqC=nZaF!4jQOmuXF!;=k(@_s
%kOr>/I-]'DGeEKf1#7;A_Cc[oK6=VE!Q4.#NTm\1ct(i%lh8L,P0:b%PP'0G]tNG!]U/AF;h&@9DY<\6W]E(GK_O?jGJU7VX0OC_
%oAIaaMeZ)%F<@Ac",>"B?o[Se!HER)A5:oCIrl`]rZW8:V6_k1)`L&FX.S"Yq'p9*$HbrT<F34=[/.fi;t]D?WOKQ([`YK?mEq@\
%:o/WN6t:9=6Fm,)lXRKrm#Ds"Dr*TupQrUKl^b/KY>gc;RmC@1ec*:"EHte@!t]qI@6]D&bnee1B+H)TYJ38Ljl8n@AC$CIp0cpE
%IIE;256&!XF^Ot.4#K5PIh&kfhTN;c99OMC#LZ&3(2S-e)^+<EEFW_Cj0@4gGSOf]BtQ=CGfAsZHiDEnK.I8>hSIV92q]eGJ3<tK
%G3?SPIp=M+YJ0g5K5U$7\fQ2g??8AL2"T^rDr.hWH]@4_^P.`d8k7m-Vb\k7[u6N*lUa<*Am"0JVSm1O7^6k0%<06ulW3WN>Q<e_
%dopHJ4A("&-TZoNcS!cj5Ae+'?9R"k>X#]6Ni_di=lAo9]aiad02YJ8d-%mTP5"2LhH#ZS@"25sCnpT@]t&1U*/%tlSA\n_Y,FB[
%FHa<UE^Lq#O5O]=07_hRcdSQh%D@0h3]F\J,,KWhP8f#C_uPF0cm_2hDp_94aa&ZNQ.E5?H2[F'DDrfL?[D/>f)&5U_PiXjV95X"
%d[GIQS/a0rn$)\_(7a6,?H8_cCp1OGHV8/EkPauqHt/j=gB?>Rs%Z\eh>?EO]`<i6CR:eL+-u"3XfV8KZWeO/6#<i3.9ETtO$2Uh
%eg7mI=h\1"?YPd5C\Q@`d&kVqJ@.UXAAr3sjQj^#k''h^^,Q;;2nIpi^AS[\4jg\.kIm'T_<FglQo5<-4FS=k5GJ2m9Z--2^R5>3
%`1Y!Fid,sr9$;Wk*cJm!1_.;-/K]8HHZ58cb-0#HJoBi5GGPn&FmHon]CuErTWoH#:JQtC%!D_QN+I2DCl@ki>^<[DoLkY$H2*tO
%j5AeLI@D,`=[R\CrXO/@i&HsQXdc62cu.)%]tM-<U^!F)1<Q3aluXU[hVN5#d#)>^0=?(Y4i@6m^qKQ<PUk/Y\5[hGbQ4*>Ms9Uf
%\pq&,o-1/`+$>J,9!Gj_NmT)d*lO+(s6]3gI/a8<-%B")JZa2'm_YIJ4OW/s=5S@[-`tiOW2mY,4c+SI./Y3c/'KC0Xf&4Hk!5k0
%BZHh:LM,JkdF+N&_qnhQPFZsk'dM3)4i6>m#?YU:lV;][]lfc):atJ)]qK=o><dRfbFc7okJ-fp*luaf"d$m:%9huU7JOFh!X"MS
%abi%@e-N7nHJ5C5"hZa3NHI&fTAM\Sl@9OM]ec`2C&q3)#j"q&gd5L\.>Wm,]6<r*k\lTW_o+k0lh*W;o\mJ@R:S=g-o,p_@*4rl
%,[EuXI&GSR.=tF*+A@J;:oR#d/si-+?S@`2rn"@NlbR3+AN/7F?4OL]fN`oSZl+R(4X0%!?gce(]ICGKl3S!ml\1R7+E-uBYYjC=
%m8Miq^/\Hgr60Bk@rkl]99i/Xc[jg8Fiih.(F>If@\.>BEjY]&o1:V5nl`R-GQ4'pSrME7QscY&#tU"$jl-As&^-iW>IU^%G5"RQ
%>VA:(l8'Ij3qr$lcOUN-:[D^LrE_hr2.AtFEVFA"<SqUWnsg0C`KO#R3&ld6O#Q>5+T+[93qQ&9>r-NfB;Oe4:k&R)bC?][I]7f$
%c?]>3EW_lKKHp"$6G(f9][c_E@S^2GY$cN1jb[Ps;r*Q#=\lfgh[1j0kT[NDHW4/(I@u&in[t&RpHh_'3f;Ec7]2+-%f>_^UG'+1
%(rh+lI9+'ahipm<oQ@k2a<AY(SHhs'En(5<kIh2IN)(8*`nbbdq8]N%h8PmYH,[)*PUcG-B#2r[XnQ$Ngl]VS;st^(S_V2Gm3C8[
%GIRL.i9o4fqo[%X^*^+u-8UM8_9Fm_&j^?>m6Yp(I2(PQ\$8A.IK.uFp!0!o^6?%r!Q`@2k8Qq3pU?>C-^"3VR./Z/n"AOUjk9>X
%i#@eL-$m7%rVDCt[.3!5HK?/(GJ7IKjaNgU97>K`n,_fn1g_j[VhN<`d:;LmIe=:DiN%aem&L:u=*P+:][)2Y]?fo<XulsTBgq?I
%d`^J)e(:>O=4u9]q!'0Jk'[e%:Z#(lH<B4Yp::4O]5@@5Vd\9P;6)`'N=DYd4MG%&o_o%:_sd;lb">TEJX7HsJK=D(e7j9apYXoY
%Tc1/_h/6ST8OLP!VgeNGfCVh)ATe^rH$c0mb@,?V)=`7^OOKk^PP)?N]e6PD_mfS^^f0PFpn,1Wh2S9#q1c5b=Z-H_Edg1%&M-D"
%fR0m"3YKI[dlWAZYNn=":&.RI7N%Td*OQfOSV-*>Icg1<?>pN0+5L21hpd\CO[O^W=Eu8]#D11+K59&-i\T-6gJru&i]c42Xb#b&
%#HhP2ep=/@j(cW#IJN^4-1`"_hj"&H0Nr3QHgbn0;biBTFs$+#r.\?sFGmVeNmW4nQ9O,S#S=[S!URSnJF1Z(/?,NG!T)Vl#NabH
%/i__e<tN\YDuJFsHa!J<Bf]l\4#8Ua]m;Fi&,W7,HLu?p*]8\SBf=#W+It@DOd<31Ou>K=1Ki:@Z%YOl:!YA,f'>Jf);f6HfQ*cP
%YqU(Je4Z<B\K?LF[&JYLc?^QjDcbHUhgf3)],K6`C.GC,>TM_%JMkF+jDiZ:"U)r-76*%`C=b(^EM_Z>(^Sj5DUbUSmJJ[5PLa->
%oOUZo]ll?*TW@X+B>=P,7<"nO;d*O?Af!5/MFP2PN)lqNo8fU8>1B(ZGR1Jq%Q)-Mi-PSq&/JC&eA%P0Rr.X`ebIs0(LnK?/o\Uj
%Pcp:iDed/<=5r6ae5@Xo@8^J,3:1DL[p_f:nO7bG@PW<A$[gVKV]nEc,&-Ak?l1@@N`]k1$7^(*(o";]e:o0uV2P#"MLZWB(/qN&
%kJ1iskcjb9""XXU/5i9:FGWKr5/=&>"qM++]PkeI*5J@o_LfU(OGIeMaN7Eg0Z$?CK:3/r9.sgW81*^NK-5muBhFM\J/Xo:+D,$@
%>!X&b_FJ9<r3QSkoFInE:\'n$+HPQ/H!h7C[>.DI,cAaL@iL0R7n_jgiWtf$FANNm.d^DTdbYQR20=pc$9D&m*Q2Tr.NDMIN&ocR
%n]C*#r(h2aNlJ5S&ln\$ZZn93[P^fq1-Jt`]:(!ZQEO_[KE-58!]l[B(>Be/(6@AK68Z+)Cc![*mH.t"2#h9oSX'NSX;SU,k\Bu$
%NO2&h[lrN>WR9O7l_Vsgml0R?A5T*+;E,SKNHXsS#T'kD.l0Y&4Eg<BFY''nHRGAo)`AYk"'j?B@uq8'Pc!3C`jcb'PP;X,[Om,J
%E<3)`VJ,"(7QsWjdDd=cN(kR^7dRI$`SD6K6T^#eL[NoY\8\h-3s=3P+o/%h^<#]_i!>XsI5^k4B]Cb9]Hc,i@Gh3kfr0F/6^JZ>
%(p?S&aO*d\-rk/R2F@%kNQW[:3oHPc^ZXQ(Tu4N8]6P$3GG61!ifP1j3)LS4M&"&uS/'0s!DLRpA;<:";ee4jZuCH"$A2;>XX+AR
%Xu8DJ#okTX=`anFDDD``fi`3eIMk=7Is@HX`2G&q(pXUSjBY^.OkM;22QgO!52/X44c^h%kNK1'KH,D_T%##@j3@r5lJcP@,t43]
%=o!TMD#Z4u(Rbpc6K3W;G_'?1h@.g3$7\l`lG]R$CdptXKREjs"78$eG5%ZBVIVG"fMs>O;)^["mp2MAU0;ts2bP"$lGUVp7su=:
%N-9]=U`;u'_58_]T`UFM;NbW0>S0/AENWBH+3&Os4KqEH7Ju2-D>>+1<hNd"'h@ZX7XJTmY\LCrk.'E`gJ%=79`Q0W6V1(Zm<ec^
%&jF)=f?W67*WefcLHQGTjc@g.GM=^JRT#kLmhJMY\oWJLFsY[-0c,Pr"nc21Va9Q%5^_3_'OGV\L"4&UKu\-U9B%D@E94-2k=YsX
%(a$F\ch2_`c],\coVWJ;<q:q).m10/.aJ<"26CPlG$tOrSQF;lf.L=bprdes&-j>r$:NG`5*=AIeFBbL[%VD#MU1!5$Ee.Y<RW_m
%OC8rJ>qt<*;q)52%N.^eEjPm3gJMs4Hn(fta)U,agJE!.'9:g99@lm!Xqu68!ANJjUZq]<WW>c.0kfIM9RaZifrSHg0X*D!cE`@_
%@oKFsAee<M,n)?6B^/Cr%RRq!Xl;VP<E03p'WYpt4s-)*g1Ja:TET.5eLc09-R4UJZs:eKQ;q3X<Im[-U1-/KFVQr9n9Mk:TWUUs
%_^Go;SrR9MjV<0U,,"'j<mLHQ$LmXQ1UE\`kEd6p9^C<%`!K8W:g4(#M/[2FE<)*TV+9F[EPkb62?\[pF;P56eSR@+cZ4+b*#bkk
%4-mbp>)lA<AJS"pd!,XB&?8,-i*eQ)C`>ERfS$LW)WG`R,rIi'l:uBTj_a<EYoOj,/<(`N?!A:j%@d)_h67sn,!B47Zu"EM9?1K!
%S]l(Zj2Xk63HbsEJKG#(CBFfYbSgd-D8eb(1G&c\1/_@n`F?l]AV9Na!s1rOQo;1Cl%"Xg'p(JIA-Eh#[9uBqS?!Z7A[2I^Ril<)
%Hk9#A)RbGC!$*'b?<%^WF0+gGnN!oA0SlGr9FQ^W2rf-s\cH8LZ%Ef'3]Y2j_pGYQS\Y?I%2=U5*#\g6%jF)QYi@c@8[5K3'pXVA
%*!UBI+S\=WY!h:>ld*FRnFRg^C!0KrU8`][b#hGnmV+J#A6""$Y&5SfVm@PnkrI],5HNiX8kFqV%LsS$LuuPs\]!pOiAtF3N^8-i
%OiGnGmPpq2Ot#H'd#UUs<JX^RFu4nG%"b=VN3V>>)\f;[Gh$BmJA"d$78"q#AO6jnQnBLJ\D)m-NBmMO@+<%i8/RrRr*RG66Yg)\
%<3?MrdGple/qrG-C`5GU#`H^1cM7aV%hF;p#)3?mE1EY:Oo[Kn&8km(EDRl6/KAaAEb<k\\>h?>F28n92Rhsr>js+)TU>C`#c9Nh
%dp_$D)lggA!TtBVW9a5oDjBVs%HO+MFg/Cl;iEt$'8@IjMPI7OAKA8pX?Jj<Ch=geEMH9a%D&,FW$^:'3c;O!DAGFqR6!^+5mIE3
%h'QGKV"!i\l[t8V"h')(E"nkY#0VOlP:/7\;u-4Q35TK6JR'"[d'kl30K+!P!-]>tb6!Ymj%9Oo@p<]qEEtK(GaLJ@J>t*oK=kJP
%bg[-P2H6>'Ff&<=_-$a`g+>#"1`AW\M.(j%+JLq9+$UPOn8[!oE0(lkntKfT`nWGhA1GO;-Rr?[QpV+0&r$H+M(ssGQA6jk(.e[&
%_&LDSCq--%#T=.'Lnnno/l4*H$M?(ks5&<4%-+`4``E]W'pe;'hS/e[%QJtK[[_+Nf27sYeeB(Cd1ebbfDskmUi?s!:9J%6';*3:
%NX=X:(6i;Z#8f]phbjs&5YE&0*Qc/KBP*ZRM9[(3+YgiT//i8]9Y00m*-T[B16TQMXE]12TM#cqMG8jlD'Pl^FIF3?\h$h.kZc2L
%VZCV8]&s$jmTk,k>E15=\H)S`)R^Tp<5'IH81kFaJO8+Wh.V(Y?+ah_Xs+f!BuBu-\KYKOB'sa*!iA-^o&Z[W^4#]"T90^9<lh<^
%B;rC!gcY7ncZ@^l\DtBhI%S_o?"4[4g3Jp@lf22*1\Ng)[5ID\`dG&IBA%q.EGMlg5tB\pVe*mS#ZIhZf_3U[X3E![r/-""6"b]C
%.'kj!+BUSI[Q\aq36OjM0N.82!N1H_G4.JspQ8hQruV^RXI>?dT$eP*$g_Q;@c4P+'>W-;]YdoOHIK_1Y3jjrD(WIn9Z[F<b7(U4
%TOMif?*/3O!Wo7,oYk)$Anb^,Ts8.^J,d"*L?GV>1L8qF?=3KNLRHo?^07G:;6Aa,+)GK)_TM5(oaWa,,EBLk^lEuU^l$R5dq8*f
%<Zp4Ai*h'.9\fokIc-9+^;uYUg=e_[@i.2^]f=?hl`DK2kr`16C;LF!HI#uLk1!/pfkR$7,[\5tI4R`G]mA$$>30Ybfg9XG\XdC!
%kHV/_I5oQ=0jDYFELp1b@k["J?%63siU&b.CG4r2eTnUsYr9YOGnpLJmYCBb_HG<*k8@LtUQ'*_XhL7Xk817]^u5(gr1^3(TeG"6
%Xm_cWG+dlRf%\4t,P_$XoSRNPf2u23[a$cl)qQ+[,6<%Knh*i\2OR=eF]tpLKlq,ECftE?aF)PB!gQFGf:fAX`hb-JF4Rj>]mk>G
%V^Xd\=LS1OAh3i05<\m"IX9K7j(5FEO[@Y7QL<J.]uNZ%ek-afa0J6U/<l@h>5-V=@\[tf;=2ZpF-H!jf]dLe?7'Q\$Ef+VF*r;g
%[sHX)bJ2D[$Pa&@mN)Z=K,O@d$bPf1CY%JJq9AF%KPYmaa$r?P^]D;h-eMD%93\O/edjic08m%DmE`#V9r0Xo2,"X8+)if@_rL)%
%[+t_>1VLYp=,HT-+RHhH"*1g4"g/-HX0.r-ZP`36VF[q83C^*q?,N!NdBfB3er+*uDR9rjpm19dbHr;dEi\;&j3!A569?*j[7Ypp
%f>8VW3lC,+1P_^7)70q5i/2ZEA^JgDh[GPt&?eZACH1?`-Q&;^'#h2>Zb:]mj'UQ:X[/13#\I2`rlsA(#KK+<3(0mZop]:diels?
%!n#bOj[_N-[<6TTQ&Q]7*R@%kn7!7DhsVr/;U<"!D&`V#\8&$l7`;U92i\/hki]A(7r*_HQ#!f]>cS3lJC:#PgJ-7d8_(UH,Caeo
%Xq+]1.3GotZ8GO^*udCHk8_d'V6EhJE/`cp"^X^Cg>$K4ji(>3[(4AEP:YR=),tF;M6f^Wesa#"#[-q+(T6#PZ4m!*7DXaX'2oY(
%ggb%=l##$Z)u/-YfietoFLcI"9t+?3kd_12C'4dmBAB06grFWS1ug*IW7K%)Up/EGJ)rNZm1p0bT/:5LJIS%[-[jUf+5Mt[``TUO
%R944#)uEeb]7##$:$]VrW.g"?h(,NV-4%E$H`##g?jkiD%;rqap;")AlZc\k1M"'P"+6?^n9$i[O,\s/aY7[.(^$*69/,O:!sD)^
%D+8bZE8teX8M$BDUK)HDL>)HO=U*_JfHg!Nf6"FT@cTGm]$[B,+9T'fmduMk'jjg\?!^V?1)XGgpqo15c*XI`[Dp>B(i1t%Y'RBV
%Y\$HV[N1<[I=uiZZ<7X<9:b!E&$("2Z7UmuKA,Bs>Ygl,kf9aa8T-`M==ONqMR^RXe(89*M'-t:!IIZ[e,hG'fiN77XWnol[D?mX
%PA]%_`+N&!g]G`C*"ajf(/e>"\JVjMDqiJ`cLHONDC/,uM=/be9PCUVhOAXL>FGTD)*bfOk)\rPAM#h3OJas(bA?=Q`(I$#DAcos
%pYq<hon[/RZ9#RO!3/'B()Ud$&6kAOX#Q]Qo:.[2a6?AaC;')i`pCu1+mIK\q!,5[Nln#,-btNY9u-Fn"Nrh,l00ID5>^":CV8n`
%%D5-#Vf2[q#UEepM=4]Tp_FV^bSnN'kA4?`SsX>"`UU)+/!"Df.e[(LLSd$jfqNcF?(]t3o*>$N>.iJXi5^K#XD4i>G?H#^IYBUe
%C>5.niMfo<bOiTL/]`4&?jqdl]d)4B0CtFQh6:GUf:t'AYo>Wlq6T#dSiYMd;jSbdqK3+!UVh5Cia=Iip59MUH>IEJDC/r5Z=uVq
%okGXYj9ZY2_(m_EEJ$IA"XX:]p:aWcrU^g9&(^LB)C/<fNpH6JU[$>2fS'.lVMROK(M+?1PnMB9g8ktLj7F?"/-uf'[)@cT2gCN$
%*0h>\-6BGrY2-/3]+:9U?gWCnl#)^:JecC_JWiRLMrM[2CVa1^_s*p6Qn[\>-k87D=`(p9"(uD5m5be;rFX?DQn0))NEhLkYc9cl
%\Or)Q:9;DSQKt<(3DJuY1MP?H[F*\uCu?nX"S88q*'\FUp^#+u>N!)`JWEk2k^LH:'=>[">0d;A[b.F_Sr5C<$U*4U_eC'G0>!um
%b75LE'jPB,!S=6Wbcd?Ubu[*6&,geWqj#q_:=Q:@+lM?4>%%;g7cjlt12YqUW]E`1J$[s#4EkT2A$_1RW]>LeZ:5cRQL"PtFn6&R
%2M`/j*Np2Odp?Hl9<7d/TJ,McYa@Z9S)MaiL#Ak>)%:;X=.O]RHM[9BO[$E!F+R,Z*n]"cCS`d&-dG:EnanN-mFBs0b^:jY7/!L<
%,A@De'<#U0,E7uG51_O+>'lZ0=gsj*<pl2hJ7Mac3qX7pd)H\"=@_an?j<l)^`*-n[a$dWkCO/MYZ3'^oUFekkr`7T(P`F4!Y9P8
%41?E_^VD_.4cYRUNG_$uT[DIA%eD;@EJW<riin!)&7@=RpB#-1l-nBfrof@n&Z5m,F(UO0\iBbE[&D7pHsYt!XuJ1Ndp`ssk-*&V
%Oa*/M;AN(H7DRJ_L!:W\5PdsgR(YEt+[u;KdI=PrIM-IM6:fg;N'RA%,\uYp3c!tiP>6@ioVS:N3$Ttcn`%Y@(4nkqPWSMOO.Y('
%VqlXkb>9";:lii2J6-NtHrdbKA044pU$92lLg\6W#6*gM>TFNJ/s6sMi%QN2>\q"/f4D`l4/`5k37n-T*^l]J#r\hM\Vjr6"5LPf
%[7G[?S#!nQka[`sVJV;8LpY5H;\Os]Yq@!JSGr#g:RNnZol]mW4"[AA/.R05[=?rN\@uZOV.b+B@XV7dgCBQ!L>huWXkMP)i+d]E
%]Yh,:HNj5ir!L5n%A7s:Z2fFe@ggWb)d$Ba>PQ)t&Y#).<a4m7>/lEkU%7$8r>G`5p>u[a3<ia/kglc/oP.c*1Aiig\jj9LgM*u*
%:E+V_>"pkDZEXEXB;?W[$<8a2e/@n;$*_KGg!JE?i&^g>>IT>EO"[aB^9r*9\%<6un4+pp-:'MY)H\-]]c\omIDJNThbXFPK-;"8
%A<Au.[:It/".DtF@&)A)H*m#Fa&r?&+`50'6Iqf.7+<M"PB.k<27JKgd.IG=Sp=9hV:<c;E0et2Ab&RgW>%3S,5A-LC#FQpEe0,^
%5*@<A1e2g'S5Fm.3K*cQ0i+i:A'eLGZ+>Cl,?1e1Dib#pXoL@ji*.a:V<]jNf$'%"BSQX)Zer_t?HDV%0Nb<e'$iHl&U55NE.'.R
%-Y%4o^LKY@%DFajLO4R`k;5[B^*D$l#Pq#%!$PO7J`%^;Ur2_;M"_%F9i)fXdkJ!TrNJjqNQnc#R$*.H^_`_<A`6qhl316PLC['e
%[;c55<clQ=:^E(HpX5#$V\@r3$m-R!MlHr@_d=kXfEaY0g(D76#8]q1*(\I>i:7X>R?'&#Ms$Sg,nOrOb(,3OF0[s\F>iXAa<02u
%s.Td%Y:rVW0uRNVYC)(g6aK*uih=DgJMgXGmqTTCW75?c<FSejpT]Xg'Njo+=bHCa%$K9G!u5SpN.]5!=D,SJ/p%<8Yd(3t^(#Yr
%VSZDY:tiDZ28UB#CKJr\!;!h'K/2.EZ`nS@Rd/%3[NdAC[Riu=a+tgRSJ^VTL]:\?"o+dco^ln@DT5$41kO?QrU<sK'hU$i$?$k=
%F`\Bh&B^n.ebTX=_M(L&\H!.?)?=0S/0K%S=0,-^6\Mmho1$i!)/Z#^`uY'p)HQuiX_X-90Zf`M`8O)(G,p#sYAiss6\HkG%M!%C
%*%p5+#u>t.\6Gl-,#rjkN$5k]_D&3lc-]'SHH''Ym<!(jAO*DQ9<C.2'kfEC?k0J-^M2\WF*fZ#XZgiD:$YTk3TaFoF`Thu=<ra2
%auoRC!e/U#hauG,#%pjkkBKkI-c4fH$&>F\/V:pB2&GJA9F,[c!pE@K$6ek/*#a5Bf^.N3i>ad883j61NXG&eVO)5<N[%kM\5H-Z
%G;SfG5mK*4.gAks@@;"XTZon"X`L/I'-$<a5'$([k`\W4MgEI%oWEoJ%5$]-rRR]1G:_Bdk'@/99l2Q%$0hCkE1p2NS"q%l!Hr6'
%/<6,noq2n_"kkGVVmY.p\VeeUdHa"b8$)6I<@ogV9I`1ZM4[H]pkX(=_uNNIP5WonCdr*#a2LO:+As$*=BkPU&u%G98fdi>OGA/<
%VT%"1=;oF>O-9?;XFVkHp3bogDX8NZX7^IRG5Ag`SFb4ApAJsnnV!N/WBUDLl=*LY7&2E9Z0^Mp""-V>4VEf]%egPi.6Rj2[VjOW
%;Qh#!8dLgS`$nP;602-j>PRtC)g*uW7UX/1M\.6T`W\bC=%6d'G)NQd72pQ-Oi/Ca]Hqi:(qaI(<^.M8hYINZ-Qi/01Z&WS2lC5p
%i,PHYgN1&'VP=._\J,\M-61;$'tm<;\nB@Ze(YZ;E6g6C1YoQVag)2&`p!(96!3%OH%"/;2a*ktXBk!c9,lPUD3Cn7[/&Y.Kd6An
%4V6*oBrtsIiF^sU?UbJpa%T+k_eto6A6bnc^bInq2R,;K&7M9Tf3#J^[5W-+86Z2VWA\mo9d<X]8#qlS@*oN!4rS@7YIkpDe1cNY
%S"=M>:8:m;:0E"r$e:oQkGCY)G>8"oDW:pSRsO_XRN*:2L(TGdrLf0:B0KE+a52X<#+'s3+SF8Tb&jI]olVjj`jqM*_[KXlMNJ%@
%2suKYYZ5<PGD+>'/,@>oW955Ln%dj^ZJA*b@r'bep;DQ1<-m0-)8c1&/:eOd;*@bAam8?*K$g)Jph42dkrTEO>n1WqiDP([4IA@:
%7!P55G_"@I8:(h;eU-&p+7;)-iAo="4$Y.ESqK2*0Hk"1Q#q>i,A#a(2.a,j[h6>ir1X4!Y^4cn``3@(Ur3J@+G5atSe8Tb#&iF0
%1M@LKPo&@0l5s7_1oEBqdHQK"Rq8?uK3(XZj(g1bcl*m!gnaPKk[l/D0j[i\)cWAj(bJ34:Ilk?TER^bP(rG`Y+Dcl/!"(pc/?=Y
%5)=[lSYl0-al.a$bTH7t/9&+uRi%CYCa$?@6\\#e_!$W`4%_%K'$iqYgc3PnPRU=tVk3b7Rr7Tse?6gbL5U?BkH?,[TKBS)0#CFc
%J??@I\G66%1M_7K&7&T[i6&La+Aia:+5=2`AF0ig@.2#=nqRrR)XPCd+;QALB[bgHI5KC"oT^BX<jtO:`D09T]kZ++EhTNb7drs4
%NJkI6B&L"`5Ir6$?)Y><Y4nBufcF;D9fi%,3*nM:^&7.E3nCQqW2gjoKubp96_&6u*"^B1egDCViCVjE&B[<Td5St0--*f$b[NiG
%AHa$&],2DR^`!'mgh6q:3O804eqR^^j>oGZXE1d=V+&SHZY+_0dL$^?76A1,jDIP5GiHd__F#h.6A^r*TYl185mjn52)'i/U&m`W
%`nP,)kal$d.5(:c,l9&:@p$W/*fEHHQGm2m^#3[C*0#32ipgmliFRU,K%UTG^WEj;SeIST@bK>9LYJ&k\=O6U@7Vo+("G+^omj&Y
%SK7-p^aN9@4O82hg,`HG0a-2B3_Y3>Q&u;J*=)-I;<Il[;m7&<-/8^]H<qU1_\3)+fe=FpUYj\A,`mASR;N-Ua^n+#AmUu%UO,ko
%p+!k09oUZ=a2uY:(<bk/7_N&^.(HaB2^,:/IBsj!2B'EsRSjnGM*'NT$?af!F.cEP],@?_^c7Z+O"YICl^A">5gg;*IY$$?BS_IU
%m_.WDf2F,Q>3Ea`-1KXuT=V(!EQIC`?j=`i3g#2k!sEn^P7-]DC=E/-au(tr@3'<0:M[O@oTbbSSTM+?-sONW2ZDWP9K9_Tru'4]
%c?-4'Uq**S';LXK26ggO:(W8..G/Jm,5ri@57r$L`dLNCW_Y=J4[;0s=IOh$0,UFd,%$EC;ooHg<tIV#ZTMY!eV8nh^fuo3L]!7i
%/@WUoI3b\c"O6QAQooSg<Y;<eQnj5Na/I"N8;K\Odo0_!`h5jF(okskmXKbR&renT@:S:.o<s37g][[]M7Ve6po<Jp5o?UqqW;fA
%X$dpBKm5:<=*.ILfMeNn"E:K[,iE:SaRMCAS3^Zqkm>XJ1<MF!=_&fk%ubdM(7;"Ndt6PA!Kt[&KGo[nomidf\X+PkQ4Cb]l%hr;
%$CWU!,i_]0&Ks=mWBi;?kT<td!pR92]+"X*R=sH(gIY[:AAJ93jrSiUn:re[QdJXr9b<4>Fu>eI7ACr<^Xt*f!I1j1!rX"4^As]5
%"`^:]4g;_6HTsLYfq#!"pEu$G9qJ;Gh.3BO!/X:Ueppf-=R#rl0Q><4E1#1RoXe0")IXPt)I,GL#K(VJ'/,)JbIi'fTo!M;F4=U'
%\YFAG7/B%$&anl-djY+t/oK^<2Y039P]Op8B)XaPPm?n?)TclF=G"Mi?MV"Qg/>4WT/eB(e?B;t=R%><Hl2J,^pKuh-]<AQ,o**9
%`f*lM19*5_r716'T-/\DK*t^sNINa!)F6VD06]s9AV4?LFQ$iK#C)mT9bB!8%h/g"'"eCXhN4qrZ?lF'g2)^J\1L6>L1-=JM;m[;
%U.t"_EW5B'\`6BfMu_EC%"'u(^ELY1j>-ps!=E8d`kVRQFtdSY=f..4LQRGF,5mK\EX;ldO;so:'1>30YZ)hP5nG+P@.5$]fa!ZL
%?O]fA)Ym`<?OVVF6"B!+@Xej_O5s`"r*T94Hk>No8rB#[R5f^JoX^Kd:1M]'Bjk&hEf:_\aU1CJ2];tm6/N)(`lSQIor&K=Am"-0
%cf4kKf>Jd!f<(Lbo985NZo5uN`M7X%A<J;grb(hG_eZ4#G$tpG`Gc^;1ec7MR*;Ko._X;Hbu]lf.p4OB4'ml\&@#29USB0=dr;=D
%;^S3IJnOaVlU>bPoB:Q03VSX)BeD,be>K*AA<?=35>V3'8nL4q1mR^Q"=h.5q27!3kkL2I2AI3dPC!%G.W!J2r8T`<r8G@q+kl5u
%i?T5!8X]j*Bc+6+A^WpVmcu,>Q)"esZjfaS^c+Kh/.DrP<7p%r%h_*@XGnuB_GO$aD7e#UWBS^;\Z,Xfq+44T9LT"Ub5?F%Zj4<6
%*eAE2GVh"&!XUk)HN<YF$n+`^QEXN:VSbn/bIWmbn_'=_Yu\U&Y<6tDa/m\$r8nmuV?Gs=Xo..\>u1_Wlr0/Kn_JTTI0WAZTOf9!
%BHtBtP@d[qF:QG%K=cTR;)X'K:mb-X3pC,3XW&Jkdk0#a!ZTnB)*oe!P-6%sFkmfF%@c@A/a./EV3hmT]MHql?sKaC)MT!\:>Or9
%;mIl@E%peI@[/JNTsX5Y9r2:.*Z0l4LF*@j,\H[D@/qVWM<5O$<*4q`#'i/sfuP9'fL>_kq?qkJ@>CH&FQ<-f@jSOn;`ZTU!XF@J
%bUM?l5=i@]^h'r/:fNk8,2)aJ0pOS_B*P!',r@sUA5qTces&.-QCUngSDCjO$&K\h85,;k[oasb8Yq`GWd(_1<RHK&cHju/SBtG$
%@n+YS..6o'+Ya(/%5q+Pd6!<h1Mb/l07UCs["r^2i3SP1go\2CZ(5g+Y^c`9GOmtq*@PWQrWdF-)]9\A?2P4@HH.V*1V,TuF.Q(*
%W.PQcEN'\-h/]2j(Y!j@Ku'H2C/a+r=8N_?ODV<I>Jn=9&tGi6G[U>WBWDmqh*H>6@Q8VE+=qLU[8hZ_dX3W<i8:f.7dddJjU-&_
%+AV"#s2_]KKtVD2rbO*IbiE6nk1Rs#hNQ^:7ZmcbcG,j\Hldj%`ltQn:GW.nLEs>cdIcE7bnA70^+Nqs7E]3M+=TNsL9'lUZ5NRQ
%QI(GiC.cK8ha\B2WqP5ql%reC4C.T-5!b9Fnp&Oo2Q:NI;'eif&_%j!5a..m%0"24;2\,]_\5D8T5--bg+dCg6SRhac,h%Yb66`;
%,5dpBrbr**''Ut8Z](tolp/(Lq[Sk_aODe]5tBo<-X$P)5H$5"Kl#Y1MDZg5-92/N&(eq%>9RDjpp?j:!`H:6DMWY1:m?6XFT8Gk
%'[\PfD\e?E87JWW[[6ht)r`9aB+V'G^_$8U=YmJjZ?UPgVDI`Pl1UEqO!]bF:\:Wfe"=PhRA-cN*>48GU&q_Y)#.q.Ig$X:[,\me
%)puOTTI(_"&eA4U:tU]BlRerI&U0;K2JD@g'GG)R\$[%##):KJ)60_/PlgE?dtfRZl*TFQY;oIJ.Q5s?_<2f/T[;caUL0'k]Cs%U
%(?FKn_@\DW]'+cX&lu6[AbrSL<1Em^k/>c]+mG3m6b/BpMLjXSVFt4'6YJDPSU-GW,([KfNVq3&3'f8T(G\+HKg'g-P"Z^"K#8Sb
%TKP3m[E@8DfYB;Z-mVgJ_,N@UnhS<)QtXXZi**6FP2TM]8W?a:@e'&B]:q4b.(!0.-K>4PIlj0tOKnScXa7Cf45cmu15p0P'See9
%b9Uo@V)9rd^^ums^Zc]@Kt1?^V1NAk,B'<#VSVTZL]q;rWBUuZ4oJ(gJ%1gd1L`&Y"M:+JGS.=7`"@APC$:_)4t?*&"A#=]cju&5
%$M2iHBau?'+Ym=0:E5c:jN8,t(kBHDd1_C'7eW=KEt8g8Um^q!-JfkU;Y:)n<Pom140<<I1Y>i2(pYpC!LaE<qHlQC8f(HR7/Ap*
%+c9M@[H'`_MX3(V,2+E]BToh1'OXOR@G+_*kA)l'\?A(X"%bWC_j"!U^/C[A8E1pQ]$NKp?GL?QN1Vi<!!YE"<"Ga-f0DNNX=:MR
%[hK1f;7U./E(Mq4OX6fkRdd7NbH31]8"k5Gb4Ga;3nM+`an1`D(+t+U_-o)hLe<_eA9n9@4[dE(e)"MHfLOi03n"J='M3WR2;":&
%6#6\oeJDkE!L/TC9f%9@*lO;Y;RN\=E/:Q]'nia.4G[m14VadWKI\qm\Mg6M:r:KZef'n\d?tjteP8NdH&*^Ai76.U%8X6uLpQWl
%!6.kES0\pQ9BkN:,KRc%N#q/u;f@&A.GF0@Kl4(u9!fKOAOP\/FSbH+&B?gO>kpkH/XFcAWB-=NYWB!+PS:lGqgNc>94J_o^+j.F
%Uk(01R5!&>o?gqq<YnGq`<_hG"Fsr[<fqb@Td$>$]-lhPp_Ukt?RJIAi%a6pc'+UTUAHEsM;9qUL?X?5+A-DCa;nN3$k[[m5i[]<
%H9)r[iCY*c]p]Q^*&IDJBX6T4mdVfRoOKe?F1&X=MXXk-LlGT!MtoOo;f8NcUY.`J;D+RNr3%d`ZRks7[N7#DT7sC]8HWY'%N!+$
%*7:Q(84Ot'%0FT\(BXG4YU_dP?u:T@#ukQB*2@cN,#\G?:BS-",,UC+)[+Ys`8!q:i6dGralpimpZP$s#aPKkfS^qaV:SakUM*sC
%_fdt63U@GqUHV0>RCIc]UE`I[$:e!SDVMBj;t6;%<uZYa[b)^+&@o)3X]>lNYW.LM2&r+,[?O5AjJk.nYhanMoEgg/*2a@emqF:\
%C-+F'6r+-t[Hpns.YD!gDRBp#BBr]o.2^^8?T89nF9nJ=@h=h.bIeK9U+N8TM'\J]0t:d^5>-Cm+rQ`X*iI9d-jYKL0!cFPr="I%
%_\R7.prPjuh*L.*^1lR;2cET;VKD7rW4YDRU99LaWS%GX(5C[E[9#\^VA_65LIi/TA5.c0&sZK3Jm*3?gB>pQW:$9OE^4MaCg<[F
%Ym%E[EZ:rL+q_3DA"-uJ5_MH5j,p<pSZ5QmpU$A7l4p5=o'&=S%1AkLo1G+?GPXt_KmL.'Xs?ab!A<("%58!m1)YfueH".ir2,H<
%4RuTn=>.%mEVcOJ&a@C<N[Eq$+PWYFYu/.\$BE106n+QSL#e-:6U<9aAfrSU1-\"1dJZmL7k:huS+)W(.5nK$SX.ijm'%g^_NXAH
%S.jA[5t5bX4'.,RVZ7#nNNf6U#gK%hh*cN5RN7f.g7crWr%+,(=sH("SS+-5HB:`M8o2fpJq;6;rp[]J7_(Wh%?t=%7RRd%-;m#O
%p3h[@.pj=Pj(YOKc18A`?;OpCUjc$-cXZ4`Q9qTdj0se=B!SAS)2/,>4q30r`7(*ADqlt0Ll.>+`?A>QXbJ(N#o;72mE3;pcA's+
%9mM'WcAO(A5-dW:!c1W[[&$T%V4;Gkgg6XAA;OZ$!pRQ1,pFQI%'4+4`m6"2E'G=/q4:<E-RES*UTf+=9gi9gDha&2WB*DpQ[nbI
%PV;,;!j!/Wd.2/JVfic!di/SkQcs!9hg9\()DtM8OhH*f>>r7;QSMkMf:l#a)4(%mmCAJFW?#rR,\jlT.?TF;M,\cje-Hh#)bfZ%
%Tkp`OJ=T@#?8Rg`\g(o(*Q=N1\qpO;o8nXZn[=iM]I0D\)jl_?#g[^1Q"VU%feNX$h6CsDAk%b4B<<<^/:ti'fEG#>VG"a?[oR3)
%!f*L\FJq)LJt\1V2?+LK.&BkcXbU<B</[G)fhNQ"=\Hg6Ub["Z/f_*=c!,f'-?[kuBOW5<#h[[F?n%B_&[8t&&gG2c-=_a+']V=i
%M3ri#8!<M;0$NI3/Xe]U?X!9C4fV=/ac&ASC9)Y[iBHiWM30m:K\j)L&30&dMG.OkFFrf]O;4:W+;Phi!^E2(CJiQHl+PBA0^.4J
%g4e=/;ptgc,WlH-AZ*etDN124k<(K%Qfp()DE83ACOfnc^_1n^PTUW)W.kTaU7g2>6HHSdBgf?ao5TK%PmqV"@Qc]XA<28K?4D:j
%nV<=[77^YC363rdg$1.4XCpu(_P\E?PY[kg-Q3W!(N9Q_R>NPQ!%F.d0N0_FJ9\:[5;Z>$h#X*:ej1onOTNIA\k!5FM?5A3j2ihV
%`&C7$8TM0\dlgPk#Gh"9:gXr-Sj:G$5kn.D)F6aTPT3>TIjJdUkK(55\MS?Y#Bg[)G`mauNS1%H7&2(orq*XM5MT(h8S=9)KRkHZ
%<Je>.?QPE<#fq6g]a78X.LGDncR+OQ;uuBfTRbRZ]EkafB]FV^*iMpSoj"SC:=LM*eL@h=W\1-0CO'Kn'I/?S/SuK'F,Xs!-/(>r
%%d<t'GJg1V$-47h\s`jEZiLgb(9LQ"V#t5aPN,Nt_aLC6!LH>Q&hbh@[$Y_/g<:XVW_/-U<C9ZY(bnuPM^`7(;kL=_">QK5]NJDu
%[,!f0nKQrsV0fJ"R4@g#&K`*jn@%:2Nf]YW,R<Ku4]50d+jnjMA%i.b&?(MCN+IpP8!0;cOU^IsUXEY!&EsaVBbG5Jp0pV02L7Rb
%HAnpK1OfhuN5WSL>]@lb<73Xf:qhSH\,\*lrjA"U]H`QmC+@X#?8SND6`siO1Eq@5qT[;6Q@Tg63tP-BPGt[G^E(f)9r[^LB-1r.
%'QJr)p%M-I)"h%$:-N+P;iii)&nA<<L[(9s^To`F[Yj:U].SQ0<EYD*3*@[S$3:-2f1:;N-JEL/J8JR%f3D_W1Di=*$V>n0A!5_d
%Jg1Oha\E*D.g<@oeZAR*NVqa?7jPMQl=AsD4^t4^f0I&dW2)kt>U'=bZ'Re6:J5Lm+eD@^:hi4*G7!R;VodbGV873X2W6VUE6=h%
%l&8<X.95W0PD,.gHTFAWjU)c5LF3#YW<7:*N>RmRYXq-'1W`^3j@[k(oaUE4Of&]U[PLi>,ZR`G,eKP'(KH^qnT@OD"fUM+f-^K9
%VB\jZV@kK6D!$h[+t"X3Sfg<Qmo^!i;0@=i:3g5J/*,q"[6T(^0FUDR;,54G/]#%O'N;#0d[6f,Au_"t14as"i%LOrafk'>f*Jpf
%O0+15G"@8EC3'\!S<ATVMBq9^A:!_hl[cuiF83OHd?o[s\Ps6r7gfJi8&8K(j9SXYAIVQ2#Fi&6])8$Urc!0'BF1IN(7]i\(FPq=
%Urp\HJKZFfP5Qh\+j,2`c4XW`7&,6tOf/<o6!X?1#>UIC6F<;P8B>dNf+FN6dpu$C*9:DW(8tSTeV$nJKa]k:B]i"k1>]VWWurtc
%.KrNo9B>$#ALs23?bE48q]%]uA"MH0U1Y*7b=ski)]U5X[*5CmnuiN#iOh.'fW(S=kf.>XpU='b,#_GXC(Q\Mm>e0Vj=&&ZBsEbs
%T9[(8>^(<]-<bSKp:L@#d-<u,@8kq_@p[7gaIDU[$N!Q*q`FYcZ)n8EI)q_Ig&2Y>g/%l_^&?co'#Y@M4Md_s6?'=L_[&$eS^L>?
%<(@0t-rQ!@hCFJC+?hA=i;/CsrD_T):]@2M5MV$H1iVh7XPSY?`#W8@595sfh^-*iBF*Vo!,-GPA1cObi&!r(&RAo@CGdFn#>L2U
%D^_(8(<$6N3)9c9g,$Dq9m-=<\pG!Y[`=3m,a?<X8:bNo'4n-eSJ\2;ME:;o$SS)$/2U2m=l07PS>\r:-\b<gOCa&&J*5[ZHmt>"
%`,@SZWG'bpCZ,eJi'd(MP[S0L/)SS^\^l$5Zfa`%Tn/;*k>=9Rr[Ri0<_0#WY,HoB:(lc)&%4B:Q<]u/SY#'bMFset2XFEF-Sp>D
%6[AX5p*ETlH#s;OP=-:mAu>5&pcg%H860=L?DGF^&9>$L<tU'd`ZtE9p't#ZMpocaG^L=t"7l4pKpp9m$8STd!Re;)Rri>Vm7fZl
%FR[%8YS^[E&_<<bl[t<#'L]E&k)"o%D_YTZNrua6&Vr!$qH-$#m3E4]*%<3Bs%$bkDOb;,qD:'4P`BN_3NgY$AlFu)/;.e+)$EH?
%"[FNu)X*M9Q'?l\%]dO[eFO5JV`D%aHcac%:7f$hf20hRQ-&S[]!=(H_]p[l"UoP(?gWink9/1WmooKnJMQ*Lf\VOdId#VoW]d19
%P)JcpM9+s.5pJlh2DFf-1_c@@!!a,VX>h9&`5ho`G1#QK$IcrqOb.$+JPD<-ATs]:8-gn^")E*`LHuSr+Af/3&QBs-rq:5eK,k%_
%:?$60lgfr<Y%"iV?_@"=%kZV[:c(eQ=k4YJ-SQ=lV`PBnJHrH$72A?_JuGAV!9ghErtTS7\n*'C`'ui7rDJY@H-b`J"2ji<!,@_5
%C/WAJ1GL>?P4d%jV+r'(BPNu?B5UE+%_"pL+&p0L[QqYIA7elJYZMW?=p%uQ$(]53+I&%pmSlp/Y^)&@pc!>aW#MsmfnLQ"(JKWW
%EU1tF)QLj`Z,8[\Lra"b;A$o4&[#R8*Y\nXA:d2I%'RqRiM<s`_B:We78J^8cB4\(Gi(':%Z0Q']P^s&@Z_Mlf"IgM=\[g7=gAD\
%4hCmHU#bQ\Xf.%bpB=4>/,OHWnR_5``oVoH"X@0c*rX6LbnL2,D%/XoCl@]AJE=_%V`Hg=MSRA1Q81"*h@SFM"t&-DjFBP(fgL1+
%Re0LMTQB53bZ&C#8dB0XZ9bhD38V(6LV)Og]:sj?XX2/*l]>3iSe$tKjt:c):k0X`8XphiLDgF&=JM<Vh((9``)l\u:-M;X7uD"m
%Y1^\X%*Y-=R0gK3n_(!=!CmG!73q?&/MGQu30C8X_'`]UFh/'NSj!/Z(X_MgdOepWEit0cLH\W-/Gt(@5$VJ/g(B1`!da&An^#LG
%-j_-l9d>-I_\%Ggb6Vrg=-1BWHPnC3*M$l6<BL.,%DNk0(rtpWRVTlu`aFO*>r4N18Jd'BIALat%Y4c'W-Z!8)5cc55toqnb/K>T
%&$l"A1"]Se(gO^_9=ZIn1)!0r]oC5I;8_[_@TKN;r.H6,#S'XSdR'Yb$(TR]e[;4B\EcO6MpIPR&F1-09$f4;<,(:;)Nh4_r3+J.
%`O9Bc$Jp[ZYJYMk.1#$&0I]r>/G$tMlZ7B;WN&gKkV7"?UrmLkW#Sou6P>2<eH.900<6]/RA1J3Cst*C<0Bh`nciH<LlJ?k!eLr>
%-*,pNiO=kkKoP!B-IhR.P6^TOg+:#cZKL))@7qLOl&''c@ZAbPSkrG*+@A;#F1uj#cs1h6.$bW62Hsbb?+7+UGRd%Clr%&3&<pYq
%P#,o6ne&:T0--M1_Jc+&Cbmo#a@&/@6Fk(/[OGGj>o9M2D)IeP$:Igs$LTU+"*VeQT\*n4'L^c#jA;J3)9EoPp8UXYd`*BsQ^72P
%C.c=WBP_%c(Nj[a`\>jX$hHlX[>V,r\K+&c`MaU/5NVXiU4VCfU+-2^"SHlJ)Iu`d%!B4HRLL;5nD\STbV3fp8CeIWf*4u(7(3j\
%I,EXUOP;CH/`>EULdqmTW;('ao=bSmVS]9.$PXq;VESld>YlY8&H?fp1/nVJA1@o0_BMH0WPGrYI2MZki",:nTL2J8<s/Aan)io-
%<q6_8_Zuq\0Y;1R+b*cUl7+7P_qm/I;[BW0$dteD9;4`Y%dN2FJuiZ/]l:)Ic"]\b7+JUXP`):`$3AWZ32iBgioB+OG+^L$h.di0
%0eQX,<Td!EVu\nUKBQp4pVc9&YrN29pgEAeYlhSGd=dVS2oDV#$!2aO49R=m!\dUVT8id-Z%_0b,PalOTu^]/"rjTZM@iM9a5)R)
%(:d9MO01JNGI38tg#V'4*aIn7fOp]"dHcFnmM.66Uf(b\5SGrP$Nsid"t!9Km8eYnX">jN#CUajAE_>sNi+3aVSK)*qARMl,V.[d
%R-'8>1C4a,D.maY`lL"_I]&6[):][e/Bl%"gDJoUHdfnTgPc+-DuV/3$D7=fGCTKKmF/iImlp^1Ih?M2qtFIsp2Bs/?Z>uDoXFiE
%RB_bd'btem=C7?>GbX3S?L-nn^o7.'Bc&3K'L'c,+l'!#g_=P.e:I:cq.qbGLO/$mE9d]M2K?e>-BqG:3'jafm[tM&[376X3e*_Y
%/PY2\fQs0$^F2]iY0d<PAZ]dEWoX"lb\0_>![@]R77YXlL*\=^f*HU/VFTSP.;0BQ'3Med<R+2obCbD$'!%h9k9Ads2)J,uMgF4D
%ZbCe;kR?C(N<MP-Z3o,sDGNORMBp#iZW&bD4BoOelrC*sJQ3F"W)C-E=Zq@N.Yaa3X'r!+[KlMt;YAX=lTA./0?mE:Si"%])sC+"
%52JE$rse!8UVL*#oJ/EdE\(X4`$%T"U!IW^h%uJNn^IMo^CDeBqS#g,*P^puds`L^Tr7QP*!U#?aFQdMNUU\Kq]eDqde+hm-=ju-
%g;)5go2QK;B=ab0<L)sl7+XV`E2>fc'-JuJ;B.a]ooon:%e^o2'"+2tZX'ac3H9RM\;Yu-jmN4#M9gptUeR6]o.nF#(\:WCdF"Q>
%r5n(%]MFtIMPf`_n?/LZWm.Rh<2KHC/VfEqlA9r'4,EBmp\guFHN")R$!AR'nAq?CSK5.&Xa4T$)"!DaA-nWNLbrPKiK&t+E]#RK
%=J/"/"-tM,8/.fQ%>dO@^NN`%Q0;Bc['g[G<.rqbB8[R*Vd?F3Yud]$5,]*VaAMdV([XQQ,pQ%22-$oRfV;j]IsKq!g9CVV5B@cG
%o4B+;@S(K4Epoii#7/0r?gR9DCmiD53oT'9d*jh>8's7nNZI&RnH?WBBm^p0?qZ')gNRLUJn5Dh@\"?.?glnV(Murfqe!45BO;Rn
%@/U/L]lGA4$WD7DVe6Od3:NG5Et4S9I01G5qAd45>MtTYUt\c^Y1\meD$uK&0]WUVWgiY6IN5OCm0agWC<`e$_iTGACO(3BT_be@
%<%sl=_G+/`J3_9A!&f^H4UF5-UDn:n3:_TrXJsrS\-%VV(`b;-f<Lr`(db)#nlpkTBBuE%b/ij55hm'I68nVfY")096f32"I4hB=
%bXECNWj)[XR6<APO^-L'$s"2`_#!PW?D;hi0j5%`We7g]^\kZB,ETqdMq0"u4rcc(54A4K.k.@eCL@J@a#?XsRsqc)aCN9%$&^G/
%cc3,*mHf96'bToKU(D^3ltJGbm+5*+kqXZ[DC(\;`#(S/7U2;iZd8>dK<IR$?nfW.JN;SZYg!Sa73h[nJHQ@C953G\&$'I3EtT#h
%\kUu]7eE)7*R8]@X]2GC=:YCC/PbEN`]tGEdYY^T(n`bO,j/&./8u$NP(cBJbtX53\eXKC*=F$hr&RRGK)*!dI_D'*!GQ?8`,kT?
%\5hi0m[JdmD[%(C(_S_o#lN0'$<VoDgF.A%ela15nO:i>2Ao1IjNJ$o?H_DOe6)iaD+d_Rp/PIBII28cb%2<nK<#m*/WO'R7b+S"
%TV^CX!s+=&Z2iI-Y;KaZ12[Lf9;=lc3$=+nQke>>3\5(C!]'!o@%h?VO!0+``RieMNh:RdTl/4,Ylf\R:UWk!P<&EkH"boMKo;ri
%CEZDuKj%kM6\<.=C^Wb/d/"p(8c-22h><q[S'8B0dJ&4B$5+e(36>H@JskD]fUpOUQ8`h)I_[.'3CEpS9aE^"oG\;LOkAIaF,-6N
%1ETNp3r6rGb0SNp,/qNmo]Pur>99Sb"iaAr^1:b"oUn4Uai4<RljB\!'HYs`82TNOd83lF+;n$;>fDA-'cPcFJaI,u3naiBSB5hW
%M"3mMQWkn0<im`HpfDf:,Y94EI/:o6'&q&cWP;He_O0'[g-r$(%sU\[--:;(71AGH+em,Z&-3/ef]3WuUWLEI==q=g&i&GuYdR!:
%Rb!I_;ZlrJT5=Y64bT(sFWb+!'V7$iI*'%bPBY*SC(o3nUJm$YWMH^m+aa,P(WeckF.Zm9@_!4_ac_p#U72LBe.p1'm+<XZHl90:
%]k1C`9:NDQ0W(IQ`7+tA3KP03007X@(0NZD,(NCJ7FIm6a$_H<B3;<8YboQYK%4Sq#R7iB\q&`t`[LNo=#7`CDBkfF3BQ&B1#Q!l
%%-eBY!Z&d`C[+Z>A!3Ek5Bg4O!/Aal^`FC:n,`.&Jn%jCYF?,ai(AZp!8eHkc`n\X;Mp,'TT;C!Un;K2E@F&;,T1D*,=s?Ke/He0
%aUF<\+`elrE"pS9<X/YEV+3gG*YBKt4R.aG5c;uiOXSjo8f;Y<;;t_j`_`W7S>WSi"7%u=N)a*R?b<ipZ<^H_S^qafLWGX,@PBn9
%gipSB&k&4UHH.@4c)**,[Y5hp?o@)o6AHR(bTra/q6>(Wmd^lM5Vg5,O&>%9442Lo6alu#1#Kh%5P!s^?QP8__]n1)UGmK_6Y)&N
%.h"=1i<Uk$C-UYBlM:/P&,:C!8EKQmSgY6($F`[Ul[?Q]'>/_OUC"^QVJ3H-i'>W?XFVS?5D2I*I0qNFK^iPo]tK6;$47:ACqg0!
%b;tXG4l2ned_LClb7-ZX]nLZO]sbqU\Y.2<&'SIhi\cr/Zq#R.g^#`?CXQ&C_e=aj`&<\*C9<Zpb2]C'X^[n;*XU=17?"5.b<5a'
%mlEpf>`-J*b+g,]<\ZLjTCus,iiqPM'X_,,8n%:;DRH(g@C=sr>-5;Em^Lk!-_egPS"$N>'&$[YAo![#]6$,jfd^X9VpVMEiOI>$
%$A\m9PD6.UXjuMg:91cphW8g65c?7;g9PJ#<[g3M0;B7'Bh^+gN)gMUU((QMXV_>3:/eQ'&*P]M&!Rh[=N.sn[o\J&]@;$(]>]Zr
%ad)I"D-$![-+\LS2QJZ`FlS]E/)$/@%W,8=%:-EL=jc%PA9Zb/P%N14593HDqTIp)=lGDYB)!B)Wt8&SUDI[OJnnoWb&(2KP^79N
%SjmLZ?D/sO7]T?#h*MjO<=4*`g1YB2ikS6?R7=5r)RffQN7N\cf_7.)cNZCg<kug@M+4OV/X_SiUD6_(#9'mc[)rf_hPAh.7>caO
%V.M5iQ,O;0ZW1`?(60[u>K-D9kQ=nm<MJl5k+J3G1'-4cY%F`1O[V1,R]T\8@e+Z6Ah3#V`ECu6Xo$W5Ft8<Aq'SqL'sbd?>&h.h
%ARB:\]%r5\NWk56]2e.%d_&Ve[>KE<^<G.IF0kOmBt!#]\[%:GC^%#(o4=DniYV@2Y%B1Ja*QRd<_s'bX^$Y7MHRm*oN[Wb=I\KD
%Ah.JVSKcj*D:k@/c!*,2>O\oYL25PK'/s0c<3`0S9#FY@ND;)EY*]Nm[c`CG:tZ*PDf3)%mpoj$2dE1q^uWe>bP$c5L?f/pE#%5O
%UGkXo="G,qMk$*6pc6Te6d$3#CQ?I7rOUND/Cu4DcLs(!^ehHfUYea99>b%Y@LPfSI*f@j`W2au@9`Uc#+C@LdGLtDJ7cfHS3qIE
%0M:\fFW(A?aI$c!09lU,PBI%e!@af.N[ZmkK\/M&Lo<0Rr9$AX5tCF$*S/"8X#885#JdHm%f:(h6?$_5#H_$M=p%)%Ef3Mj!FZ2c
%H02=9g/N4mdiOT/nsHW5!t?uN85#0?5\p7=H-AEb?utnc+BUe^9b5ea!`V.>An2kc!<tp)SQJU\=8=TW:@,1j:7*@/MA=1II8N^j
%<_:fN9EJXfc+PRL%c#kjk9^4%E.ge1\XN_0R$cm'Rfqpt-*hHQ!.E_%a+J%<BO8sUVdgi8`+[S1V'\JuWQ*#'GEY;FB!cU.,j<>T
%Q^\-!rs>lX/C896csiII*?X68(,6+\\Ck;%2[R:E/!DRp2$m+AR#XM%"MhSR^M+:Mm;Z521,TF9==jS^>-DgJ"MhIXb:Ne>,'G:b
%!at_a1^Jbt<89i.K)kKp:[X*T&.!2q\:[9[!j!'a#9<,^2YVKap&O75iCOZ/!$fK7jjP7N.I#L^`?)h-XM2`53<2OsG0d`[+R-Y_
%]j"qU#cG#WAYnP)_J4-*_9IP^r>=Vh!'!Rr(sj>60t.B_R.^Mtfd:"MC(K7eS1ND9^oC,\.I@-]6t^^Hl"Z)%W=IVfD@_9Ma49fa
%PD!`&(^a>kTYk@"/h==7V"2UU)F/oN5%goRJBB+:1UaCdR6cI</m8?4@02Kk@LZ]XPf=hu=p&0;W]\[?%<T\C=GW9o5Sq6CDN25@
%T@dQ]S1q&G9N<;O\M\n[_KM'j)?;.-H=U?a!L\K6Z%9[Xoabg<o%,,U:@t>I]5Q7::C8qWNVRY4@!:':Nt:="TB%*L+e)(]RKJC0
%?hAV]-JWPsDt&%5QWH@a77.4c\aQ]'2<u&%D(3^CQ@"Iq)974pFg`slDt8pG!R?q0o::kbTN<YO]jkl'*Wc3+Lc`uLg>Xrf+2GKS
%E/SFnlpp)%i&8+nbPcAbHsZaAI<R28eBBhcr,.$&_tKE=Y8JVik2ktB'<1LVH6t+>N;`tO)-5fP_=Nh\-;Rb/_NsAE?XNUG4h)5Z
%eApd@U/4j^j'eZ!H*5K@oBmrD7aI;#eMTK/Dkgqq-'nQ/!IAtsB+h>4Vt9D0O#DE3Manj6q8\Nqa(l_EcC&Y>feZ1a3o:SpUt[3%
%@5*R=arQ0DYmLgH@A!(3fZlT3j31rMJLhFS]ZC0r?i0[SO0=6o+qH'uF>T\e'\dc[RS\:6ZSYHJ'@l]arTr"\/BLHma6?.Q3A+Ct
%KRmi)NCP&&<&?]%3#t_mOZ)?M.>WH?E0UJr[[&#5,J[&kZd[;9@B=MF8hY"QNZPEpNoZKams-s_@\/m`Y>ehc@4=8Y9eiSog>I&U
%W$cm[GrV7%*S8J;W_F0u#/K22MQo;ccI,ip<U[@`d(but#s0*"J,:4PZP8e=2>5]oL'"p$FuYYY@#f%EN\5,iN\8ro8%@Z,\]\?;
%[nNJ[rMB'V_ti#,35RA44RJd7i<TnP?D`-16ISs*T^?\T71H@1PJ`N)\[bLr_pK1QHrPSV=p[b&p%"Hp@MLhN\dh5/c3iP$QNH4"
%io(0q9T]op*f_RNejspG*!+6nd%\NW!K`)YpYfdXTVc&p;IF>\cZ1uXD!%Y1oP0J93msu>/q9j.[9ii1_31FTGrjAVe1Q6M@*.*@
%E]aD(bQ9qf7l'%<^&4]^gIf0WV:*9B@I3TJ:;VDS94\lZ/D9hi##0.T5L2iMh0!Z!,@GtD[f[7t@ODV1+-<?jgWmuLMNLT!+V.,Z
%Wmt<6%S2+kE&IgD7t;eEWcgRP?p#N:Yaphc)NAq99BG-&07H*JFdk"#4!3F&U@gRn8$XW;qXg+L-&k.fV)"6$])8C'Gj$CfbOGkE
%KC%FSJ-=M#=*?h12Fb:5V)!rc(&U$6l(mRA]6*>)OdRL#,[b`)*![b)4D=>:1aV*<>jg#JgBXM^[KD[d=(<-;J:u85[ZMO7,d`[K
%MY.(7bVrG_Hk1__mdC8+PWFQN)<C[ST!ep5UV1KXK+D2Ip!+(PUko<GI+fd]N";85G9Y8I4:U!gU<_p.+`<3/L:fSph%j^&SG"^,
%i#FZcPhR!+HPXqAMR;aG2>bh]Gq3Ka5jtO1X3aQQABRF9hl8,W'KeEABo8G5@>`jERNf6fpN)cIP.ik7qV2d9]<`5-A^qJ\&m4j(
%Y*^F.69@o3[KrZ=c1C#)LpU%<`"?2V*BYS"27,g!<;"cY!F=@q+E!-/VaR-2e/1JbCj%EaDN)XSW6g$p`X'S9*O=H;3O-I=3FNgN
%B^WET?eK%N5Q.fTV"a%qQ"''Gg6C.$Y@<DtjA+ka\h2>uNmu;hYslSQ4c$'hJj)+7lY28"V`:Jh$)'/Ta&Cb/C!HC/_\?g%:L9J6
%LgSfeE`8e$V><#;)DoFHNRSYn.rDk+-`.1IBJIu@kb\X@JB:oD1dr1g)P*7a,/EEW4A:mD4UtCYVFFu1X!n*$:,:GN'Z"l/ZqfBh
%OY#'TVlX&G&ho^.44OrEAhf7n'#At%";&%1YQ=s9LDh@=-8knR%2#"[gVkb!8DEA/DMTF>OPCOh6Ng!U`hmfE"S4D3b>TqOd)r,S
%L'S(H1&9/7&:m:ca^$_k&A]kYEJoQBMqbJ3-%_M[H(&E&>`d\`#>-d?Al'TP;9]YgGFU/;$pjBGAi@nq-<1G$6.!"R1jDf]F#0WB
%*HsPF,Qn?V@qMI(+d1FrDEDB;,]9/r#dS6fA>("fhWRQmPhI99L$2I.)'T_@1@-<!#UVjKgpFE0$H<h8XUoa4dmZ//aP+muO:s^7
%O;"K'dNkT?kArLIYY*O`EZ-)6L[0&5WY$G]0Ai8nRsf`)+cga'q!%8IRj8OiD@K;ij:W[p3;/$c4QsiuR\<:LKr_R_FU7JTOO]>L
%4E3fEI_su!,;3f3W5H^8S5d9,@;Ckq$\P7D/qEEKD`<W40hIO8pQLcMW'?jAAC/s*!t>.*?JB22;MN$n^".gb539_CpO!3qHbf?O
%kC_D2n(RF"Y9\r(h+Pc_cbKMIDu\d_YCHQI&-)=W01XSQn1VQV^OGucs68_Hp<.B(q]C:d_sb><nu)N[oClTCJc+V1;G_4)p:pK[
%?[i"Jl+Z\+J,B&&J,7&9J,4qmJ+riTr:=iV)so!PmdL1:J,\K;^\mp'jPu$qnAi<AiHOSus4dR+pB^K1n:SdZ]mb]@"6&`,m!j!9
%J,&."s7N#`CmW.;J+l2*nW.VFqV*+,rh'5bn,Jfbr;Z>IHr\\G93CH9s6.5qrc`kkVn]Z#fT%b_]L;eYa+"$L%tFT?:]G*0&()A"
%[_T(QrP.s#rmMtho_mrk5COpWCji!n5?_Fk+91inQV7A=++F7QhuEWAJ,.:6^\cL+J,&VBo7Zbfr$_KN%@mETNmE4B_t%1+C%8BO
%6[mR8s"_q#kF_eHoCmb6_4PZ1#a^1J4hqh_r(iW*8bFe]=j]F#R[ghF/61OaK-2papELAe?rd$KaQcSgeIUX!*edk1+/""l0CRfo
%_-TUjMCG?.?a\kYPpVQ5:O%nII@'$iUrbZ,W=?h$h_\P?QB@nu22L*+UalFJWX5mZC`4!ul(&@L_q6=c)*n8d7+H?DM+sV(LB]$)
%>=TTkkmg7#<0\,]++]Y?Ybp+:&F)`uM^LDtn,0`6+uMID;Ni#kqdhNO].I?"5;qMXe>I&E&`Sa,.<#Hf6itsmZK@F.0R_MZpCZ\s
%]90j:"W+==0H&6W9e&h9JHn%RIL)Q)Go\;GAGH(&:iVNa2IP%2mk=u?;lr1!P5/"gST%htglnW,"nbJSnh_)&RA-)Se=5RK6_Tfl
%JJ@L*%IIO"q#M:Bf]pQEe7T<8,dltp+!*u/[U7d?=b`*dp5mF,AV$MCh]rGHP#Lc#kI[8j59#$[dn<@s\HhnuXX=On60lXWR/q][
%el9&Mj:cDVo1EL[1e$>6Y)PT*rG(hB?5<UAW2\ctf8CX<3F#q+k-6u/6mB_F]a&pK*DsrRqGIQG55ia>T24pSBiAB1^>WQ*cJ[(4
%oIK.q8uR)H@c]h+O*_;#q>;C^IF[XF5J@J2),l,L^Zp?Q=/pV045iJsBTqXsmn`_iHHh-t?975!cVM?m4O*%]K/YLk7heQP0$+-c
%QbIq.UCfmD/b.3pAT]84-S^eFn>Oa[_bt8FQ7=j#9s>?eR;'c#;&+V1&nUn?p'5Vq#$:g+B1TY>KP3_P;YPoCYmCo60+V/1md70S
%VM7eP$4=R"[Nq?1PN3sLm^cZb-Eh>]3S>QK:or0j]p\/fJ1YD.'LJJq,RrbP1eXm<]9;bd*OW0^J:$M8S4+Q4L`fXW3)``/d2U$b
%kCri8j3m33,+aJ)*^]A"L!.<>>lq`O(0O)CI24klNIr0qJl^`^=gNV/?P@$!I<iWtb@Jj:.ZMeCjX!1F.XPPSU;/9dW>/HkkW6?p
%km(B(!Ho)>BX#.C#qZ1bn5'd96I@GF70[/#1%=5/[h<r;7e+LB^'9L>#ZtWB%3P#A1ZRf+cdtk!Xpf@;RGSb)V)aL@Qm<eoKb>3c
%j6hYMeXro>s135GT/h)8otGF1oATCWa_L'2nVEJpC"cVGKA%1=\X'QF=C>H>d:-8dMrGF)97[2B&h:\OQ_R)P>!NuaFi%%mG,UuE
%hoLu:$7T^,-S2'lKA<okX9l7k=n,Am@jR8u_QkPe&]B+uPOZg(gmX1MKLRuo99ZM2oZ>936Mfat;XuNp'_upQKo@]^e2u60nej$(
%HPCU\"7@U+l](,)L18PkP\M_W11B:OT3Eq&:>;da`pglF.5Gb$-,VDU8>Z/hl'GRoaE9utfA7$6k>lBe.0VKHrB6!JO8IB>BtQqd
%-&*\*ecbMboTt:;DnY;FO0Bk^dE9)l_PGdJF7W:38'%#5d"W1)'?WK!OtZIZkertE$K2(I;4-8Yn;1m\pY8;G@:E"W8C3eUd&1+=
%4nbD5cJUbG0LB!Xd+DTQ?'E":0qK\nY.^3D8F!I6jtoh$9D6nJ6"j8^"0aHRTaBRjer;_n7_iDb<u?;BW.'prFRQ:-g59A20<^.E
%%1DMBQB/PmbDSZ>W/"Bm7:&!cdG?qQikg0;Rtge1en+hU9bROPOBn!m"();S>GArfBIW5SIM*O^.fUpp8&Ki4j>=>>KbP_g?'Xh9
%$p!OI<5^s=D6Y2!"8\20@&-Y7K]'nT4S$\m2nA<H;'sf.rW$RY9FV"FU?$Mc:Q,">76=<b.J0>YMj=cEm&NS_89$[D/P-&6qj'e?
%/+J"srB0;k$ufo@M,rK[h%5rAIRV%+&VAZ>`YkX$2C#Y\5V'&W2)7.Kb/B5+T[<m4d2HTiF63[!3VTZeZ4gc&>WRh]#I_&K'=Br1
%#cMkZn%7M.d^AXD5ss]=)Sk3p:F[i?15%"A;N4V5WDk=.d7mJ7=*7m`C-DHHfN7B59+BXB-C;c9>DbW,eif7qX!Bo;[>a`@M^k-X
%3[ESr`tOY4s/`tYfGa%u$`n1PXEiE3gJ@E2?(E6ZV"&9icaiYG]\i6F[D!%]`,[[Ok[OpnSc'UMY;>2m,9K9;AhB%D;Oqm#Yfn(s
%ZN3Gk>bjo;nnD?MA5<s5J&t4)?;+pN30q/4P.EtIMKAX?S%VbJNEj1AYlU=N<:oN%[->Y9#1[bmL0=Gi/<p;80asFs(WIX&2Mqu*
%;[$8J3!%R6*j&!E9_.C3gWp2$oUnpI)g3B)IhEA.9EN^N.Vdb204cdiErVc7:CLu]>ceT;jGL(%3&a.?3SQHj%<hCGAn,p_=7<?n
%.Dek^^BS7%>XJJo-l8-@_'6Imq9q4"&>:3?b,^W+SAQ12a+[3f_#7`mA\q+j_927Sf/gs$+k;T)Q?olE4?/T0h\VLV4L`,<_DW.M
%[)o,kK!&<Oa$A+ZZ\%d/:h,9l[:J/df9j9('0q]Dj%V-<DXZpceR:<JAQYU+ZsZA67.JHoa*`RC7o]lhQ->$$k\F/Gh3\W#ch;Fs
%2QX[+^o_6rIm-H&.?BgY_W^lnq#3\g=P%c.,50D079u3q;79e.!lid57;]f?5NILZ5PM;_)csLfn)0oQV:ShbiY5[efS>HiA&n)U
%P%P="O][Ybk8:R+q+B8kp6G;n&Un4K6`/R4/!iDB^jW4Dq%jbJ-aE=L0ZJ-A-fa^_K2go;JaMiJU3;)YKGuodgMNk^FO^G)I+C.E
%DUV=sDCs#@eWl^8Z6'U@1-@1"*h,D^Ktj$V%L`I8Zi6Dt9\66>c*KGg&hqs_^q,i?f*Pf>abeU_Z<&5eHsaF=:\(nhA<<t6N"Ae:
%=$"^GLjda#:F"G94L@&^X*QG0qV)GGgVf5mL*k[gVAE\UF\8DfkAFb=_lkCD'I-jmri%&a@%_ZI;ft=_.,*Nb?;T"SPhM;1Mi<bi
%T#XSp&tut;l)r0</uqKd)Gs!UWN2IB'lYn]o!Cio]ARb&auC$ajMJ`NVW%#d[`aOJ0)Bj"g1G>WZP?J`k"u7W!L6Q3Nd(q%@@O!)
%^X_MYe;5iY+Di(19V,A^l]QZ-Kq.euAD3e9GY8\Hcu>[8rgX;f6TIuC?Z!Y(BQn]F"Jbo9Pm_4hmldo,KYK(ja;i'[d<B#2?[q4a
%c"KZe<;WEGiTo_=?mHo)q#V?GbjOZR.m<stA)l3u%2^n5^2Ys.l5,Pb+.R2VTFMcB3>U,Nld&4b6_7Dade1!"MA?l3T9B76b\JcI
%_:%A^Z>]QY:nt$d2W"OnB^M-VX8WYO?6eBYMc)9@<*4I.CgLRY*9Y*%CfS8j+#^/2h,(?-$4#qjj^faL%LlL#a'_=Fc4;c,b6*Kq
%)>Y:S#g\A3[qemnYG2^;`j4-D;V23PXC;kQe/%(,)U[X!8L2</nMLo(<n6SH$sDieiO?17&][-:MnQ\5HuG:V;cHnA**"qWUQ)D+
%I_MeiR=,p4D7?C@%;q<6D=[*Y3)&AHQHjGVf-tGh`)b<?Ze#((M*Iib"PNn\BWdppJBCpP"7%@So_Ep5^Pe$UTpBX]d7?:V_\s-S
%rof:13uHk>bV=l`DbDeO;_;_)Z-t"MV-DFX6?4Y2@W5h39]GHR'%u!\QgP?l!Yj?_iChHZlI89!\]MSS/%;\*^7tgg?CtM/`qd93
%$'FfKi'0KpHWs2hRkdZN/5%;F%\j[S'/3sX&68B2K=15PJ*lI.4S530pbc0r.'tpP"b-g1@6MGZ#`,KldWNOD5L8C40NA-;m3A1g
%Kq^B<c^]T8e]-L%acJe[&TrIrXb=R]U31?W(EDA*[G,?f?`U(C=Rl!UPkBH6CqBd4)_$DdfmXAog[9ZqmBW'HfSu5!n$gog9CV5j
%X76gtd7<5nAYui$[QC!LhKVn=19T3?k1jjf"$SsAFdbN=qdHeV\qS>Bhl'P^&Cq:c,48?X$emhY]Y1X8qY7t9o^'b^,mO+hp"/-f
%F'nA5V!gb8mgi:E;aHEG^7Kpck<B)\;ofIB\c&!h,c.i*44&Q_7N]oam&K,qG[+F"irt/p?\G#'YCk$<1]c^tH#U(Ic=lLlr^L@q
%$T?hM)I,uUU<pWR`FbJ1k2)M2<+VM$6'rZEqldOmNaOAT/BisdoKnNoJP=B%2?U!m!2d"J3dI`[4Y6g<Q:OaKM9.4@Zi-CJ-E9N)
%DHPUYT+pJj(;j9/42?`+nT_$0BrNCb3iZD+Y[jPh[&gAHRV@#!FKJjsG$_H*Dsd^faY^c#7LdhMKudVZH)bgQR/uPq>*I#g1#;c;
%h9+:7/Lf.Fgru&r!c0HdQ^J,\RP_oj3m*gAUYhCb(EJ[:@o(mD^^Tk]f?CIup#Z.2]6KF9fB9E2Lt[g-&n[.9@@94%0=;E.pbY2M
%pjbi"G'4rca=,Ijgi]Db[mHBY8rY"[JY6#G`C2Y>9h)n'_N'fi0LZ56pa@(u^Lia^@9I)l=csh\=VIWMj;p1iiC5JS5>T+=><!h\
%1jO<")R:F1+5!"lSb'[+RjMKK?l;W6U2E2TBEQN/_o1DDiIpQSHc+"o8].IDEGX[:Cnk&cqmgF5m46XL\O*l."QPPc<JL*.UgRBE
%jGRkh*d_TuT?WVMF20oYf"3n#aqjKS[m*B_PGJ&B29kf.jBSQYnk!(GNOHd4/-/$e$rGGraOJhQ+2,;H;DL9tl_BB[<GB;19lMaL
%$<,CT#M"mC-6WmiP-8REQD7tWgf)1LW'mKApcOknaPdITIFUf]lfGe/rBmAi`Si&?W!K=!HB;^;D?=e8U+sfl4_f=1fiTFW\mG<r
%a5U6O@ef,!qg%3i)-n^5J9KW16W8_t<4PQT*or,g?/af`8!jp5='3LoR9m8Z.B"V803$Ki&+7SS,OXOLS!h3("UfrqlA/?o(Bu[\
%9?[PYICbQuTX1_79q&^HJC/Nd*cm:XL+"hGRr<Q+rodmGh53fZ%T@[&P5D^q)5.:C9IGU.XgZ*l4A:j$VuHU5pkkak)##Qq\1>0I
%)=pQNk4s_+X6nA8d)T'3?Ifc=c-l?fe<#f@&2b!;Y?.j;:sS6t?CG@G2ZrCCFB4q&le8dgK%8erh".-bhe1["c[s_NPg7t,;eLGD
%CHnBHNJ&OW)Qc)5O%VniHcQ1FP7c*Y@l\LH;UdD4Ne0q<XT^6S_QXLOe:"WsbbT_Fkuq[>_%Iaj4K<:?3a/.%e2nU12QV;]_ON_'
%LFYCr*2U"]S[FQU^8r+;@Fo+&1>8p[h946Y;M-660<N32B\Z[K'DKQiZOe9\M4lRoSb6FA<>?HXYH\0#`uC;&>CEjt0L>"M+\1BP
%GZ%J&l^QEQ&5+Wih4'%)A"1g15':dVP(>p61Tj8KdiAuklfEeN;(WFlSPhado02YmbuhJ(`fd&8YJPr]MG/"?B4S&tFC57Z!MB&J
%L[W6D;92`D/cH)n/c:LW2DtNRC1a0e#;]26Dm9s3o;hl%D^U(6X\/^ghcl_3o`WlMW[B,XO"O^e?HP<ing(=0C%FH+5T#]a7tt?B
%kp4@m_<8']SIC[*W/-I9;ajcj+$t[^o!XL)S-.\0<h?(cr+>Ppr0Y4Glbt/`qr0Osi6suZ:opGfBiuF/WR<<VNjf.6`!_arBWbK[
%?:gcpHi9,hf\:.Zr]t3!C>.0Wj]])jIln\I<-`c_/o%bsSD42$4.)mcqL?)iK;^%/]f";$QlrTl2R@]7Di>a?'0Sk%3:4;dnDW?;
%@J+R?/"9oi*j.?4K])+R=tiDEki#.oF<mlA.nOHpH"(-gmH=1ZX,@Aa_8@$o>j+3BPe2\YW(@0'Io%g`KrBLjJ[+kXoP>l<ABYk!
%i<c-YGJVjV.$<<R`bSmPnnL:_#@+F^">@($?*3Lo94D1D=1t!RDS,2&9"XJn)7LRRJC!\3RGuPWY2VXHo5'Z_%V9X,b1UQl%$NBj
%g$8csgV]hMF2FI:!$/FXJU,lhB5M0pSChi$4^epAbfik(38,5P=E^IN+GE]Ik7(#`aPNm,GLTAoGrWH9=WH(;OB]@rEoV?@CAfLF
%a'2u5@8nX_e/<g79J(*<?/:gXLr\[Pd9U`?_R.OTi?G?[eW*-[HXL"SKMe@/YoYjPd?SuI4D<%o\E:0cH0h<:=?_^,)t!tWk/FmQ
%RY\^N?YoLF'*FiV(<-%;3==)Zrt(3cH$U[d?udaX,EAN[N7g-7pP=ggcWm2?^Jfk\cmU7Mb`>ut/!de)MJBCY=p'BZNV%U.peR!`
%N&UI(V+qW8dU"feI=f0q_iR7+<o9#TWSJ[qEZ]PQ/GAD@7q&#gLDI:R0a/]mo>$%=q,r48E7UcP?X@,S*IUh[5pd#4CRm-a%YsCo
%H`.#OT?2NBB_c9g]lW*S%rE9/A<d7oKH`G76h<M`$eO#VNl)ThN&ME=4>./s?d`iFGDKlfGDG7s1d4Jj^;)9Y_5Y5cEcu1M8]+H9
%/p_;JTnRm(CQ+#WbX56sZ7I]#bJnB7N*D*XTH>"rjVPRTjUYI<jml<>0ub`1DlW6L,HlKNPX+;%-"elFd;;\59!pbA>,eBjcEBm=
%f,Ps;*8#M0Pp9@t6A<=%jhTm2]J)pZ\M<Zt06m*2+0`1f\QG'Lp*I5(jQn4Ul?*lLodH%9]^)Z^Vb:?%K4JjiW/i=i;YkXDEVDL[
%Y-mbf!$mm5G-3T+IaE0"F!$lJ63hRHm,O@nbOJC9YEP2"?.b]>0B@.]kod^*rGsnFN*S'n_7?<4Ee-d&f^s38Vk4*G?4O&)5G(D^
%X+SefI_!<W!<\i5_+\X4r:1(^Iea.cIea)s4Ke9I`\5)5C@fWP[o\1WooV]t^Y302bcd<g^XCfN7PV[S@T1LSDGuGge[n<B]`s'e
%bc`1"'_?*RRG[?NK\O7r]Y5F/fB#^f2m[6Q:KT;\QigZ19\f(mFhR<QKYM]ORlt9bF0&D41gg/P=bI<VYQKKf/H93uq7_0]0%DY)
%\aC,>pIrsD@<fBoDsi'prIS34I;bNC0,L_#$]t"$Kt0_^]3M#O$\adk6faQ*kba['W4I26LD[;oHC[b]^Y[b%jjt:eZ2AErbq$P4
%c$8>OlPcu)m"S4b^H,&&j]Ao0Xo'(<RoXuu'jnb:+_@bGC\2IEq))!.<IPG@@mteu^@,kXBYrZVT^N\CRb9!4Q0'1(Vj[L0kGJ;L
%F]7t;Y)mA4j31s='fk=1()%<SUUPgo=3+o08^$_R,CR^PM--j7Y2-TSb&)=jSSiJe1S"2OL_S_B@U#+'S]Z.YA,mPjb]dNYXmaSX
%0S+HCdIqc[WBKTu$Zk(fKFci&L=N^FJ_GD2m)^XJbp]<'Kbgor$Fd-0H!saGrGgOl,,FNG3P2Z$7S[%1hEZO*CYQ.iEJ6s4IS[5N
%RLA4pgZlYaD0<XlD0<\GVX<0jXmMh'RU1<>D=cRF[!C3?h=8`g-*At#WGB3Q;tXgUO1CUVES=FefQXs-Pe@-<'nDOfgkgDf=,@p,
%+#_oW_ScgD5u3dm;,qUVKA'>hdN'o_]*b_][durS.U_p)X+4<?f@-gQON-uSX'$b.)SX3\D(+*.*bH/F,8j(sWj9Ubh5n1B2lf^K
%0WT(nc)UA,1onog3m=VqmEM^n5E]X/fcGoOFYoUk<G1pOW]GLdYc>uD1TTg->FHr&0\BFV3FHN#SHI':V/lo[Ws\+ldj^NoYjUP6
%RT5Fl(d!sRZO.$kgP;kBPt5!>I_RknoB]L&mAa's$lJ@]O[X6@Y1cmkK!.!fXKWd'ruO&!A<5@q%Pb&B'K(@emKjkj01o\V6%ij]
%@BGh10P5VOQBf6,iE+J8(k'9.X_u@BWtR[uWuG+2l?j63X7N.tqs&QYg/mH]d_7c3j=mg`et[e=[PA;nZTep-lg-[=Yg*`UKlrE0
%_nnHiNNZp6n=kb^Nl8iR3X762XE/4TlMA('^U:>X<ZlW*=W9P7>>jTm^-qZ)GjN@3^rqbK')-pEL59L1!M^e6Oh!EH.)sPQK%D)H
%M4W$m`F,()GI'+"J=9ng>^(ke,]QVakp-`cm[`k"M0nfh*KAHmVc(?C-hAK%:L8's7p(JPN0D.r=,o(t=VCJ3`q73_$U"sPfC"!c
%R$F5OE^V]up?GRoN'd$2].kd/0*nfkhkQb.<F%q%F1i>iMGF97H3#6plJQtSTZ+4t:9GC@/"927=3Wf,7^<hPUoN0::A2O@-(b<4
%p8XOD1OESeG`XkPPJ-8KGNGYY3t&iG[p4jU@XHYbq4l7/K$%-`F.BJJDCBE`U]XW*f)l\pf)m8PWueuud_5.=8&DV?)O9]c46U#!
%St3MHVgD!R6o%]*mY0Ub:CHDn,#]Snn<<8d,K-oBeVo8e[n5UAh<Vuh]%7BAh+Qga_KMqY^#bB9l[1?'2Ql29HnUG>K3PK6He='J
%`-S1@"%fo1o>]Hik`+PZTsMFIoh(7ip4<M'G2Oe'$^f*g38(A#Oq/qrX7",=:A;Ue'fV;?mT%H%R%*Mt05@(kTl_qYCUJ7%:7)p8
%m3*BCQpWI_(LH8Zja09n/,S>iKJ2OA9kTnDiCgPFG.OtRe,sa.f*RZ1"jC78b4iaYVPin@Hf:5J[nDcq1(&2"WJ"OGKu`GBKJ1Pu
%T)0#7=-`\U6^@+?4WE5A?5O[C7ic\)PZ;*F`TUVCWspGVZFqrFfWth;X6u^\A:$W-0Q5BhYo=a8.]7WeG!k[mYSEi_*8nt_;h\hN
%H^..r\l#;NiAo$S#,Q\*A%(*Ae%O*nRsCfO0/RUg\*)hsB([;15[;^<]JFcpKT@[Tg0O"(8+;YRoB+nq]lX,5[$&]V*9N@<r`@Hf
%"+PCTk6=,R!&=g#h\A=gf`D7KS>qZ15[8YELBfA3o-Qc<CYr,Ba4EW!:sBF\ERM*J%ZtbK4_("=L_?@<<A<%bGRn.5Z>]:Y=T#*i
%TW6IP+FXG82ecB+?T[4sY8<^q`5Faip>o@X93_R7mS=CB3FG#=W"omDOG=4gk=mS_9.Z5/9W3fHflcA)!;idgOE[-RY:O6,'dRXr
%"V3_Qm1M7cID\rmM(3F6)J4WhLZ_b%q>1GE%`ZNl7=h-E0,E_pKitLsB04&uMEa@;ZC@pt*3I=,qC']GI9dD5%C"VN(M/T\qSXX-
%A3W<:W27tLf1![#Ekkr!@si\F<+H0dS0d(hqBmsmAAUQhrn;W36=brN\L.Jj25,TKEs\.nQni=a`kW_=DgQ[Y?69J8L+&0Cpmdi`
%,b/(Hfq_6E0+IoJ![L?cFb!T%BOM&lC1)+ONt@K0p>idu(_ZCJnRV.kP3m'=?9Jf17Ni,FIFb#4Y[fY?H%Erk&1foR?Nqg\jt(Sq
%OgB83a\S?sLJd`E;Ss4,JV>+4F&dHa17N_o]2Va!p`N8*'7qi9:f?b9k2LuO`PYP*aF'ZoN"BZXZ>9XZX7Q]lc[!b=EQ'iaWOrGd
%FqmHfDo66C&Ht0b)sp]r`obnt"'Pmp^BI0(IC<7<S%`QX,B00>das(TMW'*6;fO2Q"t]r`\En<L4lT(&.ei+e#VYY'To-ap[HW4$
%9`=&V<o51,k-@B8a=>iNm;#q*NPh/kaeG`4[=`9n.Y>Po3B:!E\n062B=gE+7`J\UiL@]i!LPVglt9Jm41Wa?^=PgEFJ?5hlP+-D
%;VKN2k@mn&,IrDjX^O1iGYgmm;4KUMi_Biq8T/OF<>BuE3BbQ(=A.XAP<-q?=A5)V=J=J4Q]q9"og-Q.=>6g?5:1Hgg8SFYXH',.
%@ne?B1*gR,pRJq%e)j'l@8Dq5nO5sa3N9RA[B?1b6UW0nlL9<;?&IrZ]&?!_g/ge)"manDG"j+c"]nu^\_LdK/LjTh?[KdC(8=Nu
%aPuNM3ddJ_cakspi`h$0e*Y3!8D]cK6Q_lO("D`<4kC^S_MdLo0n&NUffn3E%Trs-"KOUg'3VmDq;*E7d",ioDOt:][\:)\q?"<,
%&\O78%.;:Rfcp7/m%G9\7^h"d'\1ndc'>7%XE^-sml[5EY9mtM8+$0_?\[V1<2^nSiun6.iUMCFqmT-#o$*qJo0oJXhq=,6)X^7F
%36:p<iEq\=>;t<OD^iSPAb:f)^0snUbk'MTa?(lo97&kX^=^-q-"Q"_s.2*ugNEekA1oKN)(=VDh\[6s-[MlEnkPc.oG0V-lSko(
%F^Sc.7L3QG"i5A:0,a(=mBa9!epBI<:.e[Xir6Me!5<4.+81Ohf$PXF$W8G>kdoaN)lKbFlr5"eqZE</;Gt7/"(UYN1MM7rP6A";
%'g>jjK!"^_`>4Wf>=3W+Ye9WIntnO0.';+`T`LsKf;;#h*f\e6)?/((_b<+;8K.&hFP_6iHuAS[oDEUFmZfYpXs6TCgI&u?]-$H$
%'!_>-0X8Ua!7TD,g3/#?FtM-c-a]0+:=P!bDG[Er/i)^`1_Z&/0McUTlIs?Q7aJ"I>ruHLs'77P(M=7!\oqbF=P\^25CBXe&a[L]
%R^+p/ea:KhM=B8pg-MA#P[)VD"'0S;'6W[B\)t]1mLTb1$`C246RGu@QC]&1'Xh6'79R8dH["l+@CgWt>Uk*dg'PF@p1="!USd*+
%>s#m&qfA`P-h%o#"X-1)3S\$q\V2E>AaL2WSo\ZCFj`jpr[PQlm4MLPmEeQND[&(0mBhdW!/.Y$1(3sP/Vp[ZX6Zj3X@+C4]Wf$2
%pQ]-c[(Ts^`Vef$AaKKL*>-_/-l<D9ZfAjZ\ZdZ$pOK5MGI?]H@ER;0YfYV@T]dFu(0N^:B$"=<PdSCjoHQdqWg[D`O7?=T?5K=,
%88rc5FmZ=bgra7G]QNT_Y\h<qCM0'<SR@qF8XU<dadF4pCaW?SUT)t,dV4&HoC['h-6=LM-f$sLO<DD`f21,:G1pP'CfNKVIT!Dg
%E0.mN[U[a-m;s1+3E:1gd,Ji:m,YNnGJ]Aj@(=6<*u?ueb*;:(!a19@E+qD)C;-OfAp&6n8_ZB^9&%&FpNP&/=MN&@%0!E.T/,WH
%>M.ob;]g#R3anA9\<#[Il6:si]Qs-J?,XN`q;4?R#C:Voqq);&HhatNpH<tU*e%KO<k#.0*IQWE,;?jomN1ljHM]$RJe.VF%BFhX
%(^FpeLj)sm]@HQ<*L7^`YIEL3<Wh)X9_%q9Fa^fO^Zl%`&*:;VBCA>2D*g8:D@UuJDqMb@(ufZWQJrq)o8BgH5.2N-nDP?&\LX/?
%:&Qa&(&%OB"DGAOiG*[V=N>1sb3r0#5tb[DZfS3h4XO=nl9g6()UCm?8Wtg0oZA+o\'_^CEO[lO_F>.P31Z;,\$29YYOH5R,AAMA
%i%)*^m%gM,;_N]Mfk?Wm/Gp#m"1&+Le3:9CSrN^Ed2d"@g,lPY^2h\,FVS!s]9Pc;D)CF5,H,7CY5"aUY-A>_$^f*_:uFtNQm^oe
%L7nM#.RqO[;rkg$$11Y`*f\);#%PWB18CEDfNOB#3Y!a^@RWY8,r^Zi2##fcBSWeli4$ZubY/tMjo0pR1&p_L8#Sr2(q<snG05HG
%K39&)dKUb)QWe"p8i[*:PtS!T1h#np;Fg9)Cp<@[Ftqd1/f&HTDmr?B@Q?C7g`mue;\mdDQB*Cr[d_UOIeM$\&lW+kd:Q8'kTAV^
%Lj^_PmJ=_c3B3\GFGn)lceBVI,@oqf+KfLc8j!pB(k1NWp5Am>\Wr>$N*UcqX/1'.:C*QpYt<8[:W"AOA"4TX%1A,sWe;c(:<%h(
%k%04_+!3ohKYT!<EmAP84c11/OL+^u5Mr\)ke>g]nmf1+'B=bt463D9jjd_Z(cbe"@#QWn7mC-+@q9"fF%aF[_R^AOjq<Ei:(6<.
%Br`7#WK2d6mRX'geH]C421)o:<`m,)6]1)!W)$*eMqTFu=@+HjPL*`3GS#r+,VRRie-L>tm)a85B\e(\m&[uF4u&H2Y/[Fg)ek?"
%$/c\7Zr<UD/mXZN#;BsBp2*'(UTTl1ECBK-mP+LXG9Ip\LK':FDqhIV69^iNO)_D#A`Sq+fN'kJbR#+a&<s(ZFn#QTVQ;>d1>5';
%Oe?A=Y]1ok(R$L7#:B#?@t.s)=:"GO`B3YP0gC*mMl$@ZCBB/_cm,AR(4,%*4"48;oNVZj#>V;G$HG-8Nuhkj6fC3nWfCf6(+_K#
%'eO<K5f%YM6n;dW4&R^e\'f_s*G&tYS)hHh-/2R(G*?dg_4n\"E4.rJ0A?)M_6d]jJ!pBK]5:"JC`M\9.'GGpJn)T*ncX'J5O++o
%+7#L/Kk_ng5-I'X9t_b[c#PsP5&P6E1T%%B0H$W&b[<^GYa>2c5g*3JZp?G&+3`f6"Z^qsaKknPgp^qnp\^"l"O+)4&C6$`i/n7e
%JsljsG@@cnZ_6e6IJ['5"bh]`N\o"4RSlB=hPH9>3-XU)?&a>@MB_Y9jg'GPB'mZX2`a"bJ'B3D$QM7X%\oOEe"CU&e"BJ28;"K^
%D,+%Pg\F%ekeN(Bcgq'tQeH5CF="0LIAT/fDq^e&*uq4YepP^*0KMg3EO<DSMUQ!T%sh$)69Um/W'B5mlusAtN&rA0Ud8G+Krr-:
%7iIeKSf"JA;!?Bf&epoAKblq=I7]'S8m8Cp.Ld,:D#-\TP"JtSjjl7:@!fME_iX\W"pLA,]1djG,'1D2MUnR.k%RX>I&''aYbj^W
%:LY6lq,0^$eG8g(#'GA?e"G"[37=I[L,0>*ft:"23d]jWK/u*=d\+n"AN%pr%!EQ=3FJ3Y[>1#M>j(V2VO<[.I(>?HOPD1Kg/9TS
%b5cmG74(=VouHF,_`!jA,cJ>ZR*\p2I[<PY2$jUlGZHJ]?!nJ(dj1k0:=kq(=b.kXEBOV#$=<-X<oQ"cq)H'^LF,<H6\s_mJeH]r
%m[=8)'dL>+)sC/]_E8.iKT@CW)cfl4q'7:QSM,+26(RJj,cL;rR07XjacQ^K[N:X*c;nNieCbp6'%GTWQ3;>s8^er`F"A;;Y.OCq
%X^oKA@M70N&s"<:F3lZKl5\Qm[_=B2n#-4Bmh<l1"ZYGh8N;V5WIFn@Up<$4G)Ygb,(tUf??nZAkB^ID[q?[cr"s49Y#EK!m_%&[
%d$uS;;_XW#'+T2X+ot<s^lB;)-V,(52N17IU5'6f"jD.)fio;6@O&U<Rj8B7gfaC$8Mt>3!(YEC;En"^D2W:"8F-F/jWP-lYEBp/
%,W3bW<ViO7`9j:^=J$YJfC\u\K'.p'%[T[R)&7[*]0'a^TZ0R;23Si:#!Z<adM3,R]]s9*XgN#O9$S1:k4I\Q!n.b6%]+HreTst5
%M=&BpRa;K"ZMt2`:=gFs`YBs'D&^AKY4+I%/Jl[A6N*V&6*OKO=c`G@(8D?WX7dO"*kX\]\<8=N0*t\nUV,CQg'_tY?;%f>+XUIM
%W$Yb40M/d#?qe'3]G"9kheF4CJ]tTdibP]4n+g!tboP=,Hn4hWn2)[ZPG3NY%M`cne[uSmQu@]+6'Y()>G9PEG<_8Q>FjE/Dfrsd
%DhSFM[V&Ri>?XgokuN!g4&*3$i91]rC^c!!J%O=BH'X*T96p/@_UT(2"hp"M/&4Y%P9aB6bL6RkZ:4pHBe)V.j(_=j;)o8lk1lAB
%9Xp70Ee.&0T:t/c?FA"*L1.`[/(K'&dBHD=C4"2])WjNC+f!6ha(^lT_Ne)Zj$to]$=dj-'/\MP]sHIkg+5B0:U`AnVHX(jj4;hJ
%MI>I5?Q3pJ4U'WdJcjH?*f621/$'?5Ds@'uBM,-1*r/iMF^!Km\3fYGd*IY$9M-e*mu/b71u0D;aLD<415V<;-%h#%]2PkC*-()h
%PUdV@Y4s4Z=+EC@G@t.egmq.Hi\[='FLo,P@W#RV`mk0VN%9>KAkmjo+Wn&8*m_?b641I2[\]GQI/%;[GH0CaR],`*I"UEb2PmpO
%0E)#K'LD&V<%Qu\?qsVTlmTZg:U7it!gGhh.dX)Ig?baOF`u7DJfQ.u#^Zo2*<iMcCk#qb!H.cS,4$^cLVH70;>=gj8NGF#JBtTI
%m$YZSn7nK!W+f2EXFCm0\Dk0)"Fk(9A-4n#=?C'$N?&24:QNp04).B!Y]-kBAgh!#lsN<aN]0*3O;F09Fqh/ZQH.WTJBKRg+Jt6.
%eb9M]7gV(9#Y&tOi9D\/@7LWg>bk`*.2TGG;>P'pe0b\4XmG^.IK4;0e-.?a8tb=_![4L5(QYfFNL8DjLH`DUUOY@#`p=W.q:[If
%meM9BhGSU\q>jXOc?LH.f6t9<KH2@@pRF$ZU0ZD`7m18.TWV>o+\[(/"WKNq`le>)hRiI9OrRP4mfr\3cAM_FYZd=d9$WXmBn.)Z
%K?'9?*pLd[1g<kqk;3@B8V@'"[8pNfZM*.W^)T`Z6kUc7l`4<X]L6@$XB72?3(nE/LKX3O1LippTI+l)OWDEE>nLJP/<<7K388=V
%DX==h$Q")#K,6W7#*U&RR+F):4,TDdA0j_XCsHoB3JuHe(*kntPBaZ+W4P&@Yq?7$/?qX?-95f[$&]clGe'D:NfntS`7^qrX5oAO
%4c>B<]OJohI/lo1.#N9;IGh^PNqTj]Z3tGgk;C@YS3KYE6ci1\e*9D_gA4^h;)c_?;9uiP#ru`Aj"bGE(5/et4mI[c3:!X'Z-jVB
%"oaJN*!"#o'&YdoUIA<^nf31Nh*XHIEr\<h@&!5/hA7?6F#pe,PdblIKZgC-!1j:s\gi&hk<R8aCQ.C@[/.]gc%0!eF@aauDNN6c
%2L*UhDD5c7`7biOJBOOfI^nFfGRfBCl[3X\CnYGd6[2h1/X?L.=AsL(k()k[asr;&"Yp\%5]Zp1S!,*gF5Y\AqarHX.,R0EJFg=h
%_!:QIdl.R!g?EL>1]=j)1lUQNO7N`46H$2O&Behr,R;,qX:s">loV[J%Yl[ATZ4)Z#JacEk*Q/"%VI]J!"mD*BC6:;6=;'!&F.LU
%Diu)XR#rA+Yd#'TF1d6ejKQHmEZjM7"<Q!#e#u+Wclg'?6Q31oD'6h,!RpUIof@uk[I(gPA6VWFT]K:]+%C73ETjR*+ni/oigs$f
%DO=9@2L&(=2HVC<I+"1N,0,6f2-`u13"C?7\O'&JUTTA_Cu(\A<@BP=A4A\8pn]V0encI\Uu4ZUN8hXU=@F)uE?M^NpiL>5W3U%U
%#JfBh%3%;;`2ph;EZBn+96se%I2ju`O':U(&1anF:6G^aF_ELm"6%3f42cT$JZ0oM)eL@N)f0>FD19-NNT>&2);UPQ\Ur=2bXbs4
%YJtQ)m"L2bP_m$g%MB`e/UiNg*,&MV*1dQDR\a$?$$M42XS?e_(_3opg!qN2YLt%rmsrN!@)jp$X>(\S7bg-gWcYk.IXP(C>lS_T
%gk:Qe%iQC;gUV*9!*f"%Ue_(""[n>6IG*A";t?iCV-ROtYQp#E%:5i?^nK9$1H5L`i_<aqM_'hu\Q533`5W":S"sig]IFg_KB!>o
%S%O=hL\_4=6OdiO]>OoYFkj7k&n%?28too>T=`#GhDHAc&fZ@&`<3k1Wpt(1RR.""Of33&Of3P\A!bgJ(?jI9_!Y_&5$H-e)i";B
%99K&QAE]q,cTXL)>Wabj'Sm&:)3c.I)Z8TX\ZiB<?K.0*=E)DNG^3kDP\q@$-i$"=[nOBTIApEtAWM\Y>:-&*Nbe'=>D@i.]kXse
%AQ&%d,Bq>(T^Ld-_6R9<96`40lqfrjD6ENZlI@H@09]E@EqIPJGk0hm(@fS@aRY3:MI.\f&'RGV9FA.8F3IlkOKTJ@9S15tma3f1
%9EJq^GKSp4!B-7qQ]@IJ;RqBh#&s97Y'=Q/<PMKq1D("d)8N8[(0rVm[&fP.?bsQ7'4LRXYe7J-)sEY\Rp`WcAlo;i'rSu)K>+NJ
%G73S3hQU5AY=n0gXI3]*"g(jXRX8XK%boltNYrVXp:-PNAg/!11HXqER+S>j@<]p`fGl[a!%F_6@)9c@>O(YEQshjn5MX[?K5\G[
%F$2<Jd4_hM\GKjs#6qq:KS*WDLW(nKb[uJ&AJ03n&"XY>Fa%;SG\2J+59l"t#2%)uFO(A-pUR<Ed5/ZXmo,7,R5bb0@tk05>mjUO
%1DiW+cV1@ak7*FhN5ASW:)l'kJaO'.aWkuG3hiEHLM0s12>VRe\?L!5S&cR*kdV@d(WT599QSGEQoeoOo_UGb$qdNPGKJQ^NMs=\
%X5\s"34ePsd0&G+/sLH`GEmRmbIjuk1&"tlQ56Cc]-84R.fG:G'X3+*>G-+s=)cr$+[LN?DT2_tDfS%jVhjj9Id8>ai4/+,@,5sZ
%S[\(!&;'V?^U<AGYsO$0\jid)WdC^d$'<)2f=C"Bfqj72Y@I!*XRNaeg>KC+3`iVGDnAbQYMBE8I4X6`>pq.+"+*Bbbl[Sge-]!9
%O#;6I<gj3C=5p&VRKZq`%5:pbk:5JoQ"Fs%<LSnd*"FB>46C>NoK'<?a>1)PW9Bn\"a+GQouS*N-9)1=*j2Z]I%SM1[8*$!#r>t,
%EE?;LM=S!NB0GRWBn_\Wc7H3k=Dt0mAg=s:B6NC^(NA="D"iAZY?J8_^"AFtR[l"2>P960A@1.4;d&2u([EWhgWS'lqeufKn@>@(
%!KXkr%NrFoCp#lN8oILidp.3--G9jj-%:S`*<M*EBX&MgTU@`0Iqrjh^T`'"r(uWp@a1*`9mSn<kE=]a9rjlh.(p'@B];p,N,Q7+
%r_7_YE*cKZ]sL8.&o)?'Xm+Qo)]At&A,j7"H?_U_SaTQqAL#1b\R(%oSBuQA9c50nk+KDe@Yhgi;P@QU2pB2OD_S$OL^gO!:/**"
%`lA$V6R5nq0gn95?r4fRM,!.sR2DZGOt0^ugBK33T;`YOS)_"o+TaN4B%''L(0#TOS,m59K!'gKc<.rsjQk+ngK0A=68:l9`QC<R
%(a;eS6E1kHYd<':8)CkRV5(H*&9"de+l6UuSqsMU3%e^VNg8C6@Yf:.4FD.H(a?2H]Nc6f%Y62pHIG2KHaqJ//('a5pW=*[LtGTm
%]YQ(Q.&4[oBVpQ0K=SDr[TN>`%aX;1ib\I^90?<&&NPlWDo!lZ#gB`5@tk^*"/P^$!(fS=Kc@(YXjeG_!,1E'(C<EPQj8&<+sO8"
%FIuMD&SPS2MqtqJ)5pW'6&s<T6]C5,6ekON-kNEH<2UQWZ#d*%X7n/\A)aAeKOX1=%$>&iE2##)&D82,^(`^k(is7>-a&1AbH]YG
%Qu_Gn>1PJS)39l5#8Q,2MA@Bt.sY,lTR>O"lSWMrhQ4?,^r-f[%@6Uc@YgOa_d2<^FcQ(B`=OtMM'3M?6t-luga9@b+j,G;$RD_h
%i\m3)%$@`3.Uaf]#V9X<RM[7-_p'=C&D87_+1%r@-e?Ng@8./mXh72J'LS[9eG:+2L.LZMnNR[S"FO2C=ATEGZaZrh8=MF6kGEu)
%G\NgLkC>JG8iKQUObd'l0JPsJVPf=n8J>__Tdn'L";fl/I8M^e>),P)B"X7.o@6@D"2Kkq\\o$ckBpJnkE:a#28gGGEelZA<,Q1.
%.elR_+$Miu"G5k]ZJGFT90#E66ki"914R#aEY:mmiK:UR$)cJLWGQ8Q:=_`!/g->\>-lpTSceYiMj?Jt-lVM.8le'8cmj8]d8fWt
%U0?uT;"9bhdNaTkYM!^ac3^[(\Pk+4.fcF=cAB)ag)PtuA%iH*/9fD.%fR>83)RTKL!m'V3?,*s%Tjp>-m$&=Jh2*UCojZ#<ptFA
%[^i%$KH<u-jPAY@V0^kZ[YUXQdotKc/s&igeTG!`*1/P2=2FJ6LY@WlFB9*$!H1V)\G&YK$D-kVk-8BGLO>UjXL.!_ZZ3T/*]5F8
%=N,?s0eJ3Z:=M!_(28aQ]g_$9X*B)/-*):)]s:[$k:83V7_2t%:.O+om3D?spnd)1-09nr,nk;^>:Z:dfW9WPmOcp35CG3(MWZqB
%.\:SJWd&uF)/Y]fGmKu(Zcu+DMW]A6GKdDO3BqPM>Ji]!d8LE1S5^=45A]hhn1[_G<%4?@i)SapftHJm(]P,okj\o:0TOngK\d)]
%)u>Wi^7??=aAN6^ij(S:FuV[_*a@$]-SPd+ES-??A17Sb`Rt\m9hu3j`?AhW>\`%Fg*eN3'q82V_puAZot%MjnFVJ1aFuX2=e^3Y
%Eo#BIa][%_!II[Wlqm=PkIqs!MuX3rj4=UQJ)(Xu4&[/d=S2o)PG\_!KZk]uPkO]+JTqeP[T96]Y_;?[I4]C6o<?kum.L>X1EK&&
%GX65I;A3h]q(1L$ZF^=I?0^TQ36W(?g*ZW#bun>8Guf??Y@ZTZc^4U:*-f2?6\4&4i=VVu7t5=dE$DJWP\V#?fLuHM^bqcE5(Eg'
%YO"8!"Mu2o.QCnLk9oPk8$'!hc-pM:BJf2F2D]H$]g&-3mpSqi3!=U#gm/YeU$6KbA]*U!34n[3pi4T9>%9T^Q'KPT99TOMbB""I
%%VJ3=:&6$G:-$p1aD;9TV?R31@]S@(e_DgpVai6T!G!:TGf`6a$*YPp0[pKH3UXg_Sl#J>js\.C2pD#A&_;g0rW#UHN:6!=m$Vss
%NT%U2<_HTUb'Ct:lUuq2Hs'k)Q[.cHfXOOKIb%/Q<NZTA9#Tb6e&kO9+'6#pWl=Yt*Es*@Yo%1`f\?\`Zh6#:K9#8+KYtZ.X61M:
%K#;p0jPIHhmR=(&4cDU]92@FCaE'2@L/75b>7KnS0mQ!YeGdFi/H_e"Ymta2!$+_%[@7&-/tHH#[?EIhI36N]1h*KqW28#'VP-\M
%V:6,A4Y6bE(3q.&E=3HA_E<0g-.VR-XK$gueH24@J]?=JBFTm9"l]Rk6Md&FV5*gBNCgOnc;c4.Z>+#8AQ_k<_\6'>@]DqIOB$X[
%1op>)19,T>E*U(dRT7OD40OGSB>3K-GfHgg@%g8GA_"(H]4VXX<\6DN8-,/ZbJDQG>+FRE7IBF#nuJ3Z.g'<u=gc%7/M9MIXP++f
%=g^2U=gbp(E8%[DNGE`YA4Wc_W0s4[7ZRb/7pVqlAEPh_DWeH">N/lW;ThGuZs%R,HB_lB/ZQ8q-U(()/aATR&KjZGXWaZlV:Dk1
%Xha/CX-E^ObR-/0Q7oX\713ZG4`=8?;7?!dT`cVigD'd&>G;J%`o0X.HjEKA/PcOe\ak$6<=@%BW)m:W8(T5MaLk\aTn/Y-e,WWX
%m07?4/[=^VOQ\klUc=d:"H1V;cVS4W/RR?-(7J:I&+i35Q;u,MD^=b9<Qd;H*r02E/c3O9m$^qt_,3?uh6UinNja2s(1u*';";>_
%,h6?0=iZ8mg)>&81oV7%JVumY<=A/80:lh,?Ee4%C/upZmWMj@C4QgIZYWdP4"=C@I.l9k9c;EVXeL*0<6GJ,o@h/q0i?sj2\3j5
%Q0K.^D/]pP>YV;2m0Ed)Ej'Yf",g_9[E\U9)+j4OEYXb"e;dYu<]B4j2WlfAcUb'T9_m;VYD50[l``#[8LT2W$8J-6<'s4*&s@!c
%bZR7FYj0)ZSrlu22l^C6!V<U29M!kKcUS=U84VB1a[W:O1#a`'W<R!Na@<164[APHeJTTIP)g<H/EA%LJX`"MP'j'K\Boul,;n7g
%-1mY`U`Iaeo6d@B8pe'"D_!j^c2IkcjYgH!(<9DFO]lc1Hd"upfQf,'!qVOXNn(ul,H5PA@lu!8AQMq)N$MGTG/B`Y8V*uf\X&>q
%ZG.HEQhVf0`N58VUf`+m,pWLsHLR)["O*k\=[pi"Gt-3lHg4IAOOp^L,Xp?@OtQ)@CG^$Z$`tN%\!BA'Rk/IojQadsDRJl]@d@5+
%<-Z$:]S8Qs$+?URbBltsa.b@6,q#Z4lV)(S8NZ&p8J)Fm8J/D$,Wr'931o7WiMER;/p^8*hS68h,L>qN$$G,5ZU+;DCMh>OGMO.^
%%QE`8'[s(K)fh)qB9ofhS0[`&pGf.4m^1*bSGqh/]O7m%r%S]P+sCts"g%NBSrs5$qHYD7LnV6/]98<[ba.d\P17A=fi"!maL%2-
%*V5Mk*VS9`3'glfSs$IuP*3a$\c`,G)s:I4EjD!pKP>p^!g[@C!F)U[Ua<j=N"t?[[%nJMKU.o,gU'Sc1G.jC>in&B-,I+E$,t>U
%cmWbA[2:$(_>OqnOuRR7=dFn9(jLI)6@-'J\F1)gQ]R3)r!8)<4R.<pg=Ii7SFW<->>P(R0Cb8KIh9osD&(TK!QT9\PC)34q5pb;
%'Ck;phB(-OdGkCX/i>Q&Ze(IHM]ba+%M6&)(<dAo>AG_lEqTl:04e]uCr#nAP*d"(i+o1['+"Mn`-*T<*E"2l#fa;8UYU8(0-RbC
%9Hc<%a')_jTS!R*=5pWic-W1g<Ch,Z!9U[&bYcrGV]>u.)QI/J!q1GH^HQE"W3C-KoikLE'YsL7Ns"K%P^6NPD2)jO4pbK"2Q+F-
%>SqaB.q/.h;g<g9:5j*W%;"8r,LIGl5nm/(^`3L0VYiQEGC*T$?T5TqTrdKJ:hZ_!">um4/NUtn"m!s]+ljU@[=;)`]k-,2>mJ9e
%%E=.M!N\KrE#r7POIi9&%ad]-qmbs\$5iWua)DtE2Rsol;+1$##!,hKn5SsUhmgPE[/cFmnVr0=l@(;49]asU>HRdS$5X&S*9>g>
%hUo*iQ/JscV<Yrs4'`_omQVBk0:n'N1nOeMY-O]SmBMANVUkr!a[T:&][0Odl*"eME7_=XmJ)XHNhd>(Eh?(.2]YrD[FtsY9l.k3
%):io.TuF@)BY,U"Q-NP0p-ZF\e/B!dWV2V$Os>00G;s.8bJQ.'_ut5d"8@rir-A"e?'f.F(di(;!^"*P@_Ob>dc+F';Yi[9<ZP/d
%<JLn+IUG(S,3]Wg]osOi,^P3nb3)qWYTlMHAM)0J$pi^oZ95TT8A"TQZo9DPSNK;i$t[Q>lFQV4&J!i\q]]+9*XeUtr"tOYiNJ]:
%VFBIs(LNFi#Go_K?_;as1iR+"?&p:D.=39:I+<[*:C_P)eD](B;\/hWob^2k'*m/f,tdL^$c9boDsi;4bU`e-c0=:l7]=tU3SEaj
%G0Ip-BK%(lN1&c3)IV??G]i0r'@Y@ne[*/iAYmhm=2b2E>Yisbp`/&;FkumCpA[+3oHc?AIX&FNI1XkdJ^Z2jAWnS(loc)ik-Wj;
%"$.b,?soc;@+hrQKZF<a1gS#r.)"<[4YC#/"C>o1#Oi?.d%'2=EF=Bg03oV7UbV/nOJlki2ln?3`-8^;q='N4GQ@;)\#$ISC@roj
%m[7ij1NCc)V\eN)U/A9F4=1g3n5uoahT;?ip*Kj83eglOr]Ju)ZmCV]rZquriKXb1HJ6=-NB=16R5G<9n#0"cXBD),<7FcTjB.ar
%I/S>@4.4C-/EQ`E9EWQ\'6+p5QFS%'`d8[tE9l1i?J*$J[lTWXeRORi[*pD5[@7jr!>VYcLNGCKKBs"]CbO*#04ndFn6)lO1&"Xt
%0&D:$7Rbh1becFljr1;3(1c<1#WXqp5I*A*5MZ^92W]1<Anb/?#iG#@U#^&b)iHo7;)>5NKb',F4jVrm.*MeIY`>!gQeMLI@lWeo
%E-UE"I1F,U?(<<T)G^;me*8o,lkF;BFRMidkF8/=n;Q[FpR4H4_OO8s1L-,dSJ?^M"2?*g`j6I=-WcJuCtV5p`_\Cb\n,=Dld&kt
%pDP[oL[La8)KM-sH",%!Z.Do!BRm!.P4O(HT$JJ*85nEe*JZ%BEVe!cD=/Arr:]KorCKrW2ompq!S-,BI!F=f!7L3dnjCXP-hG`@
%9;A^8UGhIH-R>hE&Y#u#mn-I^(7Dh+bIGPC5%)VqYE@mC[[-S?j)s^^T[2;2K\FZ%WjL?EigSOVT<c<"6'[GH#MeHcCL)+:XV.M@
%RO!,%lcsO]g*'ljX4<7Ja/+q)^X@q"@0ka\q\,F:i6b,40*IRKkJUcu-L"#h!El(K,0-$Y)s7S.6=9PMGrgUX?uX,*$Wr\6SLCEt
%c4+Mt.Gs4,L/oJ+]^KNrAWVup*%idpR65/IUr-dk-V3--A9!1F/=C=i(t9@\);^"rXf=]]@JEIKU1cDMe3h&9*EZB?!#@rD\>,Bf
%2WuZ*hkEl*Gbl^8!5n^<eodV,8i![k!c13;GUMQe&(F+t<=))ui3aW-dT5`KXbOYOQXDO?`h4jjYbGs`$"BF]daTttDFM\R&D#Xk
%M%#.jQSqQL5dTKE8PH&W/2EdgkB</_d"s;oWHg:4'u/c<;pqe@14Z8BF5NfQdOBX.(T8+.]Ye%Q:r#bOBjq\=l%=)_*5(I=3[-p`
%D0A>uN8rh/-#k_3Jg5Xj;^cS:^$!;0[aW&EZ&rVDX#eZK_W]LA%i&ir4+Z2&dEk>EqKho%:j%Pl2>a92`aBMT/D;5?9jb\>8+R=a
%#Fk1(Tj#+r2497<bo^O_=fd5j##G*tk01%1k1gEhK*;VZZ<Mf7)Y3.dI1!_R^kW8qCbTO%=XKZ$Z=-XM&gp_.(oOq,TPjQP2S(r'
%NBW/$:ojM?BI3:RKIh$^WM.ll;uf7RDN!c1CYsn5p9d@.b^Rd?'-Y+t8!FRH/Z,akF1o-7O9^`%+i(8"^n*och:;b_rHK=KlB>J>
%G,P0+kq[OKDo@^Yro:*5#d>>J9X8f<js&VBR+5p.T(i*qKoBeoii.&KhuF/XBnoRW$qF-Q"-c5/g%jg8h;nP1^%YSF.!h`(4d7/5
%ZD62_G_1]7-@:jM's'?>Isu<]qY$9Fbn86aS78rdg\_*_hu)QlpMXqMjHHDpc6a(*:.-m_Y`+BSZ6i6@AR\]MCf5(G"q-anDJ#$d
%(I2$>"e,d.rt$,]c5D^hP96^1\q@]:0.FVDILWLCM"c.K*YKDne;@SFK&]!ZS1FU@]O#Nga]"Rjndup@[;!^^kj=+4/fnUCSM]%e
%])lg-2698,N3[f"Y>D;<#-=t3'%<IWd=li0B`99FiE25?06#,?I?U9bHqHCDD&>@[:*Dajq-'M6%BbIppsj5OU85,?;c$TuBkj7C
%%_$*#oj+b=LQ11)DE_GT)he&#P:\f=h9<_F]$\=qXi(RrGf]gJiJq!(LhLV[%HHf$PD:)uAt+\Z7O4bO)E3En!+*LQ5JP+;<$AI(
%]9#rh5Ccm&&1]u=?Y3PK1`-)gC]iLmcE$37K6u&!DgTGF<!J_5+$F5+-nCsQ$q12.-15d%E36D.!B6ckbf?`fKaJCBRc(iQ(,ecW
%W/h4D"0Ue.WY!E/b#,jo__"l4Fs5bV.pO*lZ_&m^Hc@4!!+<X+0nB+cr7mGN3N'"p&=@b*CaY&4YWAFcds-VI&b/a.89"Eu503tf
%l45Nrm%D*O<Wr0%.'c3?o'.fIl5]sb<7C1D_ogahQ?'ZI.V_CS70BcP7/:K.Veqc?i9Kn$7fGdB.[UM/%b(*C9)#d^cokAD=Xsu;
%CjS9Za8e!Db7+'d3C:=E5u9(g<C;r:5j2C^@AT4J5<aHXQ"&p$:@V7-$Rd#g!+BKs^2q@Ph^:/#R:AU4c?9ua]MQXB3&UiH1?.h%
%hfFC!_<Fk33.*S6V`q`&`[garK-+6d-8g]46c>3hK^BTn4P#Qs)?n/><&fBZ_568VcqNr\'/KkYTpHOVccReA./H5(o8%\W6r?D^
%Fqps\r?^2cIApX*.T:$9/ko)0k,&r[G;+p:YYQ@O:&B3Mrq$l%(A?*[)q<)gZ!k181unj>jH-iM65W0)$hjWW,?dL]8Uk(FUiE"&
%SpiNIkQNZhbJ><m>4)5iX?EZP0PT5]VL=!V*J"^oS@XZa5-haC7YnWl-c@[FegY!,K>@$b7R"kPWa&qDZ<GtejR6VjcLu=gISG-V
%fQ<'eNPI(hJuX2u4T9lU>6\",5;odJ!saU?<!:[kN>Z7'\\SBYUKsM[MZgBOpd*"[*mguC/#Td^YhCEALrRC+Fm-PGI<Ac?i0$</
%\DWRDVDdQqC9.;U?+u8KdmAZD%'V[`qTXO*'f.VcfnM*)f`j+]f`nMGN).S[Qg$R6AdP0SG6ZQML<XoH9P"s_FiLVl6d5+l!Oe`)
%juWZW65.PL2:qKVXPbR!YV&As,eKZXc8/j/@j<tZ!*a#'F.NE%^;$Q6m"G;E\nQfc%'UI72W#B,/bWbi1LTW5>.uf.[C@gHVN.$(
%:XjT3;PMq4ZFS8:Wo1(kcA4?a"&^UsK@Fm1Y]_rB6d7P&<R:S+k]321YWC'cRH$OQB@=P)D)f2[X7&I@2e/b$B("C)XC<=,(+=:9
%?eW?0>'lnd=AqA6i&:aS=q9[Rj$5TJjX49TLmZdFU<>X,[H@pB3R)FqSS%54F0DUmlsrNbhlE0oN8mj9V<0VpQe$8f.Q?r4S7]7E
%2Q'^U]]E&E;0/-o<'=i0=W@;(0dER.Rc#qG4GF;e]$,tENj?4>LoHJFE1(]0gD3RiAhq>lB-/b4D$2DV).D8tWR'o>2,)5.G-^s4
%p9XHtn",kqND?gD[;>b4]);n?&9fTUmXP.4@o/'3N"[S@%>g@F4do$WRF?!<9Qcf[3nTs7chdTse*Mb!rUIC@c"lpV>W<^7:_Cl7
%(b97E\OOCh;+$ulZ/m-qD14*1h*q$T_]V9LV#YUjX2M-t+(.7XS1?F-V:'qJY-1Cbg.PS="VOCQWJ/;FikRDOjuX)i%Z5a7(kis-
%r;,BWQYW=.@TJNj$cQPPWRGu2Z.*k:5Gf*TYTeXG#OE?S2DhW*eP5(G-$@!.f8o17fsMkRRC]nM-=dl#O"l2#!N[ff"A_NBH\gq@
%7NdUtI?S"W*#te&Pl#S0GQA'L`HL\d0JY?4DW9bW,g#dPp]tZ(;e35+%,P[n''Okpet.VEod><MI;1GX=<4.jr9`<B^\cS%(a*Lg
%q^]S2*-0Yo]oD9lj%EB:NtKh^f#.j/nsGnjI<(mJ?M8_XBc-fV-18X?_EUZ:$jAHG!eMG$Oc$:LKTL-&\`P$WGtf/Zfo10BABi@i
%>Rbd#s-+)H.T7u@fiKqIo6^3o#tghh]4QIF:oS`eh@()%gQQLN`B^9.+pZ:V6*J!!2I$Y).M+F$Knt;;=>3P`%L-['`BXH&P+<Pj
%<3:mmZqkoo4(O_,@KhEoR+S=4\NMnK"Sb[VX:+oYO719X:&C0D-Q,AMKYe#;mrJ:.;1(01@\(r1[>ic%K$W]iU0+=HMILGW`3Uig
%4X^fi`42.R)U:<_j##a>\W#!h2_/u&U??TBZU3X-0ApN683o&DTZ3t7Q8.Fl3,gh:[-_=hEU'."]-b\#V7)?3p28&5D6:1(;g;k4
%:@R1Y_$.POhMdP>:g,sg]s96QU=gkeag%FS[OF']@Cg:WG-!\hlP-U3T->7+<.rLcnO_QGp9[]E:';NTpMXX[`(&]IblR3+s4Buj
%CfCn9VBJB=4pc%Y9oLU,U4AZEZPfpYa@9s<!-PKf]$OR=I_R^F&&972&"G8#^q/a"6;,$)/eE9'J6>ma3Q+DNc]-V6p;%Umc*\9-
%L_Y'K%X1I6[G-a:g_6P!$$F0CT*>dK<hPLU'-4,4rOKb5VY>Ol&\%)sp=X%NVGA#cURFIcXNAKOFQP.`$9]bM9dT,9M2GRNC_V!8
%c$A66-I9rr/Rbk>.(9+kBoSXXlTdR]):$OWr*->G]j^cjDt7t)[?9<aYdGjM2#Xd1m@KXW<Tp-H]r6JU,qpS#BU@b#V@Ojm*"[HU
%-^'H6[)V(b8B0DJ=V35nChl2gIhLBj5Q&T`8TUt(,16dK\QMfhJA,8`^:#iq7a*%X6Pu]edcR#8RN)3NfL1fM7r6G4"02C>N";_8
%2uU9!D%R5.=;rtp6\X,%H+h.\CC-V#<sMr)Q4@M5"G)<`OlH!PFr`]]3.J8A&+_$DTbAfj"hF>M=5-hRraL5N,#3E1-$t""KN*Bs
%jBO;M9t(<-`R$ijS'LrsZ&,g,JRWP.WMa<uBcWNd2RR[H(150A(:&0!p#jBL6"BYuN@m;Ta+5';n(Dc3ig&r<ZQ3%P<UXRD/id;H
%U=^t2q74&/rQPjS9#VTI;5jYF\?f'ql7ALb]UX6eME,^WdgI\CE.0(S['E<ReN6c)jn,ZhYpK^U746L?ZFcN?[4IKM+P>Y#^=7Ph
%=IWN,EXUsU-7T4;Qk%Y*qfQoI=uqS0IYYN>]>B2.s3B@LFckFc=0f=(+t'sM,t)Qag=i;pb(R0X[9T&U@p9<O&Z,qAJSg,GhdW2e
%#R>(9\X@"9f/<mM,pNm9[q&oH%:O^(")t>QkD7nU8i4R#m?[Fm#X@/'o]<hiLTh/o]Q)i'^a\Qr%+uW`('E&-iBZ4X'r6rt7rFpn
%m1GA7Ka:2%6\H]$(?&YT%d3"0^ldCBbcUq9%Qd2hE1h6+Rii#VT^IQWT>pq%mT/`'iu>N^2QLa9qH?nZ*Ws?34mW3nZJ[jZEFGaD
%'B:#L,Xc;98phkY#CP,J!KMQ=P]7+N>];m^-qf'm=>40(bO]K*ndsa#d(`aBLB.lmkMa\2!(T5lBrRE:+rl-V>)sNZ!+sVF$ZYO#
%`Ai[>HSjbtk-0hmL5$O8KIt1Elu]i_0b3I-H]/'u@(GnUaFTqdbMsb0%C>9NY^=^nV8LK:H]TH_=%\97NXN:K3"L%;1`V9R9Ne_]
%aMSu0%KVRAVD$j=kLa4"F.iE:a(6RBEFERX#[!Gr_fRWb,g;B<bf`]'K+6OXP?W6XQm7&dLi_pe#<F&FOUa5:>l,^73e3dHL%e+C
%i8OZGM0&_RmY=4lfOO.hdXdg7qY>])%R>rp09M8S$ppbB/U$KC%b_FP8J::/f\F(Hd3BYOK]ho!@ZA,VbOA_?TH68LCU;OB.6h([
%qA/dHR6Fdj.n2QZe':,)&c:$$*IAlTUuP%u5DsWVW53L2)*rJ!(DHNo.i\C$]U64TmObWHrFHR_2g@&CH2HZO\>O:b:d)A`ro)H7
%?4d[kRHo<o"O90+oRHp@o((EVW<BO=-!>u7!@X4nr[Q#q7mjQg!BL0ld*9$c>r&V?jMuhNZT`Bn?G1rUoPoYA'E]PfHo2U^j7aAI
%N_mjU/,?a)BEg8o!1DK1H[f-9@7H&;/rN9h=0<6\4pO3W;I-sJ7M/B6IXcn.LXqaMnH'1`+)g]O*`BW2?/F4ScYtkA?"2WEr\+KC
%UZKL;.@[6bp49&ED'u[?"c(f@%4o`JioM7,EO.J<;Kq-_Kal9oGN*4Kb;]^cB&P4M)b)2m!Y5)u&i]>U_h7<]5:_:9&r<%PT[h"J
%gaoHU&m+<a8'-2R%+n]7iDSj2(j!"l'E+!19dnqtOFW!D!jKJL+E;JCS@Eis8_gse,];Hm,ArgT6n<0hDe\8Ij)(*e=P/26al[CT
%!cd'DHD>a\QOl)Yq;U%pRg"BnVajRB\]H#S7nn7(b,T(:bfq/Lk%9:+\TqV\:1_Yold<.D$,fOJR?\+Ei[2Z7hFX/LNiZgOig.<3
%4?gLoR]b,7^-'SFQj;4YF7V`QEnUnBZ^csL@*D>Q>*gfr2pmb!X96$h2`\ILSaV9Ca`km^Oh$>-3gW4RR%#DgArO9'(@T=FI^I.@
%DS#rJp!NL#"Bol;-\Ss3qUutohW>!NF`J)N-EuR$&b.OAR.E4[=Ep=NRd^!([tui0SK^"E8a)(l+`:Np"aAW,E>.6nILW&hU,C[t
%?SpI`g>*sL7b_I_q0lR^Ri!7#1E)gmH,3Mcd:o'r,]=T<'*G6/F\^]P=?=Za-r-WIZ\/ToD$!Vg[`I18i%m#n-!?_Q>$dd9*<(e;
%qmj$k,AaGU4DAX_8D;#Fe-FPO/!Ds!;B@W!?bt?eLUHE]R%]a?gXaqO2`RnW:o$l^IXD/p6:kU`q.Fi[e\E/"U',G@f#*O,$W0m?
%Qihg%dKmd*5%.<g=TkXEWh=5=``k#LY>6f'?CQ;tZE?oOI!T)$i,Ip_;]9p7JED`s0PJ[;,OFbK,!N#aYd<(>3ES]YQ>#Ko#<6O:
%peIFAo+WfTlgtcQ&lt?&>onR[-HrP!1Y$I:?>JBtVU%M#Kn)IC#,AZ,GXs=^l0D9['EeYWogAcjN8t=0[>1ba0cdrOD25U-a>`A]
%CP^`gZcj)flDI0hLc/eOhEk^&APZofNlIrSW4#sfa9C"4#^,g\QG\P&QbDLDf@O:[(W$NajcW^F=Y4j!<*F4N0^E2k"ZUCX+"-pP
%S4$LqhoL'C(Rj-1[D[SG7(t8/?S)`Zf6b3YOFVZ4AR/CJcOJA#%Bo=@"1YacTb.g66-+Ek6cRq)K0E@sOG2n5fXPTKNro-8Xi$MJ
%Y\J%p$P&m<J=0:C,6I0Pf91)_`'X5W_BF:G@11tudR/uMf!+k&kUkLtW>%nq(:)n/kpC@f(&K.j_pF<FiGMr4lD/au[N^>U\SFPQ
%kndNnXsr]9"o7E&_RC*biS+Wnn83il4f@X=[W\9M']5[4#>MBX[<ckOc:`pg\4G&cd$S/[I\@7Gdm_s@=F6PMdG5S-3Ws@EqO[P,
%+QA&/+-m(K+c3ss*^"[?.JZEMA&s;!'c'f%_:om8-pmEh>5>=a^t:4H0)2>9m'`K?\\r!eJ;miCZ!1Vm,ndecdf.[WYg=t0$`R@s
%QIrQ+9'eHF+a+g`&A*q+`GX_"/9i+@.Kj\-lW`^6I\k#$@tUl8D/;8f>DF!&cu&--&A!kWAtdu3]bUU-,9__Xj.OfHD&cc'I#,Zo
%*&KtoQ[#JErpn]Yh0c(@]1&!DQ$=mc>F=iD25]iVAUo$pQ5'kK*ke\FdXjl*JMjnq*l"g%T$Sa3>=2SO`G^>#nIWJ>CoKK3^]daS
%1S4^'3oZjZ"1WmQfH[oEgoi:Agk^XiDM1@[2o6?HNDHhkDLADp_N"#&+l)j`(;c&*&n8AUodkh:>M3JqYsUhl2tie2EFU(p(cMq[
%&B9\Sa,O7>@2?nCK5nkMj05pNDB.MNAKMBPZTp.Mdd%Kh0:rA)Z#ABsZstEO)OhL_nq"c\Cg%+j+!1@n2D'%:<WC_)Zk3[^g'@pA
%m1,$j%*J=1dV*H#?qUpNfX*oOW._KkgT`O!N(o4SDbc(12D+3MA9Yp!Rhd)qS@e`5X7k3TCg+2Oo$)lmBs/jiLJ"8h6?7QiF;UL5
%UAJM7e$:7<\]9HPP;b3Frd:!"E&qjZ_*^RJD9GQT-a7:e*,2a]ppTMm*-^0-hCmg&VWGGc!\K'+$I,d8'5Y3#a)0Uk5]2%^hqQ8[
%NCp65UU0&QJeU!-rb>3*h&FJX[.0-89T(8YRm8C-Gc)LW?b=o>'uim^=f5*%BfRJ&9]0_jN1%S)!JO5UAc1\J7`)$^=CBTI33[*A
%Ci!9=C&6e=Ct`PM!h5ME^Jq82?J9b;[JaSo4ge-7l8a,,6=j_'8?EsTm32t_XeX%]!3:Q>;Ge<^ISW+n!H[d^@;Q<%\Q<$IAN"d)
%Z(00E5N_^7mO6e-nJ#:21Ak6!M7eB!9hq\Go"FO=^[3@DiMA'2_5]#<)nYC*lH0ZBd5#)-+Jcc*3N+GQ*UN?J'T3"Ceh'Tt#-c.5
%_klP$%N,Zaj&;H=k"SohK9r_L@/!3JXpgqp<_-1ZfAf-/\I]o^3TkfNV0ZZ6"+'[Y9DuAglWXFLo:jrtT-q9"W6V#1D%g5T_u_SA
%_LWL<@H0ea5S?"b'V=.soh\FCNTH"Er0%sdBm'1##Vug[l'l327R7P@\R:%XhPeb'[ZCf!dg/o]7AIe@TD'kl.;d!OkSo:&3?q!j
%-JM[d6B$LQkt4qe@MHa^V`Pcd(e*[opKWUI$7`[.3XaRlqasF;?;qHh/B3UB'_(\TOV\aC^EYChEpr0<RRf!Ng+iH<A&aE.C2T6S
%J:c"Y)=-I!i'g)eGYu88ib,nPp9<^T(bZ6f@-RCk0+.Zl,/^^1m2J:E_l0j#_kj+G,d\ulqr*Dn*kR%mmo!U/=qnu..EEnhC58;p
%(#crXMG<pK%^`/T(0VDuIk<]JMkY0o)_^AC@?`ZOI2$!%`/%XO:!8.uMHcjh]:B`Q^G#)NG1_(;&N3r0Y`Qai?52+@\I=uEeQ3&u
%k=#D-R181FofteL]I8Xh]/Q=oW1IH$=*RS^*!BR^>0Pe96Ar]'1AZpVU*(0+4hBja-n=D71b"rbTiQ!(+m*'dSIcbQ)!rIe74pa9
%p:JbI0RL*\&Y'UO"Laj:'t_q.;0s*@/a>pR5GLZ@,(lFF651uf@8##6d].R!HPGgu?1l[@@(f\t4-(ud^=)sH(om=q8/a)iEA`Sh
%Fg,XDq;-a3IFI3&9?15lr0D<mpP4Nr>:,G;3I>+MK!(T*^[En]:8dVSV8gZ(@C8/68LIBN651fai<[DHnib,o3!=8F=<]aG%RKP`
%M<&cSlT:Th,<9G'+9Mt[CHnR`PHKV8)+<[=Bm\HUYW*-hj7J%-i]%t>/Up1sirIW`,p!%22U.T1#hTWh`X?a%V=(a8?GWo:2HUn/
%?E1QF?2*nF>MEEc\fJ9"gI.pHnZI:EWp-5MRdaCeemfHe]XM4,R`_],!Z\uIEMD?b?itH/gm@a;kmVV#>3Im+8'$O6#ra:Z#4s[\
%eoh@&#j99%:r;pK,Ca^^1dHCmW,o_jPtQ(Kf&I_rcq=j+i1gE&91%#i5_/qd)qP,d1S;^qW@N1W-#eiD6%0i-':A;^bWQ"@26QSl
%Xr1Hn!!-;lqH"bL_#hNa-qSEO&5$r^#tc!G1Wi3&,6&,4QbDY0(H\E?WAJjP;7M.<Z/)Q+SuTNRl&JkHj0h`u/tY-$;KGFF&iXZh
%`N*Ku>B;E.OFfNlCj?[t-Bh!WW2puS5,G%jqm-+emj'u3PU1B+Ub3D%L@6i/1pE[8QWhMQ!Q'tq[0ph526n<4<\/Hj[?0'aC!eYi
%/eE$ll]1XTRhI]`hOi*%pTSQTH-mad9+,YsDaFdU*)VI?n!+Df:1kZpfE->u6(()(fID4Mb;c&$G*QdRoP>3m^sd?WR6Aa5%LH&)
%XF^nBS"7R<_ZW]r;3DItT]/"p(#C*C5tpP4Z#bRd8GE^PFcSGN1Yj5K1.PFoanlN"\i\tWg8&SU[#!?;$)5"cP@k*)edB#u/87Fs
%pI<fT#=fnkeCkDrV(e*KGtt^V@8%CRb\oF%X0+E>Zu%,ZdM%B@V4/k#aln'5M&SE6q)!7u`.0I?g1_.oYFUBlOJ&BkVG^c-&%`CL
%,P$;qG(%CoFVnf^;l7L40.8o]=2NW,FA*Kgn\FmtbD2c7o"k/l4!t)s%nI)=O6S$f4Z3hPT5HP)_iIpX6ps"R+sLinLp>GqKG-)5
%j0TX\`ecrZXE^O[,"C>",-jsu:5DPX?RF2S<Q_i-'$$^I=8h,kW],'Z72R^V`!FIs7Z*"(+@S[XO<Pn8%6BdXRQ!>glmo?6Y'4%r
%9D``t"`!;m@5SG%Yq_R=c\G@gPk!/p3$I9i4#V7i71<!g4[Vj^)43(b01-4M`9=6_5[["hcsPLu#g+U+#X2cf!"4sP`ekUtWEqT#
%VmJdX,!q2)6+Au&+oli=GS"&s@+e7u8!4ZC7c]ap0*:Y89O$IEN3SNTN>E23^l+"fi'g&dGS0I;`f#X+'mL>\rJ_X+^XIuNYt5]c
%+uZ#),@Vl:1EuN_?q/);1M0&A@Ug4md1DZWESr6$,*">J1;ok'*"j(SP1nmCR-)B/-EM=Z6_Q:\#.BIc@h<5TXEXC`\\<DpM0+:d
%!<Z=aVd>`&"*McARj-&^@*R"icAVa>R1[Gt^d<#FZ=F]6)+r781BR&$:isO7[do'0(dZB0qj\KX=N#@X^eS13ZL?q0(_O#<N/2Eq
%7RYmb&b/F^N/0,%L_91UN>N6kds)J05lr\`[[lq4@N-7>,'HK77DtcR?:=-gj$go&&0aJ]gpgJpj3)ZZE@<GG6l`SRMhm!If\*l.
%I_+!rM`DE_?kJESg_l;J?GPaN5"8,MV.S6^>b.fl[dm.sbQ+Zd]9Eh#4CFl2A+@k;;QI3^eXLIP'Cjcsj3Q2OrF_I_<DJ4t"GrE*
%K>UN7PFjq,,msRQG:c!m#8n""CUTr]ULH07(EMpX-)TR!fBM*E[5.=.A940-0rLq$K^s;%kMY9CdYBad`u0-X+U'^>+kIBm/hR(l
%!Y-ZP:[Y>6T^a[DCn2Neg]nF0s58)1B_^R7GJ8QHQf<5`B*UC[AU&q#fC7>/%_&9IP"C<l4YlV3gV+;s^[/P9"[,^eA*hnTk?LT%
%=Y9P3UOX!#:\*\tldp/ig3@1"3+`b[%7?(QO5pn5%14.fIW1iH\4Gl[8,-K_&hs'8T%Hg0qs..bBhIJPorJn3ll"([e72]$flAK/
%3O_7H[e&MsEmXd5&L.roG.5b,V.=Fn!66a@*&"c5`IW#iGgEb(ht0`(e,!g(>6HG+)=\tnIO.3R9+Q=a:q\2*.CaPc\9d;B*10*L
%2uNKV:/OBY.0AgNG7965Tp:jVok"4`o5g\H99k:Eo&d>bG-!:e=DAUWb$=8Y?(h?pLX\e$eVV5Ge%T6o,lUMfDK$>_fD?"02uoLi
%LZ+s.EY?6I-9jb!Q#+=NH'TR%AGH)f&cBJ_<G]2s-!9j'k>F,d#UcC.Q>]chH<<0lIi9&8Y4;d9b>.l4ZNb9<j,`?^#ps'b"g`/^
%>NC3MZ06'SS+Y3:Ha\7O'-K6t4s+LVJYc31;;80?*cat/Aip="TH6&3=GIC\plD57)=X*f3'/eol9UA]ISF5#'7R6Qk9diNTr]A2
%Ce\,[Kl.`ebFALdi+pBdZhW<cF1d%r-BBji9Z5?t8&u(oS)3a'\Z]-j,j'fTE>Og,NZ.8eS\qS)Ah6Y0]eh=U0L@:F%(S,o$7JlE
%o]LL^UT4gJUT\N_8it&"2fT6q\4QYMpD^2klgblgJslS%],#Us?Mgp@0BACR@$6:mO!h?ijqQ(fe)hLOBlMi1@F1Hgm=Jn#k#E`5
%No092.(C5+V^/_'=ZX25Z#[m'RJq9Z8fYu[jX/<%.niC'Gss;M`Ej'>o4\FEen$2:ZurRCSI?e$rSp:mSneh>j<HB%@;(7`R-Pbc
%TV9*U7^7!.hJY42"l(DQp'B,_`#7jYElh_PA9Kp)d/)pYc/N,q*&<rJ')kHnOXHI-kYoSq=2<l)OoiZ8S$OU(nK^RC[]&JdGCOi[
%]u]o"1W>oTPL7<?.YKJ#`Pub$msZkK#<t@5.Ebccq[VPbgCBp[Z>*g7*T=5n7d@9*MS+JW0)Nc(FdF-K&pChu%U7Z?<bC4s3:)No
%h#"f93hq"YDi8R@h0n,!7FL$8YFZEHB:SMWWQO-SS&25Hi&a*d6$W&7$PAF*#@@?=$a1Tbn8N5liRJ#d$@EuIcQ35qMI3qmj+UT2
%=.p^GS6/"b.P*of-T109W]2p<BIDB[Z0Rkh2,0QZOYH*8id@;9C-B%]SoCY*U9SfII*6MeUs+72Eirq]UXl2(??I>3\b1$`29rc*
%!KJH%$aqqd"hY;_E:4T^i7>5ZT=_jlFF%BP1e+Wt*5'[u%4Gng>9n6\dABK;#nJ"NlkOR>rbbK6hcn4Ep$n<,>`U8?^'2mY;LS?l
%m8,W@d9aS./?L!=f8C`m+)^.c^@Nhr6UEcm#0sIbEdbk-\N[l]>T[B!f1YEh&Wu/NBIj4qI`?nl7.fVtiX+K6pKi1*kF+nEQ.qXB
%hV_su-S)=L]/J4E0-gD]hI7e?^F\-P_93,Up.N@%.D3\"Z[;/LH*Y4c]cC6/PB3oJ!Q[^me2@CZC$@s@D$G<V/(b!Z4HD)X:#!<h
%b;O;.ZHY=q[[GdYgs.U`I!U*0H6U"tHAc.ACA6(5"%u\]@bKncMJmB'Bq't(]S-RB,)[jd[[E,!Gdr@6H*T>t+22-O!M.E'WKrsC
%&WVhgc)G?A@"a*AeEJa4J6a<`%J*!`)in4?/l*8>ETK6fb7P3gGbXbiHC\BXgE6q!IK;+6b]g*/[&3Z82lmiUc17'<)pC):)A8I^
%/Fu&RDD7^7*2?ZN]pbAN>9fP=hVMAZo%Y_0dFRlZ>2.h6g-<.7Af97+@TG>/1*o)Y^s"Rl0qAPBZV7HF&i@l(L+TaE_94BJYaT-K
%Oun,+Q8^n1bVJ(*Ps_9Ok',C"C\u.iH>8emV#e/\qW9LJ8OQup:)[**^<,)I*of,O5/9?^<N2%H\QqY'DhF?RhZcS4Hq#uTVsmUL
%gL+%H!u>?)<9drqpds+kqLFlA*G%b'Ksg#H,6qAQe]<qSQhK\R'1H]&'KfpH->W&iSfXt"I2a0?1EfG55<)%fcMqjA(\!UP!usil
%Pj+[=1"C.Di,Pjb6Y`>$PBfR5H5ki<mU3]`F38[UI/ZAum8a#\YLE+nr+D<VQ$$B:eEJaRGqVttXL,ACJBo=idOeL\5JUAq/N$in
%l<#5'bK+PQo([-Bk_naq6h.genFHA3@!_a-"^X-6PFoT<VWRFS4IVJ6l1,)1e'8$t<n"tS(@\SDh!(Xq*^Jr[O'T4WrXk,3qD_Gl
%gSZm:_HWIh3E&G$1Ii9aA0/W32,iBX]JLcFYhrFo15R%>oG9kjX>p/H'/DLkjY0HZJ3$bH`cHA6na.Z!iK\`rfW.KTJE'?nP_OJb
%Y8>u3ne>CZR2`4VRDbuk?($k4LE53aP88BJS;NM[R$&nh]\JEM<%b8T>?XWGi4_+fG,9tD1aA2kC:fgtOh&:Y,Ek&Dnr@6ko'o$7
%=U*O==PQX.obJn$gX@>=lotfHKXL4:3*fSu(`@,)ZskF;%`,@<o4GpP^^%Mm^f:*)UDDb"2?Plh@t4+t5BjW[f(30R8nB5S_G`3*
%+(7QK!/YWs9/XL`+E:9ZUE&r.g+:[>SON/FZJErhM"Mp8e>&REr:r%c]l<3i2mYUqS]$2!eQJm>aR]-7NLtKb=Qh7P]j`)P[s/7S
%nDPO\hSC>5G9O;1nQD:c*4l/iUtis&:U/FS#ifD398JXce@ri9<5G.Z=K\&!9G:_lQBJ>#JF0LQ9<^R1-#8Dfq,;kk]8jqr2u1#%
%<QH-Wl=n[ZhZJ3Mml,M!B*gUJXI42aiHUPs,k:>Sr<;qb4GAo,24hYFE"Na8'kt8d/=Edja6"fZ0Z)fLjG6,"835G,,a/d9?$@Qk
%^XfObG,\$<&OM4&5?*FF`0(Dl7Mm?Qe0]$u?4:]/'(YR%,/a2%*/aL,HF9>nLea(.4,PNMB:#%(K92,&kAZf#O*?&f4W:5_DUu)c
%F3(\CEmYm2Ug$9U-M&L+S0U&re(in:SIrtEbS?+ficrH0*PrIKltRdBF[.B=6qho\Eb>HpBb+$)e^id&Z?6>plG:D\WPFYW]QV2F
%6HmF:GWeA8%:Vc8T9Cfb(c7Fp)+%s=Uam=eo/s>W>#/sbBti8\/M#=tC4raPBGeXNqJ52HFdAH@BXH4us.'D+1l2sh(C.t(,lSeV
%E/QkA*HU^JNT]u0gUg8)r!.E)&B,6q_)4eRb6EUiQh1bX3>LRb^lu-I$ntQaoqbDfcl2U6EbV.Y1S`?uI&@aTED2k_'V9]^'GV=f
%4UFF-)an00RgrkZYq)>*,EUELc&^Q^ANkZ*Ws!3ufgo)B3jD&:)[MqlBTb!odA5g*Tl=D+OY`k_]W^g`$;]DMYgtPLK<XNiQ'nK;
%p&+0D2Y0&[mF!H-EkNbYQGAqK'K]Sp74mj'_U+%B/ltdSE!!r6,U1huAOt0kK6>Z8rW"am8PJEncrRqH81a0;oTi[-F#.@U._<]M
%agu?K,j/C,hIS5FOc%K,lq,M/k.X/^QoSk+eh;3;m7r"9-I#9Bh+.`o*iJ8(CXqW`^X$I%']p&t#b.ksPmO-m'=QH=X*:SH,cJl?
%Fn08g'pm;-\4u09?Jt^6*[6GLbubs&C$tR1C"K]UK;N,q;/`r>%%#8(p):g"&p&6=I."l!-\eD)2>;3&=OikjF-nh[P.au-C+m]R
%WW"r:iX)_>2pl=7HFe5_P-h,:((dNZ\"B^3*T>21I+W9'.0i!S*B>'[%EQYXL,!h.Ss"prXCbZhEoW0l=><7I2X-V&o.J1lKVafN
%(i'IU5#dj(@;D/!V28Ba+du57dl+=1!)^OT9IFra)a,MIq/P,p:Ks.'i=BVQFMju>6>gbALDo,8Cr"L#^ooK)5,BXOL6lBZG^[mu
%f4N5R`dJ=[n[2[rXY0uh])oM9[I"#(9FD5Kc@aMmmH@8ZS52F3+JO>d?7#oUP1O'6@JdIgq$"t^2PEHjGCt%8H9Aq#oX06k%bN>o
%N#:Q3L]WER6+F:055UJ$Jh;fEfJ*p&b3\inITD*#!sd$[7Tc',$O-9M._]5ZRbS>GH!&[CAMo`BY5c_b6kIGb789$6p"(+9iR3;l
%#Q!;861eS!lb<#bHMW]K_mV"WU-NPKaokc5%3"CQ;Z77lKrk4O!#KHlLe4a.VcO&TJZn=iYoJJ2;tdP(Z:gD2PiebbW=YHiq))l`
%$7qn8lC&jL(O"g".5OOs9#O172.]31&CPDVAB]:A\th=-\5.-8<N-XUM:-;S,*[uEEe9_-kuq_HRnEEX(Kgr4G/oMd(d?'tO1)SI
%jFPS0lGU]2"*aO1FQ"+Mneegnis`gYP7fm_Dq)GRYsSn46rXE,qZCXD@o'p1-ggBO,i[s'eSNm99QO**a4(X8ClH$!n\7s0Q!1_*
%RZ9GqQHZ1`#,=ach(06YWT7r?jB./(BkkH+RF9s[O$3-b\dm!?jX@qWjHH7"\]`8grrCKQ?"&h:Mt+hREcOq;qit;[5jOHdZ3U<\
%r:OV3UmO"E1Yc3MCb<V25^3B5>@VLuV2ec"T:2MKJ5_)RHe=L+-8=O6F0#i4EWWDX:'i-`=LPWEPCg2.4<hQ)O0bAjaH:l-d7+?X
%hkutKOhf;H):d&(<@&LOPB=;p-]K*_Bc\^1$<Br=X2]r_:bNhi`^"Eu'MlrJhV?ja[Hn,_mdM#e+@9Pt,/Fcb*\a-0VI0<L5Bg5!
%l2:Y6#!F7\]=%Mb&\iZ/SL/S'H5#s*h;P?HI]`i(%Zk,!5[c&MNTQ!.pFn6Yo,!j"2\hqfT'jTBMYeCbFS?sCS2eG/ASm/YFn]"p
%(<l-bTn8+\I5mFKMb^B_gU2LeQ4pBuWF+V*Up9@A&^JJMgt<V57Bj:t;0`=IEG$6P`J@N<Xdi<-jb0Q#6^\(&%*M$!*d25'#-:dp
%2us2nnJ$0"%Mp!tiB^aAp2'1#\UsKH`@'M99q'ABZH484CCk#T-NCV6*K7;tV71CW;?*aSR`I]s?Wt4<^re*#kPa.'cm4X)$``OE
%5%ps.!J[k5RRGqKD3LQYRU8e]gb)TiZtr@HfF4VCoAQY+UH^DQD>%_0T;s$qH?E?^C^lV`9$XY>ddZrijO^C-Y=mh(gb"#;m@/jF
%]>hVd?b\5):)p<eR^C(sr@u3Z]pn^8N>(Q#jri+"_%^$[B=F#B4f_ajpSr<]X9'?PU$aB2Zst)ZCB#<?_>X@`[\E)U56rV*]Y2cC
%C_hAql+<KhWihkIq[^2:hHFG^,q<\m[F_3Q?u+gPC,9(D9G'7gm^0-d,2TqSZ$J(3dBGb.gUM6e(<./l?`Ep!S72@&UDCK$6b_#>
%[i=!jF8U-`1W@c8B@5l`d1?:<Z+41i];I?QOfHDo6:nJ6G@2'm9ImgHI"`RiYdjftrH]')BM'EEfpZ.n025"8n0fR2N"H!W4/P4a
%3SgkYh)>Y!S.SsQ;\%nJrUnloZ3&dm^mE`[=\G$#@&gEoN^LNn*YJ6@)J%DUp+%<DIerU(i#T<#4GSfg"ZRRA+$/o2lVCMlgG`17
%p_gu?Nj9f33MUq#:l)\jb6WBX@:SYSq'gUb@N`iujAJ'F@0UaZ(,;&(e(+tA(X8]K#FI,:@WS*(aimQ6'O>7QW;6)DOd+k&TBXr6
%H44]OjZK/mOU!l&%TV1ViP9Mo"OcMMC`/^4=djDJ43at)Q-7mGqPC3N+Cbf6.WBWm[RR[I![TlCD#[(Dn'mYYV/#^+C0#@Q*9X>R
%OAKo?*?:gFP+![5F8"9=C[kseX$oTS[QuqW5n=3"I5a>T'Hq(n6WB[W@sYuiaOY(tBb3oY7Ze+P*FfN>9n/`Eo1-(fi4F*NAJ2]n
%`g0]&%X30?A;BfBY6UmIc%B<gq`NIT_-EAqBK/*:@#7`X>#b-A4h%Q[^$!;0:$Bj9Rg%B4o+FMu59K4<e`chEB^!>YJcl"'Ln+gc
%kZ$9oMBLsVX]]#JglgOQ.124X/#UE%Y/r4^+:D,+`^!fD(oW4^@i<,Ba6M*`bfbV^MT:M)LRO\,l1TN4^H]M6-(oH]lpk=nWNOBK
%^m\KoBl5'/eb;X;U']r!-5#(Wm'+rkI*F6P2.E'mngn.L8YMYmZfQTP5krORL:UXHNBS5?+ns(u4HlW\&"9:gq%-e$ePi+-Sn-UG
%Xr`CG@gr$npUtPr=o^gZI>HS+WZL^c`IFF_2]0:*XXfl;$?"\SHC!U\P?qV>f71gfjk;D93;DsWr>kq<LVNfLs85+S%tF/J+9(t`
%kUu#mnDE<T$$T)'e`d02Z5JndK.!&C55af7\1E@2%6,4oNNc4f6;FW`^?-jS*ZSQ4JH8(V=<[CS-pYeP74780*3Pti5)]O`k:44N
%.9PAF@nb!J^L/J9,@%$\T-dd-MGaf>GR_af<5fK_CR$X+5.T(?Q!3q,/AMhC8O7(@dqAN='Z\'AB23.P(2;t?BJQ=h<c?mqp:OP(
%?guTflr!6ARdAIiFIueg#:/iejG@`Eb.>p,5!a4M^9j+4Z^gM7,D1f8B\tH_HU\YA7]D3qoFKOV6DTGWaak(jkHtQ)Y/G(9feFC(
%@,)u4h2`.A#K[6)*adtCmOr5qHL8r8<'K5%6(Y]9BUdV2FC,!/rJRlZc#I]6)dLb'W*Jp`;Mp8cq228L,GEE"of_?2YQQ\^\00!\
%m8%2X6\5S!MHK_Cp&k/jF7M]FMG;Ui3`8<`K&<!UY!juqopV?pSK9RqFS"AF",l-;>c$VCG4"#BK^X+%cR<la%Vir)PX,:N2Rq?>
%>JdB&!C7k(1+:)-fed"e=G%.OOBCh4-C"N*%2Ou=pno2o,4UF,k'ouO#a7ZHOG2f-N6oLn]kE:8YdUaOqN3aBmZRO;=hN\(Fb0]I
%8Tl]0_7XUS%OP.#jY@M>HEoMLdlRe^8?)%P\-fYd`:i6'n]E>1L@&1XicE^;Mg'%VC<TiNNnWA,Lh%uD'Z5[C?L;-S"NRKc??g%X
%n5JcqE0T;XYWWC@*ALB^[^%I`s3(H6kC<$fn,DUAYJ0nr=5SK&led-c"gC4Bs5FqTj%ho;q;6SolYjN9LC\n*Q[efI?[_U::Oi>D
%n%Q`JJ,8,R_j16.s2EB)^pq4#FH(ph(uPGR$tSaE'tK@I"bQs%W0TD]#D?"t(PQt!*!i6/-f_ikTcE'IITpE`Ke1K1Tk5UXp=sW:
%7k\GdM"X&b?7k&"8Bj_FHGe_+6<;d[45RbV/g%OBnYF)%%.Aq)Gb3W3iEPO']/GjnB?5To@LCp%QgqRN"9F5U%U\`c`XP=LWnO![
%T&B^N3fkTCYsZA6#`m.r$4/q6kKc1?dUh>[E5X,/X"kIW:C7o_6RWKI.lpT]1TCcup`\X](Nru1[Yts\837$9GLm%=1a.H3e78]l
%9?ERrTL;LtZpo9hUaDTuMqYlG2A#:`hRC:m+T_`gT3o3.g]Rcu,W.@Igs^K:)ET;`1NMZ/j.%lIe-5br8Eh+%iGf%<k8]A?mJC$J
%OOFquit!+ncd'Y'YW.0NNb64%SFQH[m.Lr1s,s@0^#HHd'Znu\?-:O;(dR)mUp?4;-Y3$t:_ZLJ0/tUt2B]l7EXV/fmnf;`TJWXc
%n9&%&S_hk)KG&8#N=WlDD8Kn<G9V$52VHhDi'`B+6Jf-p$80TLKBBt=<D\Gs*=:#j8])3-AD'_kF2/1SMlI9@Lk?gp@YBKV'sLmu
%meil/5O0/rNWIV;qsg;.VThmC[-K7iWSlRhWXOjC:b*lniPp=BR\X#Haen(EBtl@3'I4@R11o0Rgd#PS:MK)apu<A!;^#XeKP)SN
%^H7BDI'Ee:F<,Gm6^j*-G\7SrFbhsG10bYs*T!N@KmB7OL?c9Cf;(q3ishU4A`8R!P?>Vj2goMucYV@>%<>;Pb!K$.*r>=DdN"bN
%r[ZX_EpFKE+'&i2N#fhHI6@4ri=B4MkX"K\(LATlMYZU%LqJJ9.nBLOSEHpG+LJt?BR6@bc[d^Erj^GnJ6@HqnIC0$@lM->g5-E6
%GW'k&4q0VP[*Oq*re%QH-fWmTOG[Mk=0HQ_S;0`YeL^N.o'PrFM(DBGicDk"37T9+^1-/DE!3C=WHp"qqM9X6j4=cKE%m!d'r2?M
%%$'gp\?[/jNoR%1-C(#@khHnE=fYqjZ-0,o,tF()+kp7?+?_3ce3Cc6hJl@bgP>`Ap`^42a%$'Pj5=R;nr1P.MG\*oLiaL8PJKtf
%0MkbF/[J$!;".AmN$70Z'RNhGdH%6^+QE&_:KgQ`O*;SOPW=W<j(apnl1f"Y3UC3`[L]A,,0>5Wi+4`BK4p(S?Xo_dbbC!A+N]UK
%j9F'.,QlsBrpc"E35Rmr:IBt/345?cnRo;na;iUoB[esCIGo(iCQXk']03?#%]c'J`YR^tDEHQhettPOmCD5#H]Fp5"[)M?",uM#
%GCs5+M<fK/&)YeXq4nB%8DRFU'H4O/Qs$5V-gQ>*IH1mD%%<TU-ht_DSe-J8aBO_k9LJ"'*h2s9c(`6E3M8P4A8B1?dA&l6"dJDV
%FCp24CeV7H%?D0F+3)2h0`4*I:riLl5qNR/<>aU`l&\`pIGTs8j'U8\a"7sam'Xi6OKL3tHRf,d36l]/"b2`mq%<XOa$H=n1^i8^
%a;-ebLSrDp#@u<rI5s];"bjOm8q#,ZFK"J7KpmQf!"ssBU/d5O<4#Z?;j&Up4*Z"Tb,>$T)icMsbTF9k'bp9$^-B7IpI_@We,#*I
%HH)lV'AP=a<h/KDlmI$OL94/T]`f@2Gs#q[4lRRP32@Z9=,Za]7V/=biFs82h@=J=q)l:&KS`Rn3sq##T@A@:WZkS7DWN#oreOqD
%'b:m=gnuCNgWp,[mf393-cM,QTtl"sWh<jS``,kQ<X+gYNns322G$!enD6TRrr%#4!P.J?5N$_bchb1o-&b2j@8N1"5ojs\'M/33
%?&8>#8_G&C_JWO3A\68r!a1#gmJ`aR$Q?<LpfqLRfmp-]^<+qD,seF<\:@5CJgS"bjh1;9#lMD$^%Z.\Cd3EdFd-5H0cRQJ<H!,7
%%oXg4oTO^d_GBs5K_2b0L\6pmp41or5B$R1EqKpUj9*MFVlW7lV;1hV#6[1%d@9&,JORPj3^$`bdir,O'1KC"If7>oJHrTL]$8!?
%6e>C4BZ0e@=Pg"p[nlJmDeX)332AV"d-&_uP[aFmR:I\`qp_Vs\0IUQ2*'OfgIMD(.!OHbs+`Mh1Pm<U3-[]Z8fbpq7HU'aOm?!D
%BkU#X9p;R94Z_/"W'e85\G'Y7reL0T[fQ443;cHiONp?/_<>^2%Y$9d!Z:R`!Y):VnRFCdm$qPTEW[tBk_:!\4FRqNJdY]g.oA=.
%%6C?RP&4bAg3A*ep[;mM5C[@20>I>%0E1h6YJ0o)gOK"nF_DZNn)+':lbE890E:;&?i8ouI/3._5CWRss8C,:?Y^lLh!4\(kC<I'
%QQJHY\,=2uhL>.`Dnl;E?[qmpDgq<(^\C7GTE!#_rV!^-If/>p[mu21rUm@CoBe375Q"m'_[@I\4#i?qH1@iJOH8=RW/-dI?2.d@
%roP=%nN4E>IJEEKr7/!B]_KNSIJ*X>J)C11h=68KTY2`\NF+L4q+q"12o#:Y++I`m=:8F?2B%,9lF"A*p:IMXrO7+G$&_oIWqLjB
%s4n37-i%G$US>N7>5Q'`qq]/ds7P,b^AI'9O8nB]^AR)r^\mf;TCds;PC@ZP`$WboWlN:YI**!"?2USlUYa80j?GfOkl9\d?[qn9
%T3qNLhMecmTBQT!%ruHaYgUb[2Vm.3mn8&c%HWYqhGI(bNbIV?p(!T9&KJhoC:Ls(]_rr>h1$8gV_sWeTY7BM\+E1;pIBT)HaIu.
%oMh_!$OW97K+COA3u\7@C@<&h/g?kAWi.KfcBs6;+*)FLpNZR"g:RA5p(!c.'TMs?p23D2bTH6.+77nQdGCQNVpqQYhG*rm).);L
%If79"]pc/$`@8Xl2St<b+mD;Ka9[[8[<oFZ+-#*+(h3ff9_s=KDUK9m7pG^X>PJ$$FoVDSMA4MbQm2c/5icINCutb--t3Z88VFOD
%i[.Ff13@UU??Y_OT,KIiRX0c%4?OqMMfaY?*TA2#M7*Zulf+=ZrFNbAj*l8D_:boPr$Q^g-u"8^L^/&^/=Z/-Ng"J``'NR;_BEf>
%FQCA23hTdYnTOjrKR,&#ilV/ld78uY#'9=;oA#1UA3RPT43e(]r1&ECFHd,`RM;t)\6n(-o2N$;PC%ed%%#kM'/to0>X&'G6Y[.&
%F+)oepr-ne3bomfJJ'&1*W#W?ogPpLTMYp>q;)J"dm9MnNc2&tjSg5YKBfuG3r+Zbn/5/6%>gKPf?&S2M@C^MkQEY+ej9#j/T,LO
%$;Gr=Z*,8+qF?"rhu?Z:q6T73qS)\2p^_&_=5WQBT-`FcD`L47<,CjWCf&o].R,SZL^]6^MXm;Qn+5cEID^>^DVYb5Q98RMcCJ^[
%huTg8_id_8n,CuEb-P.`l33t!+5YAl+7Olc56&Y6P/l^r[k:Q<k&K6aEdRI$eJD!cLt_]B%J[<j?ssc!%h+@];D,mJ1m]]MgCj,=
%p7KYN4F+tCqms5N@p&4!j`c+&"@(`75&%TT;^3[;Eb8X,`fKGS^OMfAEZ5E,%lHp^!)-%;L9m?$ZI2=B8jQc+"P?^5qKh-Yk!/d0
%(H9O26a6LliT(&;+5D!Uqij0QE1!Y[V5Io-!'X0nKnb$cq!#;(;gh^m'/k8i.HLXEkiS&2ag^YCMc`5;F5R3U'=t6,%d8TZCrJ9I
%l4Bdeib*;Veq?F(\O09n+qX;YhP$ZOo4aI0Nb7`VOY`q&$Rf;B5!3]<hgJj2*<g2teWdfj%L$2/qPL@[81R7_4Rgk6s,(Ce&iV,p
%,(^.!VPSnQrW&Xma\@-Ee=;'lq$Mn8'cdS!'?k142%1?<&1;[]o6a`NU&aT>W_ALKPqfM=dkg6p8*Ph*SD)?_)#=T`6YTRZl2"3S
%n?a(I[o`P;-49eL;-CXua_"e$Wo[uL:<+g&lE1Qr<5sT^!N?MRqAgHm"c$)=X\]DgCs8.B[lQbhlGXQAN/$.kGuF',QKU5!YtLXR
%$caeMY%2co(-_5rD4W@V#`TpOLN0hKoqA]@K3jg:H16>V57Kq6[:Baa[1_:VNb8U_qJ/9de#N&7l3":fru;1O`,\h\j4'QS+;:qZ
%ijh^Y];Me.D`JiAG>)Ien2^mP^7Q+c?:\uY,P%VG@cTM7$gefW4h=[W!n4mJGLibt`$e$WrE??_(g:%)oiu`s@hjH];"`hh?qQ^?
%@:Zdp).bFX?!G7E@gj%jDFb>R+Om`2<_WBMPSjt$$:2P9A(JZKB)'$fnRl]s0*?]PZR0(R0"ou_##Ue!.<kGAbE>8o$^jd*"`sZ<
%8+U<e,k=@R2dou4),%\cBd`LKQhHAlLUZNpii/G_&5a6Beli!K$#%FV*Ql2BgVnoeN7Bi2=0LnK+[=JiP&:ld0METVWg4[l<LQQ2
%;-'0`AcnYD6j$c9eD\i^h]^Yi3m1rccO,?gChf!pG)PZM_.Ii8TE]M?0Rou)E=Q]n_'E!"L**'(QXRERZRb54?rDo197u"E[geC(
%ptO+U^uEB!g6Z)^>bt[YEj2jtoT%5>,F8%,4#]1O%T&_gm6H*P,bN>o5l\KKNRGH,&Vnq'mE"/Q6Yuq5j2M>!lQ0?c["sOcAZ]CG
%eR/m7UI9FK/7GBfHHa[%)6WUmMPmGJG)?(_Z7]?=)lO0b-mBf`2lh^U]it$@fm11$rjB*,"b55H$G9[J7oL-OUop?7G?,rh!Z&58
%?)Lj>d3tBVCPgH<`pJU^3ZQM0<]]:BVd1+>g8i/IhfT``e7)s,<r[EuKqES-r5@t'_El_[0s4R*m/b4Yc9E`O>`8=]K%L!'e5`aQ
%]b^7TZgg&/reQ!/XR7*?gk>^]YYJPP\DM&m>Wjuf+BE(r@MIBC-GQf(7$HK>QM5*WCoYUllsQ!f@Rs6IfG2KsQ81Tto\R)6KT:kQ
%d6&gd@b\uq$e[F'<(%K]YQ.9Rm?!WEQ9R:QpSNoIKQT[&em'nK(cXc5BNS=!q&GqOd#^K1($/;<l"\OTZ@pRiR)hSiV"c[?ohb;q
%LHPAV.7_jc\iAg#YI0Q0!:jmX[To.B3=e]@KKA21c#u2(H6sUP\`LEJPBFHK6W'CG0h#7"In5iq$\VL7e2C$l)`a!-%`:gSkO89K
%jhn(4moY#k&1,1>\VC>XTI031&QAl+2_-FuW*ENsrDFR]ER*]c_qLd63D.3r*jX81kn-fACqH]S6aaRJ[9_<^'1gLkns+uqWl%K\
%PFElfKlp+boX58#[S"6-8Of]-FBV@/,]XB3]<85]<q>N:aP4)uH&X*^OO&[tV/iuNkV^th1nGJd^tcJtNp`9]2Ao&u>";j_K%E2k
%WF7bPqNi^L<+IGJop(P'X"fM^]9"E$Mfh`L$]Y&9'5pN";<I&'/995a5YA'K<"U#=J@"p,-Muc+OLV'!ai`1%p/j3.$#<*\FNV!I
%@[e-dAkYN:b:t$@TXDH&0eM-.5>f;*Bj\?%.o/ZQ;R).Lm"*R23h__[,SRV\aqW-T/-`$@S7[<)UqEa/04p*IWpu`NQ'I@<KL0<C
%6`=_DSPaO2P]I[T7:nQe:D)@E6r!R^0V.>s\#+T?LGtPS</JI6A'I!3o9A@"HII1N5sj:>UUi<;54m4ck7;*Xs&LdI146?+Fo,(Z
%"DM'^:$m3>nS).U9(Val7lK%uCN%U2QmR.^W$)nlkUk7`_CalF$^*2U6Cf3iIFmp==O]**BMk+m:EC%NP-lL],0:48,tBNA4QAS%
%ms=OgT6*KPdpKe\Aj!Fm!X3]8^".LTaLN(4>cF)hoASOJs7"T'g)UOBiKW8oW.O`/:VmV.e@F%D2</tJVDc,Za`[q(V)/!SoGGOs
%OL0$C3ao#R*U5'p4ZEqY=V1rieTWGu9ma8n8"b_[2Ks^pB#lEEYuZj-\jBW@\'J0/.W&"98k#ZTn+qi#Mh#b9QMf]E/'-GBle^eE
%Do`GQjRFdLX1hjjoVr)sBA&OJ1rSW[047Gl!EZOdSrOW?Wa/s^^=c,d7WG6Fk+q0=^MP+Lm,O!_q7OW:#E#Ug:Xc;<!q$uO)<?+-
%6pVR5'l77Q3S0qFqV'O>oNV:8fi(eUN2GaHM[L6W^oAr@d337>#;jrA=We]oZf+WKES+:UM&&Ck@<\B)Ne"#Cc'Fo/ds];gf.hV"
%5!JdsUjInI3u3?!"Mr'k9ueEo.GG$RLZSh/JjC0b;g0C?'Pb#R?L8B]]^0;qBLb-j?0<g5&4K[@/5"cYA[^$5LRu-:V+a%!Z!6ja
%a4)\6C=?dh.F=b+P,PK`,lCASYqY]ZJ\F$Zn2ojPYChnQr1):q'GV[VdIb`9G8B`G=7M&UOsec2qlQGAB@C-Xel;W],O0X%MD1RP
%k,J?IU&AJ%kRI\@><\SMc_7[/i[;\3/JoLI<#.]@gKkB?c\/r[dr"t>UU,PpgA,Q:-6iX]f^EE"mV>U_W[2WY.;J^"i]^@O#(+q8
%6AfDQ*8<Sn5Pln;N;cMY&)%Ta3h6e0j\`)(Wt([;=U1m7e^SC*Ue/:]$i-uLS4A2$iJ5,\$K^WSJ_aioOYr7]4N98<jHBta\F[W<
%XbZ]t[3I(8L`Ps`^!IJ^C<LV<OA_:P8XJJUj#_Wpn*B.mr,u1Tfh,nge'7=^'-oILrlRu+.8ETMZeeFgTD5NpCedU4b9RjV-$gsF
%dr^fbgZ.M_E,2kV+()\7k?Ze*9BIcVjY.jH.1Uhh4!.c,V::o6[hqhm/Gmcu3Te1W9;Y5.Y]$@&0TBeH;a%Hu$ai1BLGmNhDsHr>
%8n7:`<V!:I-WsCfAX:T5)dmn2bl(0opP"CG%oYD*WN"p*#epi,bZrX/i]<QWpG#(CS=Z_:<.npojj_ml-s/>ME15a+8_%`>GQO+^
%(fh>6cLr[oC2\:bbUVoZs2RfJ-IIdX#kfN0/*SZL\+:H*oKZr8fQijVIciflrh@_'\(UZS;nM%Z?7b>e2KS._'_48C-'>5Tn2#fq
%Z&oLqG<2hpal6Uje:pQ#rO<9$"a-uFRKALhg&UJ'XIcfV+2lm!iC2=pA5t4(!W@Rk8:3S!#5X<$?i)W<k7bmJbnAQg^25mrQE@I"
%L"dE$@FF@!eq\3":q]Af&&Sd/!8_f13KE<J3ITQU"(1$`,+nVq`Jq+JLOi`$pX.sUV6]Y6'sC8-0U8BKc`6k>*'>O]"en@a2(@$9
%:+O'?b7TW,/)>PV]>-&Y_(Vs3TUQ46+=rB=bT1Dg`ItmWTesor6gmT%Z'sPP[FGST/$R(RcJ-ctGfk,+;HQOjPiSV!^@#6YRdtaY
%$?`)"1sg8]kC4p-Eg`[\kO4I_<3kl83m=sJj>,$1VfluKh40N5>EB@J"O;%t(rWJ8$(?bB%?<H'K)JMW@kpN.bO8a(;E\92VS`Nr
%ZT-O>9jLPmSR\hBjt<Mso\QaPb6aS!R+k1N?Xu=]4>i^VX%!QD=q'ab:@%-PWHeZ+V8o^a;\AaZ=t"*5#85Xc:YCoAeO=$@eF)]8
%Ft4Z+[diPJo=-#.IY(p'!m#Ga8N2kf9n$HWEXW[l>8Dm`i]j/j>,$3MTK;)enHDqT3Le?2*Bm2\&9sJu1sVgeGNm%M(M>j>'2"n5
%S8-'p.%(_bZ[ZLa?`W[F=a9h(bFRmVZ(&*M-3ReLWi1amj;J@iD<\YBA_#QdcnmtVJ"@"MP#RcD)j&ZJi\XGErXhG;=S1=qm:*"V
%23\!VU+P:Hr[[V3lG\!Mf>^\*jqX$0;e_Wnmeb4e*=V\AC>P?J\_<2P!e:h)1(%3bTr?*/8lYe^g+(]O=9OX],N)Q#U"8GGl0pOk
%gh.)cn\n>4+aL#uY%T+,_85(H.oK22O\JSkKcV8niGEm+8fFF7Q(780p$*>lA#GpI`tp>uGn6?.2h?MIZ'fE2RYXF_d\\TRS*:ig
%nAiLS9$B.!i@_ds;I<0'A$;2cVhtN7iu)q@3"ML)")ICqrr+lV"r5lk4Uu%&%QM_\Pu/^Fn6)U?#?fA1#J;_&21N<(?%9SdWVaof
%X*N<CcFP7f\XQjm(j5Uf+J66H+g%lu[Jd+?*i*Xq?.T+8,t!'c"I2fLTdHj"`d2:pKiVhG]FL3$AkDA5[n,U7.T&Zp3'!$>H5K*9
%ELHgGGPqD.Q[eIYZ%:%]`kUdF',<o7*ua##mYolIMkrqm$gG@-5"*JKcZS1@G<;\UcqQ8jE5I4QP(P;nYG\\^O"<@$._KA_:A=JZ
%bWYmQNgF;-S,E;CS\h9hX:Bf()o\%d-c/:?0AcU_2sAT6V8WG6]pM31L:dGKgB!-m;/))50NS.Y4]b5*%+ON'O,;6]Rk<,N`k[EO
%At_J=/D[bf<@'`!]uOc&/1]9EPK"`ZV5fOu7AIJU_61cq]>.q`4'$2m8&Sq*AJQaNWV>^d>9-[QF,XP7H:C0"Xb*2tIWSg@+Ab_9
%l08Pr=+]@Zn8*VVdthPp.G/f.8bT](a0Fd\[d$hedO,CBlg[<p_RNR*iWR:_OetS'/BoIUHZ$9M"g6D`cR>561KB'k#)FPU-]S$W
%$:1<9qu,h$AtHrO`3kWkVTBJdCX]^_?&1-UdXJ-b2p<jC1F+,h%6)/g0o?.iY3nEP3Qm:,ZnoY"S1-G:RUdp+P_1]gfJk/o$;#Ku
%38n7E(0C)eo`P[A[s0-e'*Ia2fp/U`-p<26,sSc@<dE:uSs%0;JOO@3i&_G5lj?P]Eo%Xu%Le>=RRDB`%m0fCb*8s9VGThMGQZf/
%[:9_<o?G4k7r?CO:i6?b4b\%h7=8%"!gD<c:CtMoanAeIar0Fud.t9i"5kuA)h+N0C=l;@[89D4N71`&MA2q+;Ti.s*7p?ulCe<R
%Z/=hLA88A$eA7WMFB4:+b<b2W^r!$AL\ErP8e)'n+5c#f0=hEB8s@mnL.]s`h#1t8/el2b/=]to3k3Rak\s>W+%5Y4>1G<5p><Y<
%7/&&>I/CT=RCTIM_[WH4/CUpL*oV@liW:r8F0SfClet6.rsT$_YqSc$,G*VJs&pl1&$RB6r0WVaot)"no"EM+Vt=bcp(IP*s!uF'
%J+_j.Zeu@g;\nJ[8%/'GHtX96bL!!$-d%iJA6H28iL3*c@^l#O>*_1I5JW`(Bqg2PqOeZY7DKg]3r+&`K#?5jMn;QP`.q]cCJ5X4
%^(@E>K(LnIS(6*YVlq,-#s6bFjp)"CH7?VHrr#;cq^ZN=2P`*IiG,MWE3Rd&ISJ:31rmG\Rh<Q9*.n_trI("cUk=FVO(_V@.)pSJ
%fMu:ZSGg+d4!X2q5*/RgDo%T&cCMVs_TE+1s0QZO3GoiTO*NnTr*Wo8Dq.'7D1Sm\?2L+`m804Lb?^nm%Yc=?$,?K&>,A&'63!Jg
%!PMMS(^[qN_<`f`b\G"OK*Bo\QraN_h68+A'C*ZY'ctH7"Rk_m3+SjW_DQ%EVm`,li%WrIH2Zr$O46kZ`l6";C)4)Y/OpHAOc'MM
%^2XHkOn/"c&sS&=c6Xg;?>nP5f7]pHL4OVR/fO;a-):+F$oDX8'5;<PY9XtI,1?CMlou9rgpO(f&'[P85B4uYNbKo2-LZfn'N]p\
%L-VW`6c5F%K=sG:SUW(hp1$H?5:qS6[J'9EQ_Cggd`5\hpnHC.3/Y]L<8Fg-^]-gcrr3u$i>P\oD",1T2n/Otp6/h[ao1>/_gLb-
%$XVSD=4<*e,&(DUMfbbBhX>r@c_o+&DM.5/g5PP#Z8XIoX!H,cfL]HD*Uf]niIX;uqlNuB0mP86>U`SHnE`5IY8)dAr^+?OVro<"
%j3%s_G5I?Hn,;dSX(I%,Frc)fSFff'kMXD4?h!uaT&&.-oge?W?FApZp=[]28'UgXmIc'6mO&Ai8#m')F[-`$AsMo3$+>)basV<k
%5!0iuGGB!GiGOls)W-PF+CV#27X9N&OlgPG#>2INP5)?*SK?:f=_2&Do0o]2^X%,)N.PI,^dbA`?_O:]Zeg(VhE.@]/:S^)?ER1`
%9nkptjtp1"bfFK"5<,=tY*1Vh6.Ij/@1u$i@j9Pa/3bq1DZm9edIt%qEUmn5QM:#?IV1ES5L6&OA8AOb5NU?'cUb.C,QZC%YHi_Q
%0Z@Idq\mb4%]AW#pI-1d8BEj^T5/KmmPGXUTn<^q=jA4K;,B;1.:*B8Ie&5Zp%.cNQ&#b_dE>qgJF/D-%pu7&_\l;&2SDh1)(Z'K
%Bs@eYf8XS3P-3+dH?Ot?84t]+i$gk"Ohlt;eippL9ed29G&GNVI*r*dMFul8`%H6T>'UN>PHXk'UPk:c`E_(2;Mfc7n;2-MQAkbd
%(^Lf.9uUi$kEP.%kK?TnS1GZ9o\>i!+UnHe9eo=i(>0Qr>/3Mtp7dg:mr[I$T(VE6aS)E,53a(]*Q8_0dF!qGH4m^-EG?[dh=)m_
%&c3i'cR9;/Zo!XmD:^"-T-^tUq$Ciheo";G_f#M'$bLL"S[:1U:7aX3qa=b+RJZJAG1!P.%`@mAe/IZ)a5I?dThP=ZPA,:aSr'iA
%qCk%>8a`AFRQSa(=ecXeSh_>'kX:!TC$_NI3^s$^)k;=#B$od*3)?=WfD70\Xc\*_CXM=KBS_C;&e!6pCe&l+H0"1<oldCYA4E;"
%'otX]C;g?#'2'+DN.e`XHQ>2Zf-Eq4f[G#c84#71,`0e[MDW`bkV(U=Z,BShm`J6*DV'X?Mk7:kOg7<[$K"J$Br^"8n=p!O*I5T9
%(0NkgeX0lLQDuU\I2[;X.Cn,pRalY^6W.c@mQ\P:SeE:nMF#0Mg^]*OqSGSCA*Q%&d]B(sB).Y<PXB4B5'\=<M\4[bZ8SEqCQeo^
%^m>ddb/9<H1m6kpj#Q]#Oe:Z9(tsiRm'F:r]slt@QXBOIjdt?-B,k6lkAAh(\OL!lqKSA^fYS>CfYWT@Rbh`4PbCr;kAAAW>B,YS
%1JSfI4$`*;1BqVgahf&/1BqgHg3I,Li$_LAMmI"(NkH1<KlP*P#d[cC'rR#CdX%N@OCNg_O&H8MG4OZ846f"@XC;-O/Eqe;-7&QN
%4B3!XK\t?)j%V@M.Kic^/Ioq2Th45eaA7t,<%6gm'eFFFXV0*hJ>P4eJ>1ABC66E?M@b;RLT$(N]nEX707bZ&d\IF^("G*jLOrX6
%MII=BVNOQ'4QfX\OMS9O,o4\\OIXHgq%2@"iqgl=.G*>.b@%MaSR-PX_GE_1Ia<>(.=oeYb'uuI0/lh9!(XXoH7G_).VZWlm&lt9
%;^/oZ#XsWK]2B:+YdT'3K]@,-)\t.Hfb4?R8a6g^]Cc!<0aVjQ<:eF558U;_s7W3HDNr3Rp;dfY[nl9:kbldn$tlf;M9nnh:>"2Q
%"K@j8cNlnCKjit[c\,K@N8(Mu)ogH('_a-T[5cP_!H['SK'Nk(gtm4dXaSd,-J67,_Abg%iRA/@>?^3K3,S%?mW^HCf0hPAK(09P
%?4cG_E@9NW>]H1hi=-Nc:P:i8:A_FYfVro/\n_<?7LHZ?Dn'ZZZA2I_ar`D4rp$EXkeQbOcolL9)9[X7N-4@MM"#!TYPkup]lm3e
%Y%bOW+LP!Jb6$HO6NR.iGY9_Y_=3F[2[hnUQU7NLf;5CKA:D^P`MZ5Y?8UHc5Np4uLV^I5*&9[?2U,qkU^k_oR.W5rM$IKGIE,gG
%"Sc/)&@./%lkIOpS&R.2>6.O.m?_u0?!Ojt=DXE+gP^ejq?K1Zp*W3;%af>+dt#(H3P'pK6cc9aE7W2ff.-2e.&'8$`0f3Pkeb6d
%U9IP@'9)]shU_SKha@.R7k55iEWIY5%!V';g+gtBBU6FDD$E_$5)8K)p^EtX&Ce!rmn`EMmb_p9.BlPbiPS5jf!XX*fh]Znf1IQY
%Vh&2ZXfO$h#3R[?d3?Yp&Kj(([S@JUd?<&+mf%Y3UjrDEImbXF#?:XfPiR'hhXt6LlHf2gs794gJ[augAYXV*+1Oi!dJ7;*T0JY?
%q4VALA@@d&@t_(O@Jf)"-!\IW'VgG#4E@0lPRi0Q1m6M52jHg++MW+IEF&m(0A<BkY(WTbOiX^s_1@cpqht@;1(eHtlHueQp$0r.
%??Lbi-6asSZ5G-G,$7s`R%7D'0#A(l\;iK!')k>#6U5m66(H"-83=>\EY/,hN+cp$[qi+[>e"L`jSA@^7gkOc5unG=7'7O6$f]VE
%jR:!eY)C1fXh-bT_"Wt@T.ajWq;]M6rop%>j'nlE]]REs?iT;-Ii2=UCT@n?rNhEWNB\qfQUjVpG3*Ug-_)t`G(4r)h`b8Tehu?o
%DT-PiS+")holoqASmV<nGBYqsEnins^'FQXk$lEN+Eb.sdP3Hd":WBq(iftAZT*MA407Iqr;5]W.WnBI^$Ag6efVFSmqSk&V9eS0
%HE/[k[\[oNqPE0M7Xp2M\mtNQ[]&9qB_"#s);!<L<8VA/=c2<H$(nKN8E"h&Z]KN%\>@[s=$_*8M_bKTgW"m]R@A&Ug0iJ6'sQ]Z
%eP'H>)O[0FD$dRf3`&-@rS$#6EMHPL\mp<;Hgq68%X[[(M.'45b7bYPA7rsYY-q]elFFf%B37<(h`F]e;kbCJ]VW,WX^X_Siu?"o
%k;*Td%98+=*d=gNc"RT-K/(Pt&dFl?C#Vk:i]n<J/SH/$!A!RuRmq,)9(eC&-[._PTL`aBgGE70>/fnHiU^Ajpj'l,_Eeq4H46)1
%.0il6?82@s:9(pboI1R1]Db,kq2J6E0"M'a!P)#;Oc1.V%%?0'TBm2u#GMuEM9qX2BB),7'%LN^/?H+OqKaR(@`;9%3uZNJ/8/.O
%@)OLE%E?CmYfY5Ni&#[\i,Z)(9QPa"S?V[!\?/*!F[AEPl@FO2FfkllZ7"?6mt.jP^s<AVo*]E6kff=?V6U$4U*D[&g3X0"#U[YZ
%oR9XY9J5Z'5/@T.`=3#CNm\G8/PMgo-3iY=bCh:8S73eWc>eDJosb;j/?m\!)dm/)LO2cq:J(5!&D6[n]V61qf"f3gi7*85_[nCU
%+?X=r<_@r(DGLu=nJnL"/o01q#o'C";'AQV3tPdYlUS<koNEaQcQ1W3.imRl>"M*Vc;AlL]:+2o`#1O1)f4"06bY^dYggP3lK7JA
%Lj)^7I1ho#0+`o9;pqgRS^\UhWW62/=3_;1GXr`P$gBY36Q"(9h\2Im:Y&s,k!Hc22-+-T2`[)U^lVM+q9V;s==fiu4*H$jU19Sn
%+.<sdS0EVNGP#&2o&U<4GTGHA*gDm8;]8_Q]+l_',9p<4eq>2#U/5t8`C3^ZAhX#c3C7j0-Pnk#Qc<iKXrA)L[VQ)I4D0N(m@t[a
%qFV:QFHV/8!d$J/E/KD[Anmsgn3j;%PFHC&46j1X+2Ji'"u,5i%8lgE+uF@O%dR.nRO)HU_+R#W#B8T-@]CEA_23<t)^PZ``M=PK
%d[rHP+\Tc8Zm%)I\9g7F8m2+HD*OkM^i8N0&T3F7Au_KV[Sb_=Faju.de*ek(JdpjaE#^"4)\A+KKoYL9D329d>V#80uYV!]29c6
%b8XH`:`,*3*E36_hTn5"VUh\K-&Y#@Y'K4P>q@edO./=rS!h]udj:(`Yea$##MUeib=9)CO>ZJQ$Jq<JUL(1dK`P@b/OifBT[o'a
%%qZC&3I)(*!\s-)eJ`6@Q'`L!s!o]O^+<e.i.u?!.KY275uens^Oe5mOc[[)pfSMVohhT#hD18u2#*L8K??"["2'^8+ClJS$:\AL
%q?qXZ`JH?hp"Ni398\7$?(>q[9p(f=l.p*4BQ[NIPn^VU0\"Zb"aXZ+l#8WBK(YR#"O.XYrG6Jc^dD.kDr>&@4_kZaYg=a*Qt@Yc
%:8GeH,>?8)4uE?U-X8&nX5F-l\h=Ag1$VGb,_>9.F/-@Ah!Zc!,Z:FQPrN!HNn=,'C0`:YV\*b'QDsuR<.?O'HFmX2_X'0'"6h@^
%]u<@L0A"SE%MtuFP\hI3?L:EGIbQeb\nQS^Xh)_SG14S:P<\&j=k:D>,$<N@Q=5jr\!Vi\#*Z[YN-Vd^@NAck-QHgE_\0j8CLG3(
%+8=Je2B/WC1RW,%#,UW;/tDG'QU=LuY"?,79;m@N2A^9E1-EuGSs6IKWoP;G2/BLc)OIe4`r`M6e+3)6a#BZ\7O,7j0C:eS&Z_u7
%g<L=29))&WQL'6.ctm[P@:2a[E,_B>o4TGY)jp:QaeIb,)dQ`+=j$A]b0<Ygi=rR8.8g['eG[]"A"kXNL>\ChY6=/]%oVO7="AF'
%A(l*8M7\E.U?r"ORPj3:lRkVkKp8pm2c0W4*;5>1Ah,5T(U6-%>b]Hd/M>!fANf&J(MYY>EX.g8%V)-&<)KYI=">S_GEk9^q,AHp
%gt/*bK1=jW3fqdU@l+KB%Qc5+KUp`s%T9m9mDEc55$jZn98=O[kPV#T9gVXbT\8:6?#W!K@nEi.(-d`H4Lf3?9pSZbl9uh%aCsT=
%\R=UQ[_LP'Vq,@b4KgpD=*N=b=E$VK:S)hkjcntkOSH+5c5)b`YqjgN,r]"EkQ/_pd]"ebY;Yc*XZi/i8)hkMIhEPT%[:K<cSQ:=
%KTf"A-o40=RWh]--Yn$ERpU<_M9$`d<GP,$=o85:\Qe[UKb,:,W<_t1*i(K1P&U46AlNH\jh6jsI$o_[p%Lsr/iuKs`[&3W$;k2/
%#\>eoh3dY%5H>CapJH!5X6Y4Pp1cI+p&r'HZe?;i4meHfQThM*)#A,K]OeF&_ST4FS%VV'*$@a7g(S%9*KTp@#MCWr3DF_I]'bW0
%:9EqtGe[Fk=RG-Ed_0)CN%1fZ&OQAq47p;F/9n[-W[E?ef]nbe2$]#u'?NAa*utr01m94T[<QlsmE#=']BP>^f:.u0e#U;\d-EU%
%I=g9sB:u[8$\;HNdugAq!U_lY*bM9m;.D]brq;_PkQ!?3S+EjK-gl,Y4M5"H^FfKck54YkZe)rU^\I!_k/ieg4T=m1e`BRc(Va<_
%hE:Z"e_?"s/e8c%?R,C;O7KKlX..;AJ%iJ(4M:X[c/0ZAB_fL)a3T50ma5,9!\KHXp]~>
%AI9_PrivateDataEnd
